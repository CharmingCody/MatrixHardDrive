import * as THREE from "../three.js-master/build/three.module.js";
import {ExtensionManager,The_Netspaces} from "./mhd_TheNetspacesLite.js"

var netspace=null;
var ComputerConstructor=function(that,lstPrograms){

	if(true==netspace.blnLoad3dWorldsOnStart){
		netspace.camera.updateMouse();getLoadObjectsConfiguration();var objectsIsland={};if(netspace.loadObjectsConfiguration.intPointLightIslandNumber<netspace.pointLightIslands.length)objectsIsland=netspace.pointLightIslands[netspace.loadObjectsConfiguration.intPointLightIslandNumber];var varietyManifolds3D=[];if(netspace.loadObjectsConfiguration.intPointLightIslandNumber<netspace.pointLightIslands.length)varietyManifolds3D=objectsIsland.varietyManifolds3D;var mat4transformation=netspace.mat4.create([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]);
		netspace.mat4.rotateY(mat4transformation,mat4transformation,toRadian(180));
		netspace.mat4.rotateX(mat4transformation,mat4transformation,toRadian(360-45));
		var arrVertices=[-3.218,-1.625,2.433,-3.292,-1.638,2.405,-3.226,-1.677,2.46,-2.935,-1.562,2.41,-2.849,-1.638,2.408,-2.844,-1.425,2.101,-3.069,-1.582,2.413,-3.006,-1.578,2.413,-3.004,-1.379,2.132,-2.935,-1.37,2.138,-3.131,-1.578,2.412,-3.13,-1.379,2.131,-3.294,-1.425,2.098,-3.206,-1.561,2.408,-3.091,-1.626,2.431,-2.916,-1.676,2.462,-2.923,-1.626,2.435,-3.204,-1.37,2.138,-3.067,-1.382,2.13,-2.763,-1.624,2.436,-2.837,-1.638,2.408,-2.771,-1.676,2.463,-2.481,-1.561,2.413,-2.394,-1.637,2.411,-2.389,-1.424,2.104,-2.614,-1.581,2.416,-2.551,-1.577,2.416,-2.549,-1.378,2.135,-2.677,-1.577,2.415,-2.675,-1.379,2.134,-2.839,-1.425,2.101,-2.751,-1.561,2.411,-2.636,-1.625,2.434,-2.461,-1.675,2.465,-2.468,-1.626,2.438,-2.479,-1.369,2.142,-2.75,-1.369,2.141,-2.612,-1.381,2.133,-2.309,-1.624,2.439,-2.383,-1.637,2.411,-2.316,-1.675,2.466,-2.026,-1.56,2.416,-1.94,-1.636,2.414,-1.933,-1.423,2.107,-2.159,-1.581,2.419,-2.096,-1.576,2.419,-2.095,-1.378,2.138,-2.025,-1.369,2.144,-2.222,-1.576,2.418,-2.221,-1.378,2.137,-2.385,-1.424,2.104,-2.296,-1.56,2.414,-2.182,-1.625,2.437,-2.006,-1.674,2.468,-2.014,-1.625,2.441,-2.295,-1.368,2.144,-2.158,-1.381,2.136,2.364,-0.124,0.326,2.381,-0.126,0.319,2.366,-0.122,0.313,2.371,-0.125,0.328,2.366,-0.128,0.334,2.373,-0.13,0.335,2.385,-0.136,0.336,2.363,-0.133,0.339,2.354,-0.143,0.343,2.369,-0.145,0.346,2.359,-0.13,0.335,2.348,-0.128,0.326,2.338,-0.143,0.331,2.391,-0.133,0.317,2.371,-0.124,0.304,2.351,-0.127,0.308,2.371,-0.137,0.342,3.54,4.961,-0.225,3.547,0.291,-0.233,3.28,0.354,-0.235,2.777,0.353,-0.238,3.22,4.53,-0.073,-3.173,0.542,-0.122,3.227,0.552,-0.08,-3.179,4.519,-0.115,-3.034,-0.376,0.198,-3.034,-0.393,0.192,-3.035,-0.491,0.33,-3.46,-0.505,0.294,-3.034,-0.504,0.297,-3.034,-0.505,0.279,-3.035,-0.48,0.345,-3.035,-0.467,0.356,-3.034,-0.361,0.206,-3.035,-0.451,0.365,-3.034,-0.347,0.218,-3.035,-0.434,0.371,-3.034,-0.336,0.232,-3.035,-0.416,0.373,-3.034,-0.328,0.248,-3.035,-0.398,0.372,-3.035,-0.323,0.266,-3.035,-0.381,0.367,-3.035,-0.322,0.284,-3.035,-0.365,0.359,-3.035,-0.324,0.302,-3.035,-0.35,0.348,-3.035,-0.33,0.319,-3.035,-0.339,0.334,-3.035,-0.499,0.314,-3.034,-0.411,0.19,-3.034,-0.429,0.191,-3.034,-0.447,0.196,-3.034,-0.503,0.261,-3.034,-0.477,0.215,-3.034,-0.497,0.244,-3.034,-0.489,0.228,-3.034,-0.463,0.204,-3.46,-0.447,0.193,-1.365,-1.618,2.44,-1.453,-1.632,2.414,-1.426,-1.671,2.469,1.006,-1.628,2.43,1.027,-1.629,2.43,1.033,-1.416,2.122,-0.212,-1.575,2.428,0.143,-1.57,2.43,0.144,-1.372,2.149,0.485,-1.557,2.43,0.486,-1.364,2.156,-0.568,-1.571,2.425,-0.566,-1.373,2.144,-1.474,-1.417,2.108,-1.276,-1.364,2.148,-0.908,-1.366,2.147,-1.474,-1.42,2.106,1.031,-1.63,2.426,-1.427,-1.675,2.467,-1.476,-1.633,2.414,-1.48,-1.635,2.41,-0.437,-1.62,2.445,0.975,-1.668,2.484,0.977,-1.671,2.483,-1.279,-1.555,2.417,-0.91,-1.559,2.421,0.83,-1.553,2.431,0.832,-1.361,2.16,0.915,-1.617,2.457,-0.211,-1.375,2.145,-2.843,-1.638,2.402,-3.226,-1.68,2.459,-3.293,-1.642,2.404,-2.915,-1.679,2.461,-2.389,-1.637,2.406,-2.771,-1.679,2.462,-2.461,-1.679,2.464,-1.935,-1.637,2.409,-2.317,-1.679,2.465,-2.006,-1.678,2.467,1.112,-1.618,2.461,1.038,-1.631,2.434,1.104,-1.67,2.488,1.394,-1.555,2.439,1.481,-1.631,2.437,1.486,-1.418,2.129,1.261,-1.575,2.441,1.324,-1.571,2.441,1.326,-1.372,2.16,1.395,-1.363,2.167,1.198,-1.571,2.44,1.2,-1.372,2.159,1.036,-1.418,2.126,1.124,-1.554,2.437,1.487,-1.631,2.43,1.104,-1.673,2.487,1.239,-1.619,2.459,1.414,-1.669,2.49,1.414,-1.673,2.489,1.407,-1.62,2.463,1.125,-1.363,2.166,1.263,-1.375,2.158,-1.856,-1.623,2.441,-1.929,-1.636,2.414,-1.863,-1.674,2.469,-1.706,-1.58,2.422,-1.643,-1.575,2.422,-1.641,-1.377,2.141,-1.769,-1.576,2.421,-1.768,-1.377,2.14,-1.843,-1.559,2.417,-1.574,-1.56,2.419,-1.56,-1.624,2.444,-1.488,-1.634,2.416,-1.482,-1.423,2.109,-1.864,-1.678,2.468,-1.728,-1.624,2.44,-1.553,-1.674,2.471,-1.553,-1.677,2.47,-1.57,-1.368,2.148,-1.842,-1.368,2.147,-1.704,-1.38,2.139,1.353,-1.418,2.128,1.15,-1.418,2.127,-1.734,-1.423,2.108,1.567,-1.618,2.464,1.493,-1.631,2.437,1.559,-1.669,2.491,1.849,-1.554,2.442,1.936,-1.63,2.44,1.941,-1.417,2.132,1.716,-1.574,2.444,1.779,-1.57,2.444,1.781,-1.372,2.163,1.85,-1.363,2.17,1.653,-1.57,2.443,1.655,-1.372,2.162,1.491,-1.418,2.129,1.579,-1.554,2.44,1.936,-1.633,2.438,1.559,-1.672,2.49,1.694,-1.618,2.462,1.869,-1.668,2.493,1.87,-1.672,2.492,1.862,-1.619,2.466,1.581,-1.362,2.169,1.718,-1.374,2.161,1.827,-1.417,2.131,2.05,-1.638,2.488,1.978,-1.653,2.472,2.043,-1.671,2.499,2.202,-1.595,2.477,2.265,-1.591,2.478,2.265,-1.505,2.356,2.139,-1.592,2.477,2.139,-1.505,2.356,1.976,-1.551,2.322,2.02,-1.606,2.46,2.427,-1.551,2.325,2.421,-1.652,2.475,2.427,-1.654,2.471,2.044,-1.674,2.497,1.978,-1.656,2.47,2.355,-1.671,2.501,2.355,-1.674,2.499,2.347,-1.635,2.49,2.378,-1.605,2.462,2.334,-1.579,2.481,2.336,-1.496,2.363,2.065,-1.579,2.479,2.065,-1.495,2.362,2.202,-1.508,2.354,2.505,-1.637,2.491,2.433,-1.652,2.475,2.497,-1.67,2.502,2.656,-1.594,2.48,2.719,-1.591,2.481,2.72,-1.504,2.359,2.789,-1.578,2.484,2.79,-1.495,2.366,2.594,-1.591,2.48,2.594,-1.505,2.358,2.475,-1.605,2.463,2.881,-1.55,2.328,2.875,-1.652,2.478,2.881,-1.653,2.474,2.498,-1.674,2.5,2.809,-1.67,2.504,2.809,-1.673,2.502,2.801,-1.634,2.493,2.833,-1.604,2.465,2.52,-1.578,2.482,2.519,-1.495,2.365,2.657,-1.507,2.357,2.959,-1.636,2.494,2.887,-1.651,2.478,2.951,-1.67,2.505,3.11,-1.593,2.483,3.173,-1.59,2.484,3.174,-1.504,2.362,3.243,-1.578,2.487,3.244,-1.495,2.369,3.048,-1.59,2.483,3.048,-1.504,2.361,2.929,-1.604,2.466,3.333,-1.549,2.331,3.329,-1.651,2.481,3.33,-1.654,2.479,2.953,-1.673,2.503,3.263,-1.669,2.507,3.264,-1.672,2.505,3.256,-1.634,2.496,3.287,-1.603,2.468,2.974,-1.578,2.485,2.973,-1.494,2.368,3.111,-1.506,2.36,2.506,-1.503,2.302,2.434,-1.518,2.285,2.498,-1.537,2.312,2.657,-1.46,2.291,2.72,-1.457,2.292,2.721,-1.371,2.17,2.79,-1.444,2.294,2.791,-1.361,2.177,2.595,-1.457,2.291,2.595,-1.371,2.169,2.428,-1.417,2.136,2.476,-1.471,2.273,2.882,-1.416,2.139,2.876,-1.518,2.288,2.882,-1.519,2.284,2.5,-1.54,2.31,2.428,-1.52,2.281,2.81,-1.536,2.314,2.81,-1.539,2.312,2.802,-1.501,2.304,2.834,-1.47,2.275,2.521,-1.444,2.292,2.52,-1.361,2.176,2.658,-1.373,2.168,2.051,-1.504,2.299,1.979,-1.519,2.282,2.044,-1.537,2.309,2.203,-1.461,2.288,2.266,-1.457,2.289,2.266,-1.371,2.167,2.336,-1.445,2.291,2.337,-1.362,2.174,2.14,-1.458,2.288,2.14,-1.372,2.166,1.977,-1.418,2.133,2.021,-1.472,2.27,2.422,-1.518,2.285,2.045,-1.54,2.307,1.979,-1.522,2.281,2.356,-1.537,2.311,2.356,-1.54,2.309,2.348,-1.501,2.301,2.379,-1.471,2.273,2.066,-1.445,2.289,2.066,-1.362,2.173,2.203,-1.374,2.165,2.96,-1.503,2.305,2.888,-1.517,2.288,2.952,-1.536,2.315,3.111,-1.459,2.294,3.174,-1.456,2.295,3.175,-1.37,2.173,3.244,-1.444,2.297,3.245,-1.361,2.18,3.049,-1.456,2.294,3.049,-1.37,2.172,2.93,-1.47,2.276,3.334,-1.415,2.142,3.33,-1.517,2.291,3.331,-1.52,2.289,2.954,-1.539,2.313,3.264,-1.535,2.317,3.265,-1.538,2.315,3.257,-1.5,2.306,3.288,-1.47,2.278,2.975,-1.444,2.295,2.974,-1.36,2.179,3.112,-1.373,2.171,2.343,-1.356,2.1,2.302,-1.372,2.078,2.319,-1.407,2.127,2.82,-1.312,2.082,2.967,-1.308,2.083,2.968,-1.109,1.802,2.673,-1.308,2.081,2.675,-1.11,1.8,2.299,-1.153,1.767,2.382,-1.1,1.806,2.533,-1.102,1.804,3.336,-1.154,1.772,3.328,-1.372,2.086,3.333,-1.371,2.078,2.318,-1.411,2.126,2.294,-1.368,2.066,2.295,-1.156,1.765,2.768,-1.356,2.1,3.311,-1.406,2.134,3.312,-1.409,2.132,2.38,-1.291,2.076,2.532,-1.296,2.078,3.11,-1.101,1.808,3.25,-1.291,2.082,3.252,-1.099,1.81,3.108,-1.295,2.081,3.286,-1.356,2.107,-3.245,-1.365,2.064,-3.286,-1.381,2.041,-3.269,-1.416,2.091,-2.768,-1.321,2.046,-2.621,-1.316,2.046,-2.619,-1.118,1.765,-2.914,-1.317,2.044,-2.913,-1.118,1.763,-3.288,-1.162,1.731,-3.206,-1.109,1.769,-3.054,-1.111,1.768,-2.25,-1.163,1.736,-2.26,-1.381,2.05,-2.251,-1.376,2.036,-3.27,-1.419,2.089,-3.29,-1.381,2.035,-3.288,-1.165,1.729,-2.82,-1.365,2.064,-2.277,-1.415,2.097,-2.276,-1.418,2.096,-3.207,-1.3,2.039,-3.056,-1.305,2.041,-2.478,-1.11,1.771,-2.337,-1.3,2.045,-2.336,-1.108,1.774,-2.48,-1.304,2.045,-2.301,-1.365,2.071,2.822,-1.112,1.799,-2.766,-1.121,1.763,-2.171,-1.363,2.07,-2.245,-1.376,2.043,-2.178,-1.414,2.098,-1.889,-1.3,2.048,-1.802,-1.376,2.046,-1.798,-1.163,1.738,-2.021,-1.32,2.051,-1.958,-1.315,2.051,-1.957,-1.117,1.77,-2.084,-1.316,2.05,-2.083,-1.117,1.769,-2.244,-1.16,1.737,-2.158,-1.299,2.046,-1.796,-1.376,2.04,-2.179,-1.418,2.097,-2.044,-1.364,2.069,-1.868,-1.414,2.1,-1.868,-1.417,2.099,-1.876,-1.364,2.073,-1.886,-1.108,1.777,-2.157,-1.108,1.776,-2.02,-1.12,1.768,-2.059,-1.163,1.737,-1.717,-1.362,2.073,-1.79,-1.375,2.046,-1.724,-1.414,2.101,-1.434,-1.299,2.051,-1.348,-1.375,2.049,-1.345,-1.159,1.743,-1.567,-1.319,2.054,-1.504,-1.315,2.054,-1.502,-1.116,1.772,-1.433,-1.107,1.779,-1.63,-1.315,2.053,-1.629,-1.116,1.772,-1.791,-1.162,1.738,-1.704,-1.298,2.049,-1.342,-1.375,2.043,-1.725,-1.417,2.099,-1.589,-1.363,2.072,-1.414,-1.413,2.103,-1.414,-1.417,2.102,-1.421,-1.364,2.076,-1.703,-1.107,1.779,-1.565,-1.119,1.771,-1.53,-1.162,1.74,-1.339,-1.162,1.741,-1.262,-1.362,2.076,-1.336,-1.375,2.049,-1.269,-1.413,2.104,-0.979,-1.298,2.054,-0.893,-1.374,2.052,-0.891,-1.158,1.746,-1.112,-1.318,2.057,-1.049,-1.314,2.056,-1.048,-1.115,1.775,-0.978,-1.107,1.782,-1.175,-1.314,2.056,-1.174,-1.116,1.775,-1.249,-1.298,2.052,-0.887,-1.374,2.046,-1.27,-1.416,2.102,-1.135,-1.362,2.075,-0.959,-1.412,2.106,-0.959,-1.416,2.104,-0.967,-1.363,2.079,-1.248,-1.106,1.782,-1.111,-1.118,1.774,-1.076,-1.161,1.743,-0.884,-1.161,1.744,-0.808,-1.361,2.079,-0.881,-1.374,2.052,-0.815,-1.412,2.107,-0.525,-1.298,2.057,-0.438,-1.373,2.055,-0.436,-1.157,1.749,-0.658,-1.318,2.06,-0.595,-1.313,2.059,-0.593,-1.115,1.778,-0.721,-1.313,2.059,-0.72,-1.115,1.778,-0.795,-1.297,2.055,-0.433,-1.374,2.049,-0.816,-1.416,2.105,-0.68,-1.362,2.078,-0.505,-1.412,2.109,-0.505,-1.415,2.107,-0.512,-1.362,2.082,-0.523,-1.105,1.785,-0.794,-1.105,1.785,-0.656,-1.118,1.777,-0.621,-1.161,1.746,-0.431,-1.16,1.747,-0.353,-1.36,2.082,-0.427,-1.373,2.055,-0.361,-1.411,2.11,-0.071,-1.297,2.06,0.016,-1.373,2.058,0.023,-1.16,1.75,-0.204,-1.317,2.063,-0.141,-1.313,2.062,-0.139,-1.114,1.781,-0.07,-1.105,1.788,-0.267,-1.313,2.062,-0.265,-1.114,1.781,-0.426,-1.157,1.749,-0.34,-1.296,2.058,0.021,-1.373,2.052,-0.361,-1.415,2.108,-0.226,-1.361,2.08,-0.051,-1.411,2.112,-0.051,-1.414,2.11,-0.058,-1.361,2.085,-0.34,-1.105,1.788,-0.202,-1.117,1.78,-0.167,-1.16,1.749,0.101,-1.359,2.085,0.027,-1.373,2.058,0.094,-1.411,2.113,0.384,-1.296,2.063,0.47,-1.372,2.061,0.477,-1.159,1.753,0.251,-1.316,2.066,0.314,-1.312,2.065,0.315,-1.113,1.784,0.385,-1.104,1.791,0.188,-1.312,2.064,0.189,-1.114,1.783,0.114,-1.295,2.061,0.476,-1.372,2.055,0.093,-1.414,2.111,0.228,-1.36,2.083,0.404,-1.41,2.114,0.404,-1.414,2.113,0.396,-1.361,2.088,0.115,-1.104,1.79,0.252,-1.116,1.783,0.195,-1.159,1.751,0.555,-1.359,2.088,0.481,-1.372,2.061,0.548,-1.41,2.116,0.838,-1.295,2.066,0.924,-1.371,2.064,0.929,-1.158,1.756,0.705,-1.315,2.069,0.768,-1.311,2.068,0.77,-1.113,1.787,0.839,-1.104,1.794,0.642,-1.311,2.067,0.643,-1.113,1.786,0.568,-1.295,2.064,0.93,-1.371,2.058,0.547,-1.413,2.114,0.683,-1.359,2.086,0.858,-1.409,2.117,0.858,-1.413,2.116,0.85,-1.36,2.091,0.569,-1.103,1.793,0.706,-1.115,1.785,0.714,-1.159,1.755,1.01,-1.358,2.091,0.936,-1.371,2.064,1.002,-1.409,2.119,1.292,-1.295,2.069,1.379,-1.37,2.067,1.386,-1.157,1.759,1.159,-1.315,2.072,1.222,-1.31,2.071,1.224,-1.112,1.79,1.293,-1.103,1.797,1.096,-1.311,2.07,1.098,-1.112,1.789,0.934,-1.158,1.756,1.022,-1.294,2.067,1.384,-1.371,2.061,1.002,-1.413,2.117,1.137,-1.359,2.089,1.312,-1.409,2.12,1.312,-1.412,2.119,1.305,-1.359,2.094,1.023,-1.103,1.796,1.161,-1.115,1.788,1.196,-1.158,1.758,1.464,-1.357,2.094,1.39,-1.37,2.067,1.457,-1.409,2.122,1.747,-1.294,2.072,1.833,-1.37,2.07,1.835,-1.154,1.764,1.614,-1.314,2.075,1.676,-1.31,2.074,1.678,-1.111,1.793,1.748,-1.102,1.8,1.551,-1.31,2.073,1.552,-1.111,1.792,1.477,-1.293,2.07,1.839,-1.37,2.064,1.456,-1.412,2.12,1.591,-1.358,2.092,1.767,-1.408,2.123,1.767,-1.411,2.122,1.759,-1.358,2.097,1.478,-1.102,1.799,1.615,-1.114,1.791,1.65,-1.157,1.761,1.84,-1.157,1.762,1.918,-1.356,2.097,1.844,-1.37,2.07,1.911,-1.408,2.125,2.201,-1.293,2.075,2.287,-1.369,2.073,2.068,-1.313,2.077,2.131,-1.309,2.077,2.132,-1.11,1.796,2.202,-1.102,1.803,2.005,-1.309,2.076,2.006,-1.111,1.795,1.845,-1.154,1.764,1.931,-1.293,2.073,1.91,-1.411,2.123,2.045,-1.357,2.095,2.221,-1.407,2.126,2.221,-1.411,2.125,2.213,-1.358,2.1,1.932,-1.101,1.802,2.069,-1.113,1.794,2.03,-1.156,1.763,-3.216,-1.104,1.695,-3.288,-1.116,1.666,-3.232,-1.156,1.722,-2.561,-1.04,1.675,-2.463,-1.115,1.672,-2.462,-0.9,1.367,-2.872,-1.061,1.677,-2.755,-1.056,1.677,-2.753,-0.858,1.396,-2.989,-1.057,1.675,-2.987,-0.858,1.394,-3.286,-0.902,1.362,-3.191,-1.039,1.671,-3.188,-0.849,1.401,-3.1,-0.851,1.399,-2.458,-0.903,1.365,-2.459,-1.117,1.668,-3.235,-1.159,1.721,-3.288,-1.121,1.666,-3.286,-0.905,1.36,-2.913,-1.105,1.694,-2.518,-1.154,1.727,-2.517,-1.158,1.726,-2.535,-1.105,1.7,-3.102,-1.044,1.672,-2.641,-0.85,1.402,-2.56,-0.848,1.404,-2.642,-1.044,1.675,-2.87,-0.861,1.393,-2.381,-1.103,1.7,-2.455,-1.116,1.673,-2.388,-1.154,1.728,-2.098,-1.04,1.678,-2.012,-1.116,1.676,-2.009,-0.9,1.37,-2.231,-1.06,1.681,-2.168,-1.055,1.68,-2.166,-0.857,1.399,-2.097,-0.848,1.406,-2.294,-1.056,1.68,-2.293,-0.857,1.399,-2.368,-1.039,1.676,-2.006,-1.116,1.67,-2.389,-1.158,1.726,-2.253,-1.104,1.699,-2.078,-1.154,1.73,-2.078,-1.157,1.728,-2.086,-1.104,1.703,-2.367,-0.848,1.406,-2.23,-0.86,1.398,-2.12,-0.903,1.368,-2.003,-0.902,1.368,-1.926,-1.102,1.703,-2,-1.115,1.676,-1.934,-1.154,1.731,-1.777,-1.059,1.684,-1.714,-1.055,1.683,-1.712,-0.856,1.402,-1.644,-1.039,1.681,-1.642,-0.847,1.409,-1.84,-1.055,1.683,-1.838,-0.856,1.402,-1.914,-1.038,1.679,-1.631,-1.103,1.706,-1.559,-1.114,1.678,-1.55,-0.902,1.371,-1.552,-1.115,1.673,-1.935,-1.157,1.729,-1.799,-1.103,1.702,-1.624,-1.153,1.733,-1.624,-1.156,1.731,-1.913,-0.847,1.408,-1.775,-0.859,1.401,-1.666,-0.902,1.371,-1.472,-1.101,1.706,-1.546,-1.115,1.679,-1.48,-1.153,1.734,-1.19,-1.038,1.684,-1.103,-1.114,1.682,-1.096,-0.901,1.374,-1.323,-1.058,1.687,-1.26,-1.054,1.686,-1.258,-0.855,1.405,-1.386,-1.054,1.686,-1.384,-0.856,1.405,-1.46,-1.038,1.682,-1.098,-1.114,1.676,-1.48,-1.156,1.732,-1.345,-1.102,1.704,-1.17,-1.152,1.735,-1.17,-1.156,1.734,-1.177,-1.103,1.709,-1.187,-0.846,1.412,-1.459,-0.846,1.411,-1.321,-0.858,1.404,-1.191,-0.901,1.374,-1.018,-1.101,1.709,-1.092,-1.114,1.682,-1.026,-1.152,1.737,-0.736,-1.038,1.687,-0.649,-1.113,1.685,-0.647,-0.897,1.379,-0.869,-1.058,1.69,-0.806,-1.053,1.689,-0.804,-0.855,1.408,-0.931,-1.053,1.688,-0.93,-0.855,1.407,-1.006,-1.037,1.685,-0.644,-1.114,1.679,-1.026,-1.156,1.735,-0.891,-1.102,1.707,-0.716,-1.151,1.738,-0.715,-1.155,1.737,-0.723,-1.102,1.712,-0.733,-0.845,1.415,-1.004,-0.845,1.414,-0.867,-0.858,1.406,-0.758,-0.9,1.377,-0.641,-0.9,1.377,-0.564,-1.1,1.712,-0.638,-1.113,1.685,-0.571,-1.151,1.74,-0.281,-1.037,1.69,-0.195,-1.113,1.688,-0.193,-0.897,1.382,-0.414,-1.057,1.693,-0.352,-1.052,1.692,-0.35,-0.854,1.411,-0.28,-0.845,1.418,-0.477,-1.053,1.691,-0.476,-0.854,1.41,-0.551,-1.036,1.688,-0.189,-1.113,1.682,-0.572,-1.155,1.738,-0.437,-1.101,1.71,-0.261,-1.151,1.741,-0.261,-1.154,1.74,-0.269,-1.101,1.715,-0.55,-0.845,1.417,-0.413,-0.857,1.409,-0.304,-0.9,1.379,-0.187,-0.9,1.38,-0.11,-1.099,1.715,-0.184,-1.113,1.688,-0.117,-1.151,1.743,0.173,-1.036,1.693,0.259,-1.112,1.691,0.261,-0.896,1.385,0.04,-1.056,1.696,0.103,-1.052,1.695,0.104,-0.853,1.414,0.174,-0.844,1.421,-0.023,-1.052,1.694,-0.022,-0.853,1.413,-0.097,-1.035,1.691,0.265,-1.112,1.685,-0.118,-1.154,1.741,0.017,-1.1,1.713,0.193,-1.15,1.744,0.193,-1.154,1.743,0.185,-1.101,1.718,-0.096,-0.844,1.42,0.041,-0.856,1.412,0.095,-0.899,1.382,0.267,-0.899,1.383,0.344,-1.099,1.718,0.27,-1.112,1.691,0.337,-1.15,1.746,0.627,-1.036,1.696,0.713,-1.111,1.694,0.716,-0.895,1.388,0.494,-1.055,1.698,0.557,-1.051,1.698,0.558,-0.853,1.417,0.431,-1.051,1.697,0.432,-0.853,1.416,0.357,-1.035,1.694,0.719,-1.112,1.688,0.336,-1.153,1.744,0.471,-1.099,1.716,0.647,-1.149,1.747,0.647,-1.153,1.746,0.639,-1.1,1.721,0.629,-0.843,1.424,0.357,-0.843,1.423,0.495,-0.855,1.415,0.605,-0.898,1.385,0.721,-0.898,1.386,0.798,-1.098,1.721,0.724,-1.111,1.694,0.791,-1.149,1.749,1.081,-1.035,1.699,1.167,-1.11,1.697,1.169,-0.895,1.391,0.948,-1.055,1.701,1.011,-1.05,1.701,1.012,-0.852,1.42,1.082,-0.843,1.427,0.885,-1.05,1.7,0.886,-0.852,1.419,0.811,-1.034,1.697,1.173,-1.111,1.691,0.79,-1.153,1.747,0.925,-1.099,1.719,1.101,-1.149,1.75,1.101,-1.152,1.749,1.093,-1.099,1.723,0.811,-0.842,1.426,0.949,-0.855,1.418,1.003,-0.898,1.388,1.175,-0.897,1.389,1.252,-1.097,1.724,1.179,-1.11,1.697,1.245,-1.148,1.751,1.535,-1.034,1.702,1.622,-1.11,1.7,1.629,-0.897,1.392,1.402,-1.054,1.704,1.465,-1.05,1.704,1.467,-0.851,1.423,1.339,-1.05,1.703,1.34,-0.851,1.422,1.265,-1.033,1.7,1.627,-1.11,1.694,1.244,-1.152,1.75,1.38,-1.098,1.722,1.555,-1.148,1.753,1.555,-1.151,1.752,1.548,-1.098,1.726,1.537,-0.842,1.43,1.266,-0.842,1.429,1.404,-0.854,1.421,1.457,-0.897,1.391,1.707,-1.096,1.727,1.633,-1.11,1.7,1.699,-1.148,1.754,1.989,-1.033,1.705,2.076,-1.109,1.703,2.078,-0.893,1.397,1.856,-1.053,1.707,1.919,-1.049,1.707,1.921,-0.85,1.426,1.99,-0.841,1.433,1.793,-1.049,1.706,1.795,-0.851,1.425,1.719,-1.033,1.703,2.081,-1.109,1.697,1.698,-1.151,1.753,1.834,-1.097,1.725,2.009,-1.147,1.756,2.009,-1.151,1.755,2.002,-1.098,1.729,1.72,-0.841,1.432,1.858,-0.853,1.424,1.967,-0.896,1.394,2.084,-0.896,1.395,2.161,-1.096,1.73,2.087,-1.109,1.703,2.153,-1.147,1.757,2.444,-1.032,1.708,2.53,-1.108,1.706,2.535,-0.895,1.398,2.31,-1.052,1.71,2.373,-1.048,1.71,2.375,-0.85,1.429,2.444,-0.841,1.436,2.248,-1.048,1.709,2.249,-0.85,1.428,2.174,-1.032,1.706,2.533,-1.11,1.702,2.153,-1.15,1.756,2.288,-1.096,1.728,2.464,-1.146,1.759,2.464,-1.15,1.758,2.456,-1.097,1.732,2.175,-0.84,1.435,2.312,-0.853,1.427,2.403,-0.895,1.397,2.604,-1.095,1.733,2.534,-1.107,1.704,2.589,-1.146,1.76,3.24,-1.03,1.713,3.334,-1.106,1.71,3.336,-0.891,1.405,2.938,-1.051,1.714,3.052,-1.047,1.714,3.053,-0.849,1.433,2.825,-1.047,1.713,2.826,-0.849,1.432,2.536,-0.892,1.4,2.628,-1.03,1.708,2.631,-0.84,1.439,2.717,-0.842,1.436,3.336,-0.894,1.403,3.334,-1.11,1.709,2.586,-1.15,1.759,2.898,-1.096,1.732,3.281,-1.145,1.765,3.282,-1.149,1.763,3.264,-1.096,1.738,2.715,-1.035,1.71,3.162,-0.841,1.439,3.241,-0.839,1.441,3.161,-1.034,1.713,2.94,-0.852,1.431,-3.2,-0.844,1.326,-3.281,-0.858,1.3,-3.237,-0.895,1.354,-2.645,-0.814,1.299,-2.573,-0.857,1.305,-2.568,-0.64,0.998,-2.924,-0.8,1.308,-2.822,-0.796,1.307,-2.821,-0.598,1.026,-3.025,-0.796,1.306,-3.024,-0.598,1.025,-3.286,-0.644,0.991,-3.211,-0.815,1.295,-2.564,-0.643,0.996,-2.564,-0.855,1.296,-3.238,-0.899,1.352,-3.284,-0.86,1.297,-2.96,-0.845,1.325,-2.617,-0.894,1.358,-2.617,-0.898,1.356,-2.654,-0.845,1.331,-2.689,-0.779,1.305,-2.686,-0.588,1.034,-3.166,-0.779,1.302,-3.165,-0.588,1.032,-2.922,-0.6,1.024,-2.896,-0.644,0.994,-2.482,-0.843,1.331,-2.556,-0.856,1.304,-2.49,-0.894,1.358,-2.199,-0.779,1.309,-2.113,-0.855,1.307,-2.107,-0.642,0.999,-2.333,-0.799,1.311,-2.27,-0.795,1.311,-2.268,-0.597,1.03,-2.199,-0.588,1.037,-2.395,-0.795,1.31,-2.394,-0.597,1.029,-2.555,-0.64,0.998,-2.47,-0.779,1.307,-2.107,-0.856,1.301,-2.49,-0.897,1.357,-2.355,-0.844,1.329,-2.18,-0.893,1.36,-2.179,-0.897,1.359,-2.187,-0.844,1.333,-2.468,-0.587,1.036,-2.331,-0.6,1.028,-2.37,-0.643,0.997,-2.028,-0.842,1.334,-2.102,-0.855,1.307,-2.035,-0.893,1.361,-1.745,-0.779,1.312,-1.659,-0.855,1.31,-1.652,-0.642,1.002,-1.878,-0.799,1.314,-1.815,-0.794,1.314,-1.814,-0.596,1.033,-1.744,-0.587,1.04,-1.941,-0.795,1.313,-1.94,-0.596,1.032,-2.101,-0.639,1.001,-2.015,-0.778,1.31,-1.653,-0.855,1.304,-2.036,-0.897,1.36,-1.901,-0.843,1.332,-1.725,-0.893,1.363,-1.725,-0.896,1.362,-1.733,-0.843,1.336,-2.014,-0.587,1.039,-1.877,-0.599,1.031,-1.916,-0.642,1,-1.574,-0.841,1.337,-1.647,-0.854,1.31,-1.581,-0.893,1.364,-1.291,-0.778,1.315,-1.204,-0.854,1.313,-1.197,-0.641,1.005,-1.424,-0.798,1.317,-1.361,-0.794,1.317,-1.359,-0.595,1.036,-1.487,-0.794,1.316,-1.485,-0.595,1.035,-1.646,-0.639,1.004,-1.561,-0.777,1.313,-1.199,-0.854,1.307,-1.582,-0.896,1.363,-1.446,-0.842,1.335,-1.271,-0.892,1.366,-1.271,-0.896,1.365,-1.278,-0.843,1.339,-1.289,-0.586,1.043,-1.56,-0.586,1.042,-1.422,-0.598,1.034,-1.461,-0.641,1.003,-1.119,-0.841,1.34,-1.193,-0.854,1.313,-1.127,-0.892,1.367,-0.837,-0.777,1.318,-0.75,-0.853,1.316,-0.743,-0.64,1.008,-0.97,-0.797,1.32,-0.907,-0.793,1.32,-0.905,-0.595,1.039,-0.836,-0.586,1.046,-1.033,-0.793,1.319,-1.031,-0.595,1.038,-1.107,-0.777,1.316,-0.745,-0.853,1.31,-1.127,-0.895,1.366,-0.992,-0.841,1.338,-0.817,-0.891,1.369,-0.817,-0.895,1.368,-0.824,-0.842,1.342,-1.106,-0.585,1.045,-0.968,-0.597,1.037,-1.026,-0.641,1.006,-0.665,-0.84,1.343,-0.739,-0.853,1.316,-0.672,-0.891,1.37,-0.383,-0.777,1.321,-0.296,-0.852,1.319,-0.29,-0.639,1.011,-0.515,-0.797,1.323,-0.453,-0.792,1.323,-0.451,-0.594,1.042,-0.578,-0.792,1.322,-0.577,-0.594,1.041,-0.652,-0.776,1.319,-0.29,-0.853,1.313,-0.673,-0.895,1.369,-0.538,-0.841,1.341,-0.362,-0.891,1.372,-0.362,-0.894,1.371,-0.37,-0.841,1.345,-0.38,-0.584,1.049,-0.652,-0.584,1.048,-0.514,-0.597,1.04,-0.553,-0.64,1.009,-0.211,-0.839,1.346,-0.285,-0.852,1.319,-0.218,-0.89,1.373,0.072,-0.776,1.324,0.158,-0.852,1.322,0.164,-0.639,1.014,-0.061,-0.796,1.326,0.002,-0.792,1.326,0.003,-0.593,1.045,0.073,-0.584,1.052,-0.124,-0.792,1.325,-0.123,-0.593,1.044,-0.284,-0.636,1.013,-0.198,-0.775,1.322,0.164,-0.852,1.316,-0.219,-0.894,1.372,-0.084,-0.84,1.344,0.092,-0.89,1.375,0.092,-0.893,1.374,0.084,-0.84,1.348,-0.197,-0.584,1.051,-0.06,-0.596,1.043,-0.117,-0.639,1.012,0.243,-0.838,1.349,0.169,-0.852,1.322,0.236,-0.89,1.376,0.526,-0.775,1.327,0.612,-0.851,1.325,0.619,-0.638,1.017,0.393,-0.795,1.329,0.456,-0.791,1.329,0.457,-0.592,1.048,0.33,-0.791,1.328,0.331,-0.593,1.047,0.17,-0.636,1.016,0.256,-0.774,1.324,0.618,-0.851,1.319,0.235,-0.893,1.375,0.37,-0.839,1.347,0.546,-0.889,1.378,0.546,-0.893,1.377,0.538,-0.84,1.351,0.528,-0.583,1.055,0.257,-0.583,1.054,0.394,-0.595,1.046,0.355,-0.638,1.015,0.697,-0.838,1.352,0.623,-0.851,1.325,0.69,-0.889,1.379,0.98,-0.774,1.329,1.066,-0.85,1.327,1.074,-0.637,1.02,0.847,-0.794,1.332,0.91,-0.79,1.332,0.912,-0.592,1.051,0.981,-0.583,1.057,0.784,-0.79,1.331,0.785,-0.592,1.05,0.71,-0.774,1.328,1.072,-0.85,1.322,0.689,-0.892,1.378,0.825,-0.838,1.35,1,-0.888,1.381,1,-0.892,1.38,0.992,-0.839,1.354,0.711,-0.582,1.057,0.849,-0.594,1.049,0.791,-0.638,1.018,1.152,-0.837,1.355,1.078,-0.85,1.327,1.144,-0.888,1.382,1.434,-0.774,1.332,1.521,-0.849,1.33,1.528,-0.636,1.023,1.301,-0.794,1.335,1.364,-0.789,1.335,1.366,-0.591,1.054,1.435,-0.582,1.06,1.238,-0.79,1.334,1.24,-0.591,1.053,1.164,-0.773,1.33,1.526,-0.85,1.325,1.143,-0.892,1.381,1.279,-0.838,1.353,1.454,-0.888,1.384,1.454,-0.891,1.383,1.447,-0.838,1.357,1.165,-0.582,1.06,1.303,-0.594,1.052,1.264,-0.637,1.021,1.606,-0.836,1.358,1.532,-0.849,1.33,1.599,-0.888,1.385,1.889,-0.773,1.335,1.975,-0.849,1.333,1.977,-0.633,1.027,1.756,-0.793,1.338,1.819,-0.789,1.338,1.82,-0.59,1.057,1.89,-0.581,1.063,1.693,-0.789,1.337,1.694,-0.59,1.056,1.619,-0.772,1.333,1.981,-0.849,1.328,1.598,-0.891,1.384,1.733,-0.837,1.356,1.909,-0.887,1.387,1.909,-0.89,1.386,1.901,-0.837,1.36,1.62,-0.581,1.063,1.757,-0.593,1.055,1.718,-0.636,1.024,1.982,-0.636,1.026,2.06,-0.835,1.361,1.986,-0.849,1.333,2.053,-0.887,1.388,2.343,-0.772,1.338,2.429,-0.848,1.336,2.436,-0.635,1.029,2.21,-0.792,1.341,2.273,-0.788,1.341,2.274,-0.589,1.06,2.344,-0.581,1.066,2.147,-0.788,1.34,2.148,-0.59,1.059,1.987,-0.633,1.028,2.073,-0.772,1.336,2.435,-0.848,1.331,2.052,-0.89,1.387,2.187,-0.836,1.359,2.363,-0.886,1.39,2.363,-0.89,1.389,2.355,-0.837,1.363,2.074,-0.58,1.066,2.211,-0.592,1.058,2.172,-0.635,1.027,2.514,-0.835,1.363,2.44,-0.848,1.336,2.507,-0.886,1.391,2.797,-0.771,1.341,2.883,-0.847,1.339,2.888,-0.634,1.032,2.664,-0.792,1.344,2.727,-0.787,1.344,2.728,-0.589,1.063,2.798,-0.58,1.069,2.601,-0.787,1.343,2.602,-0.589,1.062,2.527,-0.771,1.339,2.889,-0.848,1.334,2.506,-0.89,1.39,2.641,-0.836,1.362,2.817,-0.885,1.393,2.817,-0.889,1.392,2.809,-0.836,1.366,2.528,-0.579,1.069,2.665,-0.592,1.061,2.968,-0.834,1.366,2.894,-0.847,1.339,2.961,-0.885,1.394,3.251,-0.771,1.344,3.337,-0.847,1.342,3.342,-0.634,1.035,3.118,-0.791,1.347,3.181,-0.786,1.347,3.182,-0.588,1.066,3.252,-0.579,1.072,3.055,-0.787,1.346,3.056,-0.588,1.065,2.893,-0.634,1.032,2.981,-0.77,1.342,3.338,-0.85,1.341,2.96,-0.889,1.393,3.095,-0.835,1.365,3.271,-0.885,1.396,3.271,-0.888,1.395,3.263,-0.835,1.369,2.982,-0.579,1.072,3.119,-0.591,1.064,-3.21,-0.583,0.957,-3.284,-0.597,0.93,-3.217,-0.635,0.985,-2.927,-0.52,0.935,-2.841,-0.596,0.933,-2.836,-0.383,0.626,-3.06,-0.54,0.938,-2.997,-0.536,0.938,-2.996,-0.337,0.657,-3.123,-0.536,0.937,-3.122,-0.338,0.656,-3.286,-0.384,0.623,-3.197,-0.52,0.933,-2.835,-0.596,0.927,-3.218,-0.638,0.984,-3.284,-0.6,0.929,-3.083,-0.584,0.956,-2.907,-0.634,0.987,-2.907,-0.638,0.986,-2.915,-0.585,0.96,-2.925,-0.328,0.664,-3.196,-0.328,0.663,-3.059,-0.34,0.655,-2.756,-0.583,0.96,-2.829,-0.596,0.933,-2.763,-0.634,0.988,-2.473,-0.52,0.938,-2.386,-0.595,0.936,-2.382,-0.382,0.628,-2.606,-0.54,0.941,-2.543,-0.535,0.941,-2.541,-0.337,0.659,-2.669,-0.535,0.94,-2.667,-0.337,0.659,-2.831,-0.383,0.626,-2.743,-0.519,0.936,-2.381,-0.596,0.93,-2.764,-0.638,0.987,-2.628,-0.584,0.959,-2.453,-0.633,0.99,-2.453,-0.637,0.989,-2.46,-0.584,0.963,-2.471,-0.327,0.666,-2.742,-0.327,0.666,-2.604,-0.34,0.658,-2.301,-0.582,0.963,-2.375,-0.595,0.936,-2.309,-0.633,0.991,-2.019,-0.519,0.941,-1.932,-0.595,0.939,-1.925,-0.382,0.631,-2.152,-0.539,0.944,-2.089,-0.534,0.943,-2.087,-0.336,0.662,-2.215,-0.535,0.943,-2.213,-0.336,0.662,-2.377,-0.382,0.628,-2.289,-0.518,0.939,-1.927,-0.595,0.934,-2.309,-0.637,0.989,-2.174,-0.583,0.962,-1.999,-0.633,0.993,-1.998,-0.636,0.991,-2.006,-0.583,0.966,-2.016,-0.327,0.669,-2.287,-0.327,0.669,-2.15,-0.339,0.661,-1.847,-0.581,0.966,-1.921,-0.595,0.939,-1.855,-0.633,0.994,-1.565,-0.518,0.944,-1.478,-0.594,0.942,-1.473,-0.381,0.634,-1.698,-0.538,0.947,-1.635,-0.534,0.946,-1.633,-0.335,0.665,-1.761,-0.534,0.946,-1.759,-0.335,0.665,-1.835,-0.517,0.942,-1.473,-0.594,0.936,-1.855,-0.636,0.992,-1.72,-0.582,0.965,-1.545,-0.632,0.996,-1.544,-0.636,0.994,-1.552,-0.583,0.969,-1.562,-0.326,0.672,-1.833,-0.326,0.671,-1.696,-0.338,0.664,-1.393,-0.581,0.969,-1.467,-0.594,0.942,-1.4,-0.632,0.997,-1.111,-0.518,0.947,-1.024,-0.593,0.945,-1.017,-0.38,0.637,-1.243,-0.537,0.95,-1.181,-0.533,0.949,-1.179,-0.335,0.668,-1.306,-0.533,0.949,-1.305,-0.335,0.668,-1.469,-0.381,0.634,-1.38,-0.517,0.945,-1.019,-0.594,0.939,-1.401,-0.635,0.995,-1.266,-0.581,0.967,-1.09,-0.631,0.999,-1.09,-0.635,0.997,-1.098,-0.582,0.972,-1.108,-0.325,0.675,-1.379,-0.325,0.674,-1.242,-0.337,0.667,-0.939,-0.58,0.972,-1.013,-0.593,0.945,-0.947,-0.631,1,-0.657,-0.517,0.95,-0.57,-0.592,0.948,-0.565,-0.379,0.64,-0.79,-0.537,0.953,-0.727,-0.532,0.952,-0.725,-0.334,0.671,-0.656,-0.325,0.678,-0.852,-0.532,0.951,-0.851,-0.334,0.67,-0.927,-0.516,0.948,-0.565,-0.593,0.942,-0.947,-0.635,0.998,-0.812,-0.581,0.97,-0.637,-0.631,1.001,-0.636,-0.634,1,-0.644,-0.581,0.975,-0.925,-0.325,0.677,-0.788,-0.337,0.67,-0.485,-0.579,0.975,-0.559,-0.592,0.948,-0.493,-0.63,1.003,-0.203,-0.516,0.953,-0.116,-0.592,0.951,-0.111,-0.379,0.643,-0.336,-0.536,0.956,-0.273,-0.532,0.955,-0.271,-0.333,0.674,-0.398,-0.532,0.954,-0.397,-0.333,0.673,-0.561,-0.379,0.64,-0.472,-0.515,0.951,-0.11,-0.592,0.945,-0.493,-0.634,1.001,-0.358,-0.58,0.973,-0.182,-0.63,1.004,-0.182,-0.633,1.003,-0.19,-0.58,0.978,-0.2,-0.324,0.681,-0.471,-0.324,0.68,-0.334,-0.336,0.672,-0.031,-0.578,0.978,-0.105,-0.592,0.951,-0.038,-0.63,1.006,0.252,-0.515,0.956,0.338,-0.591,0.954,0.345,-0.378,0.646,0.119,-0.535,0.959,0.182,-0.531,0.958,0.183,-0.332,0.677,0.056,-0.531,0.957,0.057,-0.333,0.676,-0.107,-0.379,0.643,-0.018,-0.515,0.954,0.344,-0.591,0.948,-0.039,-0.633,1.004,0.096,-0.579,0.976,0.272,-0.629,1.007,0.272,-0.633,1.006,0.264,-0.58,0.981,0.254,-0.323,0.684,-0.017,-0.323,0.683,0.12,-0.335,0.675,0.423,-0.578,0.981,0.349,-0.591,0.954,0.416,-0.629,1.009,0.706,-0.514,0.959,0.792,-0.59,0.957,0.797,-0.377,0.649,0.573,-0.534,0.962,0.636,-0.53,0.961,0.637,-0.332,0.68,0.707,-0.323,0.687,0.51,-0.53,0.96,0.511,-0.332,0.679,0.436,-0.514,0.957,0.798,-0.59,0.951,0.415,-0.632,1.007,0.55,-0.578,0.979,0.726,-0.628,1.01,0.726,-0.632,1.009,0.718,-0.579,0.984,0.437,-0.322,0.686,0.574,-0.334,0.678,0.878,-0.577,0.984,0.804,-0.59,0.957,0.87,-0.628,1.012,1.16,-0.514,0.962,1.247,-0.59,0.96,1.252,-0.376,0.652,1.027,-0.534,0.964,1.09,-0.529,0.964,1.092,-0.331,0.683,0.964,-0.53,0.963,0.966,-0.331,0.682,0.802,-0.377,0.649,0.891,-0.513,0.96,1.252,-0.59,0.954,0.869,-0.632,1.01,1.005,-0.578,0.982,1.18,-0.628,1.013,1.18,-0.631,1.012,1.173,-0.578,0.987,1.162,-0.322,0.69,0.891,-0.321,0.689,1.029,-0.334,0.681,1.332,-0.576,0.987,1.258,-0.589,0.96,1.324,-0.628,1.014,1.614,-0.513,0.965,1.701,-0.589,0.963,1.706,-0.376,0.655,1.481,-0.533,0.967,1.544,-0.529,0.967,1.546,-0.33,0.686,1.615,-0.321,0.693,1.418,-0.529,0.966,1.42,-0.33,0.685,1.256,-0.376,0.652,1.344,-0.512,0.963,1.706,-0.589,0.957,1.324,-0.631,1.013,1.459,-0.577,0.985,1.634,-0.627,1.016,1.634,-0.63,1.015,1.627,-0.577,0.989,1.345,-0.321,0.692,1.483,-0.333,0.684,1.786,-0.575,0.99,1.712,-0.589,0.963,1.779,-0.627,1.017,2.069,-0.512,0.968,2.155,-0.588,0.966,2.16,-0.375,0.658,1.936,-0.532,0.97,1.999,-0.528,0.97,2,-0.329,0.689,2.07,-0.321,0.696,1.873,-0.528,0.969,1.874,-0.33,0.688,1.71,-0.376,0.655,1.799,-0.512,0.966,2.161,-0.588,0.96,1.778,-0.63,1.016,1.913,-0.576,0.988,2.089,-0.626,1.019,2.089,-0.63,1.018,2.081,-0.577,0.992,1.8,-0.32,0.695,1.937,-0.332,0.687,2.24,-0.575,0.993,2.166,-0.588,0.966,2.233,-0.626,1.02,2.523,-0.511,0.971,2.609,-0.587,0.969,2.616,-0.374,0.661,2.39,-0.532,0.973,2.453,-0.527,0.973,2.454,-0.329,0.692,2.524,-0.32,0.699,2.327,-0.527,0.972,2.328,-0.329,0.691,2.165,-0.375,0.658,2.253,-0.511,0.969,2.613,-0.588,0.964,2.232,-0.63,1.019,2.367,-0.576,0.991,2.543,-0.625,1.022,2.543,-0.629,1.021,2.535,-0.576,0.995,2.254,-0.319,0.698,2.391,-0.332,0.69,2.679,-0.574,0.996,2.616,-0.586,0.967,2.665,-0.626,1.023,3.253,-0.51,0.975,3.338,-0.585,0.972,3.343,-0.373,0.666,2.981,-0.531,0.977,3.083,-0.526,0.977,3.084,-0.328,0.696,2.878,-0.527,0.976,2.88,-0.328,0.695,2.618,-0.371,0.663,2.701,-0.509,0.971,2.704,-0.319,0.702,2.781,-0.321,0.699,3.338,-0.589,0.972,2.663,-0.629,1.022,2.944,-0.575,0.995,3.29,-0.624,1.027,3.291,-0.628,1.026,3.275,-0.575,1.001,2.779,-0.514,0.973,3.183,-0.32,0.702,3.254,-0.318,0.704,3.181,-0.513,0.976,2.982,-0.331,0.694,-3.248,-0.146,0.407,-2.908,-0.289,0.613,-2.907,-0.146,0.409,-3.258,-0.299,0.617,-3.249,-0.29,0.611,-3.257,-0.143,0.395,-2.898,-0.143,0.399,-2.899,-0.298,0.619,-3.26,-0.353,0.579,-3.256,-0.197,0.358,-2.884,-0.205,0.373,-2.883,-0.344,0.57,-2.908,-0.354,0.584,-2.907,-0.195,0.358,-2.859,-0.146,0.41,-2.519,-0.289,0.615,-2.512,-0.145,0.411,-2.868,-0.299,0.62,-2.86,-0.289,0.613,-2.869,-0.143,0.399,-2.495,-0.204,0.375,-2.518,-0.141,0.398,-2.509,-0.298,0.621,-2.494,-0.343,0.572,-2.519,-0.354,0.586,-2.86,-0.354,0.584,-2.858,-0.194,0.358,-2.518,-0.194,0.361,-2.47,-0.145,0.412,-2.13,-0.288,0.618,-2.129,-0.144,0.415,-2.48,-0.298,0.622,-2.471,-0.289,0.616,-2.48,-0.142,0.402,-2.121,-0.141,0.403,-2.12,-0.297,0.624,-2.471,-0.353,0.587,-2.47,-0.194,0.361,-2.129,-0.193,0.363,-2.13,-0.353,0.589,-2.106,-0.203,0.378,-2.105,-0.343,0.575,-2.081,-0.144,0.415,-1.741,-0.287,0.62,-1.74,-0.144,0.417,-2.091,-0.297,0.625,-2.082,-0.288,0.618,-2.091,-0.142,0.404,-1.732,-0.14,0.406,-1.731,-0.296,0.627,-1.741,-0.352,0.592,-2.082,-0.353,0.589,-1.717,-0.203,0.38,-1.715,-0.342,0.577,-2.081,-0.193,0.363,-1.74,-0.193,0.366,-1.692,-0.144,0.417,-1.352,-0.287,0.623,-1.345,-0.143,0.419,-1.701,-0.297,0.628,-1.693,-0.287,0.621,-1.701,-0.141,0.407,-1.327,-0.202,0.383,-1.351,-0.139,0.406,-1.342,-0.296,0.629,-1.691,-0.193,0.366,-1.35,-0.192,0.368,-1.692,-0.352,0.592,-1.326,-0.341,0.58,-1.352,-0.352,0.594,-1.302,-0.143,0.42,-0.962,-0.286,0.625,-0.955,-0.142,0.421,-1.311,-0.296,0.63,-1.303,-0.287,0.623,-1.312,-0.14,0.409,-0.938,-0.202,0.385,-0.961,-0.138,0.408,-0.952,-0.295,0.632,-0.962,-0.351,0.597,-1.303,-0.352,0.594,-1.301,-0.192,0.368,-0.961,-0.191,0.371,-0.936,-0.341,0.582,-0.913,-0.142,0.422,-0.573,-0.286,0.628,-0.566,-0.142,0.424,-0.922,-0.296,0.633,-0.914,-0.286,0.626,-0.922,-0.14,0.412,-0.548,-0.201,0.388,-0.572,-0.138,0.411,-0.563,-0.295,0.634,-0.547,-0.34,0.585,-0.913,-0.351,0.597,-0.573,-0.35,0.599,-0.912,-0.191,0.371,-0.571,-0.191,0.373,-0.523,-0.142,0.425,-0.183,-0.285,0.631,-0.176,-0.141,0.426,-0.533,-0.295,0.635,-0.524,-0.285,0.628,-0.533,-0.139,0.414,-0.159,-0.2,0.39,-0.182,-0.137,0.413,-0.173,-0.294,0.637,-0.158,-0.34,0.587,-0.183,-0.35,0.602,-0.524,-0.35,0.599,-0.523,-0.191,0.373,-0.182,-0.19,0.376,-0.134,-0.141,0.428,0.206,-0.284,0.633,0.213,-0.14,0.429,-0.143,-0.294,0.638,-0.135,-0.285,0.631,-0.144,-0.139,0.417,0.231,-0.2,0.393,0.207,-0.137,0.416,0.216,-0.293,0.639,-0.135,-0.35,0.602,0.232,-0.339,0.59,0.206,-0.349,0.604,-0.133,-0.19,0.376,0.207,-0.19,0.378,0.256,-0.141,0.43,0.595,-0.284,0.636,0.602,-0.14,0.431,0.246,-0.294,0.64,0.254,-0.284,0.633,0.246,-0.138,0.419,0.62,-0.199,0.395,0.596,-0.136,0.418,0.605,-0.293,0.642,0.255,-0.349,0.605,0.256,-0.19,0.379,0.597,-0.189,0.381,0.621,-0.338,0.593,0.596,-0.349,0.607,0.645,-0.14,0.433,0.984,-0.283,0.638,0.991,-0.139,0.434,0.635,-0.293,0.643,0.644,-0.284,0.636,0.635,-0.137,0.422,1.009,-0.198,0.398,0.986,-0.135,0.421,0.994,-0.292,0.644,0.644,-0.348,0.607,0.645,-0.189,0.381,0.986,-0.188,0.383,1.01,-0.338,0.595,0.985,-0.348,0.609,1.034,-0.139,0.435,1.374,-0.282,0.641,1.38,-0.139,0.437,1.024,-0.293,0.645,1.033,-0.283,0.638,1.024,-0.137,0.425,1.398,-0.198,0.4,1.375,-0.135,0.423,1.383,-0.291,0.647,1.033,-0.348,0.61,1.399,-0.337,0.598,1.034,-0.188,0.384,1.375,-0.188,0.386,1.374,-0.347,0.612,1.423,-0.139,0.438,1.763,-0.282,0.643,1.77,-0.138,0.439,1.413,-0.292,0.648,1.422,-0.282,0.641,1.413,-0.136,0.427,1.787,-0.197,0.403,1.764,-0.134,0.426,1.772,-0.291,0.649,1.423,-0.188,0.386,1.764,-0.187,0.388,1.422,-0.347,0.612,1.763,-0.347,0.614,1.788,-0.336,0.6,1.812,-0.138,0.44,2.152,-0.281,0.646,2.158,-0.137,0.442,1.802,-0.291,0.65,1.811,-0.282,0.644,1.802,-0.135,0.43,2.176,-0.196,0.405,2.153,-0.134,0.428,2.161,-0.29,0.652,2.152,-0.346,0.617,1.811,-0.347,0.615,1.812,-0.187,0.389,2.153,-0.186,0.391,2.177,-0.336,0.603,2.201,-0.137,0.443,2.541,-0.281,0.648,2.548,-0.137,0.444,2.191,-0.291,0.653,2.2,-0.281,0.646,2.191,-0.135,0.432,2.565,-0.196,0.408,2.542,-0.133,0.431,2.55,-0.29,0.654,2.566,-0.335,0.605,2.541,-0.345,0.619,2.2,-0.346,0.617,2.201,-0.186,0.391,2.542,-0.186,0.393,2.59,-0.137,0.445,2.93,-0.28,0.651,2.937,-0.136,0.447,2.58,-0.29,0.655,2.589,-0.28,0.649,2.58,-0.134,0.435,2.954,-0.195,0.41,2.931,-0.132,0.433,2.94,-0.289,0.657,2.589,-0.345,0.62,2.956,-0.335,0.608,2.93,-0.345,0.622,2.59,-0.186,0.394,2.931,-0.185,0.396,2.979,-0.136,0.448,3.319,-0.279,0.653,3.326,-0.135,0.449,2.97,-0.289,0.658,2.978,-0.28,0.651,2.97,-0.133,0.436,3.33,-0.185,0.399,3.32,-0.132,0.436,3.329,-0.288,0.659,2.979,-0.345,0.622,3.326,-0.343,0.623,2.98,-0.185,0.396,2.366,-0.155,0.348,2.389,-0.147,0.337,3.143,-0.123,0.331,3.164,-0.127,0.331,3.146,-0.121,0.319,3.151,-0.124,0.333,3.146,-0.127,0.339,3.153,-0.129,0.34,3.149,-0.132,0.344,3.156,-0.141,0.349,3.139,-0.129,0.34,3.127,-0.135,0.341,3.131,-0.125,0.324,2.757,-0.128,0.337,2.771,-0.13,0.334,2.759,-0.125,0.331,2.768,-0.124,0.32,2.762,-0.138,0.345,2.751,-0.131,0.34,2.747,-0.139,0.346,2.746,-0.127,0.334,3.169,-0.146,0.342,3.146,-0.154,0.353,3.118,-0.142,0.336,3.14,-0.138,0.349,3.171,-0.132,0.322,2.74,-0.126,0.311,2.744,-0.123,0.319,2.759,-0.123,0.307,2.778,-0.131,0.317,3.131,-0.126,0.313,3.151,-0.123,0.31,2.755,-0.121,0.321,2.779,-0.145,0.338,2.756,-0.154,0.351,2.727,-0.141,0.332,3.281,0.229,-0.386,2.778,0.188,-0.407,2.778,0.276,-0.356,3.282,0.128,-0.417,2.779,0.082,-0.421,3.282,0.021,-0.406,2.779,0.006,-0.403,2.778,-0.036,-0.382,3.278,0.076,0.113,2.775,0.12,0.111,2.775,0.02,0.098,3.278,0.182,0.102,2.775,0.196,0.093,2.775,0.243,0.069,3.278,0.244,0.072,2.775,0.284,0.037,3.279,0.285,0.041,2.775,0.318,-0.002,3.279,0.319,0.001,2.776,0.343,-0.047,3.281,0.314,-0.315,2.777,0.326,-0.297,2.777,0.289,-0.238,-2.719,0.22,-0.425,-3.222,0.178,-0.446,-3.223,0.266,-0.395,-2.719,0.118,-0.456,-3.222,0.073,-0.46,-2.718,0.012,-0.445,-3.222,-0.004,-0.442,-3.222,-0.046,-0.421,-2.722,0.013,0.063,-3.225,0.11,0.072,-3.227,0.013,0.061,-2.722,0.12,0.074,-3.225,0.187,0.053,-2.722,0.188,0.057,-3.225,0.233,0.03,-2.722,0.234,0.033,-3.225,0.274,-0.002,-2.722,0.275,0.001,-3.225,0.308,-0.041,-2.722,0.309,-0.038,-3.225,0.334,-0.086,-3.223,0.344,-0.277,-2.72,0.304,-0.354,-3.223,0.316,-0.336,-2.721,0.28,-0.083,-3.223,0.28,-0.277,0.041,4.695,-0.057,0.046,4.729,-0.047,0.039,4.735,-0.057,0.055,4.745,-0.048,0.02,4.763,-0.046,0.056,4.726,-0.045,0.019,4.752,-0.049,0.007,4.75,-0.057,0.013,4.772,-0.052,0.012,4.768,-0.047,0.037,4.761,-0.048,-0.012,4.765,-0.047,-0.016,4.768,-0.052,-0.019,4.752,-0.046,-0.004,4.75,-0.052,-0.04,4.745,-0.048,-0.032,4.728,-0.048,-0.024,4.735,-0.057,-0.041,4.726,-0.045,-0.05,4.703,-0.047,-0.029,4.705,-0.057,-0.03,4.696,-0.047,-0.03,4.678,-0.044,-0.05,4.692,-0.057,-0.029,4.668,-0.047,-0.015,4.678,-0.047,-0.016,4.683,-0.057,-0.031,4.665,-0.057,0,4.655,-0.047,0.002,4.675,-0.05,0.007,4.664,-0.044,0.007,4.67,-0.046,-0.006,4.653,-0.057,0.018,4.654,-0.05,0.018,4.677,-0.057,0.003,4.676,-0.057,0.043,4.668,-0.046,0.045,4.679,-0.044,0.03,4.678,-0.047,0.016,4.676,-0.05,0.046,4.665,-0.057,0.017,4.652,-0.057,0.065,4.703,-0.047,0.068,4.7,-0.057,0.045,4.696,-0.047,-3.498,4.95,-0.27,-3.491,0.279,-0.088,-3.499,4.949,-0.079,-3.49,0.279,-0.279,-3.225,0.279,-0.086,3.546,0.29,-0.042,3.538,4.961,-0.034,3.279,0.344,-0.044,3.227,0.552,-0.044,3.22,4.529,-0.036,-3.173,0.542,-0.085,-3.179,4.519,-0.078,0.053,4.755,-0.057,-0.052,4.735,-0.057,0.013,4.774,-0.057,-0.018,4.768,-0.057,2.776,0.289,-0.047,3.28,0.29,-0.235,3.279,0.29,-0.044,3.325,0.01,-0.187,3.324,-0.126,0.01,3.325,-0.178,-0.083,3.547,0.01,-0.185,3.547,0.061,-0.093,3.325,0.061,-0.094,3.547,-0.177,-0.081,1.574,-0.237,0.027,1.594,0.017,-0.346,1.575,0.023,-0.342,1.597,-0.247,0.02,1.6,-0.003,-0.36,1.592,-0.27,0.004,1.576,-0.016,-0.37,1.556,-0.27,0.004,1.548,0.004,-0.356,1.551,-0.247,0.02,-0.512,-0.251,0.163,-0.512,-0.224,0.125,-0.511,-0.32,0.057,-0.509,0.081,-0.307,0.034,-0.014,-0.372,-0.509,-0.015,-0.375,0.033,0.082,-0.304,0.031,-0.176,0.062,0.032,-0.272,-0.006,0.031,-0.25,0.166,-0.511,-0.347,0.095,0.031,-0.346,0.099,-0.511,-0.273,-0.009,-1.305,-0.252,0.158,-1.305,-0.321,0.052,-1.305,-0.348,0.09,-1.303,0.08,-0.313,-0.759,-0.015,-0.377,-1.302,-0.016,-0.38,-0.76,0.081,-0.309,-0.761,-0.273,-0.011,-0.763,-0.251,0.161,-0.762,-0.347,0.093,-1.304,-0.274,-0.014,-1.305,-0.178,0.053,-0.762,-0.177,0.057,-2.06,-0.253,0.153,-2.06,-0.322,0.047,-2.06,-0.349,0.085,-2.058,0.079,-0.318,-1.514,-0.016,-0.382,-2.057,-0.017,-0.385,-1.515,0.08,-0.314,-1.516,-0.275,-0.016,-1.518,-0.252,0.156,-1.517,-0.348,0.089,-2.059,-0.275,-0.019,-1.517,-0.179,0.052,2.754,0.125,-0.045,2.754,0.23,-0.194,2.753,0.197,-0.035,2.753,0.022,0.101,2.776,-0.103,0.012,-3.244,0.115,-0.084,-3.243,0.221,-0.233,-3.244,0.187,-0.074,-3.244,-0.129,-0.038,-3.224,-0.113,-0.027,1.019,-0.103,-0.439,1.476,-0.038,-0.391,1.526,-0.075,-0.416,3.546,0.126,-0.04,3.545,-0.086,0.244,-1.517,-0.321,0.051,-3.469,-0.549,-0.121,-2.699,0.013,0.065,-3.493,-0.089,0.204,3.3,0.27,-0.134,3.546,0.198,-0.03,3.547,0.271,-0.133,-3.49,-0.523,-0.102,-3.491,0.115,-0.085,-3.488,-0.243,-0.562,3.299,0.126,-0.041,3.3,0.231,-0.19,3.547,0.232,-0.189,-3.244,0.26,-0.177,-3.491,0.187,-0.076,-2.699,0.188,-0.071,-2.698,0.261,-0.173,-2.698,0.222,-0.23,-2.721,-0.125,-0.04,-3.224,-0.125,-0.043,-3.491,0.259,-0.179,2.754,0.269,-0.138,3.299,0.198,-0.031,2.754,-0.119,0.001,3.299,-0.118,0.004,2.776,-0.116,-0.004,-2.699,0.116,-0.08,-1.499,0.107,-0.304,-1.5,-0.332,-0.057,-1.501,-0.17,0.058,-2.075,-0.348,-0.071,-1.498,-0.084,-0.439,-2.073,-0.085,-0.443,-1.501,-0.156,0.068,-2.074,0.106,-0.308,-1.517,-0.225,0.118,-3.49,-0.553,-0.123,-3.49,-0.548,-0.12,-2.06,-0.226,0.115,-0.744,0.108,-0.299,-0.745,-0.346,-0.062,-0.745,-0.219,0.028,-1.32,-0.346,-0.066,-0.743,-0.083,-0.434,-1.318,-0.084,-0.438,-0.746,-0.155,0.073,-1.319,0.107,-0.303,-0.762,-0.32,0.055,3.495,-0.079,0.248,-0.762,-0.224,0.123,-1.305,-0.225,0.12,-0.072,-0.338,-0.053,-0.044,-0.057,-0.412,-0.07,-0.075,-0.425,0.048,-0.159,0.074,-0.526,0.103,-0.301,0.05,0.104,-0.298,-0.046,-0.32,-0.04,0.05,-0.039,-0.399,-0.406,-0.339,-0.055,-0.404,-0.076,-0.427,0.031,-0.223,0.128,0.032,-0.319,0.061,0.627,-0.367,-0.069,0.629,-0.104,-0.442,1.016,-0.135,0.096,0.628,0.127,-0.278,1.018,0.128,-0.276,1.573,-0.166,0.077,1.55,0.094,-0.297,1.575,0.096,-0.295,1.572,-0.084,-0.423,1.596,-0.345,-0.049,1.602,-0.082,-0.421,1.635,-0.182,0.067,1.607,0.094,-0.297,1.66,0.065,-0.316,1.617,-0.34,-0.045,1.661,-0.057,-0.402,1.496,-0.321,-0.032,1.676,-0.222,0.038,1.688,0.016,-0.351,1.463,-0.257,0.013,1.468,0.034,-0.339,1.683,-0.274,0.002,1.532,-0.34,-0.046,1.531,-0.173,0.072,1.505,0.077,-0.309,1.482,-0.207,0.048,3.546,-0.126,0.011,-3.034,-0.376,0.198,-3.034,-0.403,0.19,-3.035,-0.496,0.323,0.139,-2.334,3.456,0.953,-2.507,3.71,0.955,-2.332,3.462,0.138,-2.523,3.715,0.138,-2.509,3.705,0.092,-2.513,3.701,0.139,-2.328,3.44,0.094,-2.338,3.453,0.953,-2.521,3.721,0.999,-2.512,3.707,1,-2.336,3.459,0.955,-2.327,3.445,0.139,-2.344,3.429,1,-2.352,3.448,0.953,-2.537,3.709,-0.949,-2.335,3.449,-0.135,-2.509,3.703,-0.133,-2.334,3.455,-0.951,-2.524,3.708,-0.95,-2.511,3.697,-0.996,-2.515,3.694,-0.949,-2.33,3.433,-0.994,-2.34,3.446,-0.135,-2.523,3.714,-0.089,-2.513,3.7,-0.088,-2.338,3.452,-0.133,-2.329,3.438,-0.949,-2.346,3.421,-0.088,-2.354,3.441,-0.135,-2.539,3.702,-0.89,-2.327,3.29,-0.995,-2.277,3.324,-0.889,-2.304,3.363,-0.887,-1.866,2.638,-0.887,-1.79,2.635,-0.994,-1.818,2.673,0.91,-2.324,3.302,0.909,-2.301,3.374,1.016,-2.274,3.337,0.913,-1.864,2.65,1.017,-1.814,2.685,0.911,-1.787,2.646,3.455,-2.565,3.761,-3.438,-3.03,3.395,3.458,-3.019,3.44,3.546,-0.369,0.173,3.542,-0.87,0.883,3.547,-0.534,-0.078,-3.419,-0.501,-0.186,-3.438,-3.009,3.356,-3.509,-3.005,3.359,-3.441,-2.576,3.716,-3.441,-2.546,3.683,-3.511,-2.551,3.68,-3.419,-0.531,-0.154,-3.49,-0.526,-0.151,-3.422,-0.068,0.174,-3.422,-0.068,0.174,-3.422,-0.068,0.174,3.458,-2.998,3.401,3.529,-2.994,3.405,3.456,-2.535,3.728,3.526,-2.54,3.725,3.477,-0.52,-0.109,3.477,-0.49,-0.141,3.548,-0.515,-0.105,-3.49,-0.548,-0.12,-3.42,-0.551,-0.126,-3.422,-0.089,0.204,-3.422,-0.088,0.203,-3.493,-0.092,0.198,-3.492,-0.109,0.156,-2.746,-0.53,-0.149,-3.418,-0.068,0.174,3.475,-0.036,0.179,3.545,-0.061,0.216,3.477,-0.542,-0.078,0.138,-2.539,3.704,-0.089,-2.529,3.689,-0.95,-2.54,3.697,-0.996,-2.531,3.683,-0.133,-2.344,3.427,-0.994,-2.355,3.435,0.999,-2.527,3.696,0.092,-2.529,3.69,0.094,-2.354,3.442,0.955,-2.343,3.434,-3.46,-0.498,0.241,-3.46,-0.497,0.24,-3.492,-0.489,0.225,-3.46,-0.505,0.293,-3.46,-0.506,0.276,-3.46,-0.506,0.276,-3.46,-0.506,0.275,-3.492,-0.504,0.258,-3.461,-0.339,0.332,-3.493,-0.339,0.331,-3.493,-0.331,0.316,-3.034,-0.477,0.215,-3.034,-0.463,0.204,-3.46,-0.463,0.201,-3.034,-0.447,0.196,-3.034,-0.429,0.191,-3.46,-0.43,0.188,-3.46,-0.349,0.215,-3.46,-0.348,0.215,-3.492,-0.346,0.215,-3.461,-0.453,0.362,-3.461,-0.467,0.354,-3.493,-0.476,0.347,-3.46,-0.337,0.229,-3.46,-0.337,0.23,-3.46,-0.505,0.294,-3.493,-0.506,0.293,-3.46,-0.5,0.312,-3.46,-0.324,0.262,-3.46,-0.324,0.263,-3.493,-0.322,0.274,-3.461,-0.492,0.326,-3.461,-0.381,0.364,-3.493,-0.381,0.364,-3.461,-0.365,0.356,-3.46,-0.362,0.203,-3.46,-0.361,0.204,-3.46,-0.447,0.193,-3.492,-0.447,0.193,-3.461,-0.351,0.345,-3.46,-0.498,0.241,-3.492,-0.498,0.241,-3.46,-0.504,0.258,-3.493,-0.128,0.176,-3.493,-0.351,0.345,-3.461,-0.365,0.356,-3.493,-0.365,0.356,-3.46,-0.323,0.28,-3.46,-0.323,0.281,-3.461,-0.381,0.364,-3.461,-0.383,0.365,-3.493,-0.399,0.369,3.545,-0.083,0.246,3.541,-0.747,0.97,3.512,-0.277,0.305,3.512,-0.245,0.26,3.545,-0.245,0.26,-3.492,-0.377,0.195,-3.035,-0.442,0.369,-3.035,-0.467,0.356,-3.034,-0.328,0.248,-3.493,-0.329,0.245,-3.461,-0.468,0.353,-3.035,-0.48,0.345,3.513,-0.401,0.218,3.033,-0.871,0.88,-3.034,-0.489,0.228,-3.034,-0.497,0.244,-3.493,-0.417,0.37,-3.461,-0.4,0.369,-3.035,-0.404,0.373,-3.46,-0.448,0.194,-3.034,-0.503,0.261,-3.46,-0.329,0.245,3.509,-0.759,0.961,3.032,-0.748,0.967,3.513,-0.361,0.178,-3.461,-0.364,0.355,-3.035,-0.35,0.348,-3.461,-0.35,0.344,-3.035,-0.339,0.334,-3.034,-0.361,0.206,-3.034,-0.347,0.218,-3.035,-0.381,0.367,-3.035,-0.322,0.284,-3.035,-0.365,0.359,-3.035,-0.324,0.302,-3.035,-0.33,0.319,-3.035,-0.323,0.266,-3.034,-0.336,0.232,-3.034,-0.504,0.297,-3.034,-0.505,0.279,-3.46,-0.378,0.194,-3.492,-0.394,0.189,-3.493,-0.452,0.362,-3.461,-0.436,0.368,-3.493,-0.492,0.327,-3.461,-0.482,0.341,-3.46,-0.395,0.189,-3.492,-0.412,0.187,-3.493,-0.435,0.368,-3.461,-0.418,0.37,-3.421,-0.08,0.191,-3.46,-0.413,0.187,-3.422,-0.08,0.191,3.545,-0.08,0.242,3.545,-0.085,0.232,-0.43,-0.058,-0.415,-0.432,-0.321,-0.043,-2.076,-0.183,0.046,3.503,-0.08,0.248,3.474,-0.078,0.249,-3.49,-0.502,-0.088,-3.49,-0.498,-0.085,-3.49,-0.51,-0.093,-3.49,-0.517,-0.098,-3.49,-0.52,-0.1,-3.49,-0.523,-0.102,3.545,-0.089,0.196,-3.13,-0.089,0.206,-3.064,-0.089,0.207,-3.118,-0.083,0.198,-3.007,-0.089,0.207,-2.941,-0.088,0.207,-3.493,-0.115,0.186,-2.875,-0.088,0.208,-2.933,-0.088,0.207,-3.335,-0.089,0.205,3.545,-0.078,0.25,-3.422,-0.088,0.203,-3.42,-0.089,0.204,-3.42,-0.088,0.203,-3.42,-0.089,0.204,-3.419,-0.089,0.204,-3.422,-0.047,0.135,3.242,-0.079,0.248,3.366,-0.078,0.248,3.438,-0.065,0.23,3.474,-0.057,0.219,3.387,-0.078,0.249,3.448,-0.078,0.249,3.379,-0.078,0.248,-0.527,-0.233,0.019,-0.525,-0.04,-0.403,-0.527,-0.303,-0.031,-3.418,-0.089,0.204,-3.417,-0.089,0.204,-3.419,-0.089,0.204,1.575,-0.347,-0.051,1.512,-0.182,0.066,-2.076,-0.157,0.064,-2.06,-0.179,0.048,-1.321,-0.182,0.051,-1.321,-0.167,0.061,-0.511,-0.177,0.058,-0.528,-0.159,0.071,1.017,-0.332,-0.043,1.017,-0.366,-0.067,1.574,-0.276,-0.001,1.676,-0.291,-0.01,1.472,-0.292,-0.012,-3.493,-0.072,0.17,0.627,-0.307,-0.027,3.471,-0.078,0.249,3.472,-0.078,0.249,-3.42,-0.553,-0.123,3.279,-0.103,0.015,-2.721,-0.112,-0.024,3.282,-0.035,-0.379,3.281,0.09,-0.29,3.283,0.024,0.103,3.279,-0.115,0,2.778,0.089,-0.294,-2.719,-0.045,-0.418,-2.721,0.335,-0.083,-2.72,0.344,-0.274,-2.719,0.08,-0.329,-2.72,0.281,-0.274,-3.223,0.079,-0.333,2.755,0.089,-0.294,-3.242,0.079,-0.333,-2.699,-0.128,-0.035,-3.49,0.22,-0.235,3.301,0.09,-0.29,3.55,-0.232,-0.516,-2.697,0.08,-0.329,3.548,-0.541,-0.078,3.472,-0.078,0.249,-1.5,-0.347,-0.067,-0.746,-0.165,0.066,-1.321,-0.156,0.069,0.048,-0.27,-0.004,0.048,-0.302,-0.027,0.626,-0.136,0.094,1.685,-0.257,0.014,1.653,-0.321,-0.031,1.666,-0.307,-0.022,1.465,-0.239,0.025,1.682,-0.239,0.026,1.666,-0.206,0.049,1.652,-0.193,0.059,1.552,-0.168,0.076,1.553,-0.345,-0.049,1.472,-0.222,0.037,1.513,-0.332,-0.04,1.616,-0.173,0.073,1.636,-0.332,-0.039,1.495,-0.193,0.058,1.482,-0.307,-0.023,1.595,-0.168,0.076,1.466,-0.275,0,3.545,-0.109,0.227,-3.492,-0.43,0.188,-3.492,-0.475,0.209,-3.46,-0.488,0.225,-3.493,-0.325,0.299,-3.461,-0.325,0.298,-3.461,-0.339,0.332,3.509,-0.751,0.967,3.513,-0.369,0.173,-3.398,-0.089,0.204,-3.41,-0.089,0.204,-3.27,-0.089,0.205,-3.327,-0.089,0.205,-3.204,-0.089,0.206,-3.196,-0.089,0.206,-2.81,-0.088,0.208,-1.886,-0.087,0.214,-1.829,-0.087,0.215,-1.769,-0.087,0.215,-1.709,-0.086,0.215,-1.564,-0.086,0.216,-1.538,-0.086,0.216,-1.652,-0.086,0.216,3.112,-0.079,0.247,3.369,-0.078,0.248,3.372,-0.078,0.248,3.453,-0.078,0.249,3.465,-0.078,0.249,3.469,-0.078,0.249,3.474,-0.069,0.236,3.474,-0.078,0.249,-3.493,-0.118,0.183,-3.493,-0.122,0.181,-3.493,-0.11,0.189,-3.493,-0.094,0.2,-3.493,-0.107,0.191,-3.493,-0.108,0.19,3.376,-0.057,0.218,-3.46,-0.503,0.257,3.545,-0.084,0.221,3.545,-0.081,0.237,-3.46,-0.431,0.189,3.499,-1.772,2.639,3.492,-0.751,0.967,-3.461,-0.339,0.33,-3.461,-0.325,0.299,-3.493,-0.102,0.173,-3.493,-0.1,0.178,-3.493,-0.099,0.18,-3.493,-0.098,0.184,-3.493,-0.101,0.176,3.032,-0.748,0.967,-3.493,-0.098,0.183,-3.461,-0.366,0.357,-3.052,-0.081,0.196,3.477,-0.542,-0.078,3.547,-0.537,-0.074,3.547,-0.501,-0.078,-3.461,-0.33,0.315,-3.461,-0.33,0.316,3.033,-0.871,0.88,-3.46,-0.477,0.212,-3.46,-0.464,0.202,-3.46,-0.5,0.31,-3.255,-0.5,0.251,3.436,-0.064,0.229,-3.256,-0.358,0.352,3.036,-0.246,0.257];
		var arrIndices
		var arrNormals=[-0.188,0.436,0.88,-0.785,0.25,0.567,-0.283,0.058,0.957,0.198,0.65,0.734,0.642,0.258,0.722,-0.005,0.818,0.575,-0.009,0.615,0.789,-0.068,0.61,0.789,-0.075,0.977,-0.201,0.185,0.979,-0.079,0.057,0.607,0.793,0.048,0.951,-0.304,-0.005,0.817,0.576,-0.21,0.649,0.731,-0.003,0.442,0.897,0.303,0.071,0.95,0.175,0.44,0.881,-0.189,0.979,-0.077,0.005,0.987,-0.163,-0.188,0.436,0.88,-0.647,0.267,0.714,-0.283,0.058,0.957,0.198,0.649,0.734,0.644,0.259,0.719,-0.004,0.813,0.582,-0.009,0.615,0.789,-0.067,0.61,0.789,-0.076,0.977,-0.201,0.057,0.607,0.793,0.048,0.951,-0.304,-0.005,0.818,0.575,-0.21,0.649,0.731,-0.003,0.441,0.897,0.303,0.071,0.95,0.175,0.44,0.881,0.189,0.979,-0.077,-0.189,0.979,-0.077,0.005,0.987,-0.163,-0.188,0.436,0.88,-0.649,0.268,0.712,-0.283,0.058,0.957,0.197,0.65,0.734,0.648,0.259,0.716,-0.005,0.818,0.575,-0.009,0.615,0.789,-0.068,0.61,0.789,-0.075,0.977,-0.201,0.181,0.98,-0.08,0.057,0.607,0.793,0.048,0.951,-0.307,-0.005,0.817,0.577,-0.21,0.649,0.731,-0.003,0.441,0.897,0.303,0.071,0.95,0.175,0.44,0.881,-0.189,0.979,-0.076,0.005,0.987,-0.163,-0.248,0.859,0.447,0.513,0.817,-0.265,-0.312,0.95,0.032,0.443,0.809,0.387,0.004,0.876,0.483,0.087,0.687,0.721,0.424,0.296,0.856,-0.631,0.171,0.757,-0.588,-0.247,0.77,0.424,0.296,0.856,-0.631,0.171,0.757,-0.631,0.171,0.757,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,0.375,0.373,0.849,0.007,0.002,-1,0.007,0.001,-1,0.007,0.001,-1,0.007,0.001,-1,0.002,-1,-0.002,1,0.002,0.007,-0.002,1,0.002,0.002,-1,-0.002,-1,-0.002,-0.007,-1,-0.002,-0.007,-1,-0.002,-0.007,0,0,1,-1,-0.002,-0.007,-1,-0.002,-0.007,-1,-0.002,-0.007,-1,-0.002,-0.007,-1,-0.002,-0.007,-1,-0.002,-0.007,-1,-0.002,-0.007,-1,-0.002,-0.007,-1,-0.002,-0.007,-1,-0.002,-0.007,-1,-0.002,-0.007,-1,-0.002,-0.007,-1,-0.002,-0.007,-1,-0.002,-0.007,-1,-0.002,-0.007,-1,-0.002,-0.007,-1,-0.002,-0.007,-1,-0.002,-0.007,-1,-0.002,-0.007,-1,-0.002,-0.007,-1,-0.002,-0.007,-1,-0.002,-0.007,-1,-0.002,-0.007,-0.007,0.449,0.894,-1,-0.002,-0.007,-1,-0.002,-0.007,-1,-0.001,-0.006,-1,-0.001,-0.006,-0.007,0.449,0.894,0,0,1,-0.18,0.626,0.758,-0.157,0.787,0.597,-0.323,0.104,0.941,0.138,0.79,0.597,0.522,0.483,0.703,-0.005,0.818,0.575,-0.007,0.626,0.78,-0.016,0.621,0.784,-0.014,0.983,-0.184,-0.018,0.605,0.796,-0.013,0.985,-0.169,0.007,0.623,0.782,0.012,0.984,-0.175,-0.643,0.729,-0.235,-0.121,0.986,-0.114,0.012,0.985,-0.169,-0.007,0.818,0.576,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.535,0.487,0.691,0,0.817,0.577,-0.005,0.444,0.896,0.279,0.149,0.949,-0.005,0.817,0.577,-0.15,0.645,0.75,0.005,0.611,0.791,0.143,0.649,0.748,0.122,0.985,-0.122,0.161,0.625,0.764,0.001,0.988,-0.151,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.188,0.436,0.88,-0.69,0.173,0.703,-0.283,0.058,0.957,0.198,0.65,0.734,0.642,0.257,0.723,-0.004,0.821,0.571,-0.009,0.615,0.789,-0.068,0.61,0.789,-0.075,0.977,-0.2,0.185,0.979,-0.079,0.057,0.607,0.793,0.076,0.977,-0.2,-0.004,0.824,0.567,-0.21,0.649,0.731,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.003,0.441,0.897,0.303,0.071,0.95,-0.005,0.817,0.577,0.175,0.44,0.881,-0.191,0.979,-0.072,0,0.983,-0.183,-0.188,0.436,0.88,-0.652,0.268,0.709,-0.283,0.058,0.957,-0.009,0.615,0.789,-0.067,0.611,0.789,-0.077,0.977,-0.201,0.057,0.607,0.793,0.076,0.977,-0.201,-0.209,0.649,0.731,0.197,0.648,0.736,0.182,0.442,0.879,0.566,0.381,0.731,-0.001,0.817,0.576,-0.005,0.817,0.577,-0.003,0.441,0.897,0.312,0.07,0.948,-0.005,0.817,0.577,0.189,0.979,-0.076,-0.187,0.98,-0.073,0,0.983,-0.183,-0.005,0.818,0.576,-0.005,0.821,0.571,-0.005,0.819,0.573,-0.188,0.436,0.88,-0.646,0.267,0.715,-0.283,0.058,0.957,0.198,0.65,0.734,0.781,0.243,0.576,-0.005,0.817,0.576,-0.009,0.615,0.789,-0.068,0.61,0.789,-0.075,0.977,-0.2,0.185,0.979,-0.079,0.057,0.607,0.793,0.076,0.977,-0.201,-0.001,0.826,0.564,-0.21,0.649,0.731,-0.006,0.817,0.577,-0.005,0.817,0.577,-0.003,0.441,0.897,0.303,0.071,0.95,-0.005,0.817,0.577,0.175,0.44,0.881,-0.191,0.979,-0.072,0,0.983,-0.183,-0.005,0.817,0.576,-0.18,0.311,0.933,-0.705,0.183,0.686,-0.244,-0.154,0.957,-0.007,0.566,0.824,-0.074,0.536,0.841,-0.074,0.978,-0.195,0.06,0.533,0.844,0.059,0.964,-0.258,-0.005,0.817,0.576,-0.534,0.56,0.633,-0.005,0.817,0.577,0.508,0.197,0.839,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,0.184,-0.105,0.977,-0.005,0.817,0.577,0.167,0.304,0.938,0.521,0.563,0.641,0.198,0.559,0.805,0.185,0.98,-0.075,-0.207,0.558,0.804,-0.188,0.979,-0.075,0.002,0.985,-0.175,-0.18,0.311,0.933,-0.52,0.212,0.827,-0.244,-0.154,0.957,-0.007,0.566,0.824,-0.075,0.536,0.841,-0.073,0.978,-0.195,0.205,0.561,0.802,0.184,0.98,-0.078,0.06,0.533,0.844,0.059,0.964,-0.258,-0.531,0.559,0.637,-0.005,0.817,0.577,0.509,0.197,0.838,-0.005,0.817,0.577,-0.005,0.817,0.577,0.184,-0.105,0.977,-0.005,0.817,0.577,0.167,0.303,0.938,0.525,0.562,0.64,-0.207,0.558,0.804,-0.184,0.98,-0.075,0.002,0.985,-0.175,-0.18,0.311,0.933,-0.521,0.212,0.826,-0.244,-0.154,0.957,-0.007,0.566,0.824,-0.075,0.536,0.841,-0.073,0.978,-0.195,0.205,0.561,0.802,0.189,0.979,-0.078,0.06,0.533,0.844,0.06,0.965,-0.254,-0.531,0.559,0.637,-0.005,0.817,0.577,0.671,0.184,0.718,-0.005,0.817,0.577,-0.005,0.817,0.577,0.184,-0.105,0.977,-0.005,0.817,0.577,0.167,0.303,0.938,0.529,0.562,0.636,-0.207,0.558,0.804,-0.184,0.98,-0.075,0.002,0.985,-0.175,-0.18,0.311,0.933,-0.52,0.212,0.827,-0.244,-0.154,0.957,-0.007,0.566,0.824,-0.075,0.536,0.841,-0.073,0.978,-0.195,0.205,0.561,0.802,0.184,0.98,-0.078,0.06,0.533,0.844,0.059,0.964,-0.258,-0.005,0.817,0.576,-0.531,0.559,0.637,-0.005,0.817,0.576,0.509,0.197,0.838,-0.005,0.817,0.577,-0.005,0.817,0.576,-0.005,0.817,0.577,0.184,-0.105,0.977,-0.005,0.817,0.576,0.167,0.303,0.938,0.525,0.562,0.64,-0.207,0.558,0.804,-0.184,0.98,-0.075,0.002,0.985,-0.175,-0.18,0.311,0.933,-0.706,0.183,0.684,-0.244,-0.154,0.957,-0.007,0.566,0.824,-0.075,0.536,0.841,-0.073,0.978,-0.195,0.205,0.561,0.802,0.184,0.98,-0.078,0.06,0.533,0.844,0.059,0.964,-0.258,-0.005,0.819,0.574,-0.535,0.56,0.632,0.508,0.197,0.839,-0.005,0.817,0.576,-0.006,0.817,0.576,0.184,-0.105,0.977,-0.005,0.817,0.576,0.167,0.303,0.938,0.525,0.562,0.64,-0.207,0.558,0.804,-0.189,0.979,-0.075,0.002,0.985,-0.175,-0.18,0.311,0.933,-0.521,0.212,0.826,-0.244,-0.154,0.957,-0.007,0.566,0.824,-0.075,0.536,0.841,-0.073,0.978,-0.195,0.205,0.561,0.802,0.189,0.979,-0.078,0.06,0.533,0.844,0.06,0.965,-0.254,-0.531,0.559,0.637,-0.005,0.817,0.577,0.671,0.184,0.718,-0.004,0.817,0.577,-0.005,0.817,0.577,0.184,-0.105,0.977,-0.005,0.817,0.577,0.167,0.303,0.938,0.528,0.562,0.636,-0.207,0.558,0.804,-0.184,0.98,-0.075,0.002,0.985,-0.175,-0.331,0.571,0.752,-0.587,0.584,0.56,-0.472,0.076,0.878,-0.008,0.62,0.785,-0.031,0.618,0.786,-0.032,0.982,-0.188,0.019,0.615,0.788,0.029,0.983,-0.184,-0.425,0.863,-0.272,-0.251,0.964,-0.087,0.03,0.986,-0.165,-0.005,0.817,0.577,0.684,0.498,0.533,-0.004,0.817,0.577,-0.005,0.817,0.576,-0.005,0.817,0.577,-0.005,0.817,0.576,-0.005,0.444,0.896,0.456,0.106,0.884,-0.005,0.817,0.577,-0.319,0.633,0.706,0.024,0.607,0.794,-0.03,0.986,-0.165,0.317,0.632,0.707,0.255,0.962,-0.096,-0.035,0.609,0.793,0.311,0.574,0.758,-0.331,0.571,0.752,-0.673,0.524,0.522,-0.472,0.076,0.878,-0.008,0.62,0.785,-0.031,0.618,0.786,-0.032,0.982,-0.188,0.019,0.615,0.788,0.029,0.982,-0.184,-0.705,0.631,-0.324,-0.251,0.964,-0.087,0.03,0.986,-0.165,-0.005,0.817,0.577,0.596,0.566,0.57,-0.005,0.817,0.577,-0.004,0.817,0.576,-0.01,0.817,0.576,-0.005,0.817,0.577,-0.005,0.444,0.896,0.456,0.106,0.884,-0.004,0.814,0.58,-0.319,0.633,0.706,0.024,0.607,0.794,-0.03,0.986,-0.165,0.317,0.632,0.707,0.252,0.963,-0.096,-0.035,0.609,0.793,0.31,0.574,0.758,0.002,0.988,-0.155,0.002,0.988,-0.155,-0.188,0.436,0.88,-0.668,0.217,0.712,-0.283,0.058,0.957,0.198,0.65,0.734,0.644,0.259,0.72,-0.005,0.817,0.577,-0.009,0.615,0.789,-0.067,0.61,0.789,-0.076,0.977,-0.201,0.057,0.607,0.793,0.076,0.977,-0.2,-0.372,0.885,-0.282,-0.209,0.649,0.731,-0.005,0.817,0.577,-0.005,0.817,0.576,-0.003,0.441,0.897,0.303,0.071,0.95,-0.005,0.818,0.576,0.175,0.44,0.881,0.19,0.979,-0.076,-0.187,0.98,-0.072,0,0.983,-0.182,-0.005,0.817,0.576,-0.188,0.436,0.88,-0.649,0.268,0.712,-0.283,0.058,0.957,0.197,0.65,0.734,0.642,0.257,0.722,0.369,0.89,-0.268,-0.009,0.615,0.789,-0.068,0.61,0.789,-0.075,0.977,-0.2,0.181,0.98,-0.079,0.057,0.607,0.793,0.076,0.977,-0.2,-0.005,0.818,0.576,-0.211,0.65,0.73,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.003,0.441,0.897,0.303,0.071,0.95,-0.005,0.817,0.577,0.175,0.44,0.881,-0.192,0.979,-0.072,-0.001,0.983,-0.182,-0.005,0.817,0.576,-0.005,0.817,0.576,-0.188,0.436,0.88,-0.647,0.266,0.714,-0.283,0.058,0.957,0.197,0.65,0.734,0.645,0.258,0.72,0.379,0.886,-0.266,-0.009,0.615,0.789,-0.068,0.61,0.789,-0.075,0.977,-0.2,0.181,0.98,-0.079,0.057,0.607,0.793,0.076,0.977,-0.201,-0.21,0.649,0.731,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.003,0.441,0.897,0.303,0.07,0.95,-0.005,0.817,0.577,0.175,0.44,0.881,-0.188,0.979,-0.073,-0.001,0.983,-0.182,-0.005,0.817,0.577,-0.005,0.817,0.576,-0.188,0.436,0.88,-0.649,0.268,0.712,-0.283,0.058,0.957,0.197,0.649,0.735,0.644,0.258,0.72,0.41,0.872,-0.269,-0.009,0.615,0.789,-0.067,0.61,0.789,-0.076,0.977,-0.2,0.057,0.607,0.793,0.077,0.977,-0.201,-0.209,0.649,0.732,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.003,0.441,0.897,0.303,0.071,0.95,-0.005,0.817,0.577,0.175,0.44,0.881,0.184,0.98,-0.076,-0.19,0.979,-0.071,-0.001,0.983,-0.182,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.188,0.436,0.88,-0.649,0.268,0.712,-0.283,0.058,0.957,0.197,0.649,0.734,0.645,0.258,0.72,-0.005,0.817,0.576,-0.009,0.615,0.789,-0.068,0.61,0.789,-0.075,0.977,-0.2,0.18,0.98,-0.08,0.057,0.607,0.793,0.077,0.977,-0.2,-0.409,0.87,-0.275,-0.208,0.649,0.732,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.003,0.441,0.897,0.303,0.071,0.95,-0.005,0.817,0.577,0.175,0.44,0.881,-0.189,0.979,-0.071,0,0.983,-0.182,-0.005,0.817,0.577,-0.188,0.436,0.88,-0.649,0.267,0.712,-0.283,0.058,0.957,0.197,0.649,0.734,0.644,0.257,0.72,-0.005,0.818,0.576,-0.009,0.615,0.789,-0.068,0.61,0.789,-0.075,0.977,-0.2,0.18,0.98,-0.08,0.057,0.607,0.793,0.076,0.977,-0.201,-0.209,0.649,0.732,-0.005,0.817,0.577,-0.005,0.817,0.576,-0.003,0.442,0.897,0.303,0.071,0.95,-0.005,0.817,0.576,0.175,0.44,0.881,-0.186,0.98,-0.073,0,0.983,-0.183,-0.005,0.817,0.576,-0.188,0.436,0.88,-0.648,0.267,0.713,-0.283,0.058,0.957,0.198,0.65,0.734,0.644,0.259,0.72,-0.002,0.817,0.577,-0.009,0.615,0.789,-0.068,0.61,0.789,-0.075,0.977,-0.2,0.185,0.979,-0.079,0.057,0.607,0.793,0.077,0.977,-0.201,-0.208,0.649,0.732,-0.005,0.817,0.577,-0.005,0.817,0.576,-0.003,0.441,0.897,0.303,0.071,0.95,-0.005,0.817,0.576,0.175,0.44,0.881,-0.187,0.98,-0.072,0,0.983,-0.183,-0.005,0.817,0.576,-0.188,0.436,0.88,-0.649,0.268,0.712,-0.283,0.058,0.957,0.197,0.649,0.734,0.645,0.258,0.72,-0.005,0.817,0.576,-0.009,0.615,0.789,-0.068,0.61,0.789,-0.075,0.977,-0.2,0.18,0.98,-0.08,0.057,0.607,0.793,0.076,0.977,-0.201,-0.002,0.817,0.577,-0.21,0.649,0.731,-0.005,0.817,0.577,-0.005,0.817,0.576,-0.003,0.441,0.897,0.303,0.07,0.95,-0.005,0.817,0.577,0.175,0.44,0.881,-0.191,0.979,-0.072,0,0.983,-0.183,-0.005,0.817,0.576,-0.188,0.436,0.88,-0.649,0.267,0.712,-0.283,0.058,0.957,0.197,0.65,0.734,0.645,0.258,0.72,0.409,0.873,-0.266,-0.009,0.615,0.789,-0.068,0.61,0.789,-0.075,0.977,-0.2,0.181,0.98,-0.079,0.057,0.607,0.793,0.076,0.977,-0.201,-0.209,0.649,0.732,-0.005,0.817,0.577,-0.002,0.823,0.568,-0.003,0.441,0.897,0.303,0.071,0.95,-0.005,0.817,0.576,0.175,0.44,0.881,-0.186,0.98,-0.073,-0.001,0.983,-0.182,-0.005,0.817,0.576,-0.005,0.817,0.577,-0.188,0.436,0.88,-0.649,0.267,0.712,-0.283,0.058,0.957,0.197,0.649,0.735,0.663,0.206,0.72,-0.009,0.615,0.789,-0.068,0.61,0.789,-0.075,0.977,-0.201,0.18,0.98,-0.08,0.057,0.607,0.793,0.076,0.977,-0.2,-0.41,0.87,-0.274,-0.209,0.649,0.731,-0.004,0.819,0.574,-0.003,0.441,0.897,0.303,0.071,0.95,-0.005,0.817,0.576,0.175,0.44,0.881,-0.187,0.98,-0.072,0,0.983,-0.182,-0.005,0.817,0.577,-0.208,0.465,0.86,-0.843,0.287,0.455,-0.249,0.091,0.964,0.215,0.64,0.738,0.633,0.389,0.669,0.458,0.849,-0.264,-0.008,0.619,0.785,-0.038,0.617,0.786,-0.04,0.981,-0.19,0.026,0.614,0.789,0.036,0.982,-0.186,-0.692,0.652,-0.309,-0.227,0.639,0.735,-0.209,0.974,-0.088,0.042,0.985,-0.165,-0.005,0.817,0.576,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.004,0.444,0.896,0.318,0.082,0.945,-0.005,0.817,0.577,0.191,0.471,0.861,0.035,0.609,0.792,-0.04,0.985,-0.165,0.206,0.973,-0.1,-0.045,0.611,0.79,0.003,0.988,-0.156,-0.188,0.436,0.88,-0.665,0.253,0.703,-0.283,0.058,0.957,0.197,0.65,0.734,0.645,0.258,0.72,0.368,0.89,-0.271,-0.009,0.615,0.789,-0.068,0.61,0.789,-0.075,0.977,-0.2,0.181,0.98,-0.079,0.057,0.607,0.793,0.076,0.977,-0.201,-0.209,0.649,0.731,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.003,0.441,0.897,0.303,0.071,0.95,-0.005,0.817,0.577,0.175,0.44,0.881,-0.187,0.98,-0.073,-0.001,0.983,-0.182,-0.005,0.817,0.576,-0.005,0.817,0.576,-0.188,0.436,0.88,-0.65,0.268,0.712,-0.283,0.058,0.957,-0.009,0.615,0.789,-0.067,0.61,0.789,-0.075,0.977,-0.2,0.201,0.648,0.734,0.183,0.98,-0.078,0.057,0.607,0.793,0.076,0.977,-0.201,-0.21,0.649,0.731,0.181,0.44,0.88,0.538,0.44,0.72,-0.005,0.818,0.574,-0.005,0.817,0.577,-0.005,0.818,0.575,-0.003,0.441,0.897,0.312,0.07,0.948,-0.005,0.817,0.576,-0.189,0.979,-0.073,0,0.983,-0.183,-0.005,0.818,0.576,-0.188,0.436,0.88,-0.649,0.267,0.712,-0.283,0.058,0.957,0.197,0.649,0.735,0.645,0.259,0.719,-0.005,0.817,0.576,-0.009,0.615,0.789,-0.067,0.61,0.789,-0.076,0.977,-0.201,0.057,0.607,0.793,0.076,0.977,-0.201,-0.209,0.649,0.732,-0.005,0.817,0.577,-0.005,0.817,0.576,-0.003,0.441,0.897,0.303,0.071,0.95,-0.005,0.817,0.576,0.175,0.44,0.881,0.184,0.98,-0.077,-0.186,0.98,-0.073,0,0.983,-0.183,-0.005,0.818,0.576,-0.188,0.436,0.88,-0.65,0.267,0.712,-0.283,0.058,0.957,0.197,0.649,0.735,0.645,0.259,0.719,0.385,0.883,-0.269,-0.009,0.615,0.789,-0.067,0.61,0.789,-0.076,0.977,-0.2,0.057,0.607,0.793,0.076,0.977,-0.201,-0.209,0.649,0.732,-0.005,0.817,0.577,-0.005,0.817,0.576,-0.003,0.442,0.897,0.303,0.071,0.95,-0.005,0.817,0.576,0.175,0.44,0.881,0.184,0.98,-0.077,-0.186,0.98,-0.073,-0.001,0.983,-0.182,-0.005,0.817,0.576,-0.005,0.817,0.576,-0.188,0.436,0.88,-0.65,0.268,0.711,-0.283,0.058,0.957,0.197,0.65,0.734,0.645,0.258,0.72,0.381,0.885,-0.268,-0.009,0.615,0.789,-0.068,0.61,0.789,-0.075,0.977,-0.2,0.181,0.98,-0.079,0.057,0.607,0.793,0.076,0.977,-0.201,-0.21,0.649,0.731,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.003,0.441,0.897,0.303,0.071,0.95,-0.005,0.817,0.577,0.175,0.44,0.881,-0.188,0.979,-0.073,-0.001,0.983,-0.182,-0.005,0.817,0.576,-0.005,0.817,0.576,-0.188,0.436,0.88,-0.65,0.268,0.712,-0.283,0.058,0.957,0.197,0.65,0.734,0.645,0.258,0.72,0.381,0.885,-0.266,-0.009,0.615,0.789,-0.068,0.61,0.789,-0.075,0.977,-0.2,0.181,0.98,-0.079,0.057,0.607,0.793,0.076,0.977,-0.201,-0.21,0.649,0.731,-0.005,0.817,0.577,-0.005,0.818,0.575,-0.003,0.441,0.897,0.303,0.071,0.95,-0.005,0.818,0.576,0.175,0.44,0.881,-0.188,0.979,-0.073,-0.001,0.983,-0.182,-0.005,0.817,0.576,-0.005,0.817,0.576,-0.188,0.436,0.88,-0.649,0.268,0.712,-0.283,0.058,0.957,0.197,0.649,0.735,0.646,0.259,0.718,0.391,0.881,-0.267,-0.009,0.615,0.789,-0.067,0.61,0.789,-0.076,0.977,-0.2,0.057,0.607,0.793,0.077,0.977,-0.201,-0.209,0.649,0.732,-0.005,0.817,0.577,-0.005,0.818,0.575,-0.003,0.441,0.897,0.303,0.071,0.95,-0.005,0.818,0.575,0.175,0.44,0.881,0.184,0.98,-0.076,-0.19,0.979,-0.071,-0.001,0.983,-0.182,-0.005,0.817,0.576,-0.005,0.817,0.576,-0.188,0.436,0.88,-0.651,0.269,0.71,-0.283,0.058,0.957,0.197,0.65,0.734,0.644,0.257,0.72,0.377,0.887,-0.267,-0.009,0.615,0.789,-0.068,0.61,0.789,-0.075,0.977,-0.2,0.181,0.98,-0.079,0.057,0.607,0.793,0.077,0.977,-0.201,-0.209,0.649,0.732,-0.005,0.817,0.577,-0.005,0.818,0.575,-0.003,0.441,0.897,0.303,0.071,0.95,-0.005,0.818,0.575,0.175,0.44,0.881,-0.19,0.979,-0.071,-0.001,0.983,-0.182,-0.005,0.817,0.576,-0.005,0.817,0.576,-0.188,0.436,0.88,-0.649,0.267,0.713,-0.283,0.058,0.957,0.197,0.649,0.735,0.645,0.259,0.719,-0.005,0.817,0.576,-0.009,0.615,0.789,-0.067,0.61,0.789,-0.076,0.977,-0.201,0.057,0.607,0.793,0.076,0.977,-0.201,-0.21,0.649,0.731,-0.005,0.817,0.577,-0.005,0.818,0.576,-0.003,0.441,0.897,0.303,0.071,0.95,-0.005,0.818,0.576,0.175,0.44,0.881,0.184,0.98,-0.077,-0.188,0.979,-0.073,0,0.983,-0.183,-0.005,0.817,0.576,-0.188,0.436,0.88,-0.65,0.267,0.712,-0.283,0.058,0.957,0.197,0.65,0.734,0.645,0.258,0.72,0.38,0.885,-0.268,-0.009,0.615,0.789,-0.068,0.61,0.789,-0.075,0.977,-0.2,0.181,0.98,-0.079,0.057,0.607,0.793,0.076,0.977,-0.201,-0.209,0.649,0.732,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.003,0.441,0.897,0.303,0.071,0.95,-0.005,0.817,0.577,0.175,0.44,0.881,-0.186,0.98,-0.073,-0.001,0.983,-0.182,-0.005,0.817,0.576,-0.005,0.817,0.576,-0.188,0.436,0.88,-0.649,0.267,0.712,-0.283,0.058,0.957,0.198,0.65,0.734,0.692,0.258,0.674,-0.005,0.818,0.576,-0.009,0.615,0.789,-0.068,0.61,0.789,-0.075,0.977,-0.2,0.184,0.98,-0.079,0.057,0.607,0.793,0.076,0.977,-0.201,-0.21,0.649,0.731,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.003,0.442,0.897,0.303,0.07,0.95,-0.005,0.817,0.576,0.175,0.44,0.881,-0.188,0.979,-0.073,0,0.983,-0.183,-0.005,0.817,0.576,-0.213,0.464,0.86,-0.717,0.389,0.578,-0.256,0.091,0.962,0.221,0.64,0.736,0.817,0.303,0.491,0.694,0.651,-0.308,-0.008,0.619,0.786,-0.039,0.617,0.786,-0.041,0.981,-0.191,0.027,0.614,0.789,0.037,0.982,-0.187,-0.626,0.727,-0.282,-0.233,0.639,0.733,-0.214,0.973,-0.087,0.043,0.985,-0.165,-0.006,0.817,0.577,-0.006,0.817,0.577,-0.005,0.817,0.576,-0.004,0.444,0.896,0.324,0.081,0.942,-0.005,0.817,0.577,0.197,0.47,0.86,0.037,0.609,0.792,-0.042,0.985,-0.165,0.212,0.972,-0.099,-0.047,0.611,0.79,0.003,0.988,-0.157,-0.192,0.531,0.826,-0.628,0.465,0.624,-0.357,0.079,0.931,0.462,0.656,0.597,0.542,0.479,0.691,0.424,0.875,-0.234,-0.008,0.618,0.786,-0.041,0.617,0.786,-0.044,0.981,-0.19,0.031,0.613,0.789,0.044,0.981,-0.191,-0.002,0.819,0.574,-0.473,0.653,0.592,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.006,0.817,0.577,-0.004,0.444,0.896,0.356,0.104,0.929,-0.005,0.817,0.577,0.178,0.535,0.826,0.218,0.646,0.732,0.162,0.983,-0.092,-0.231,0.646,0.728,-0.168,0.982,-0.089,-0.001,0.984,-0.176,-0.005,0.818,0.574,-0.188,0.436,0.88,-0.659,0.222,0.719,-0.283,0.058,0.957,0.198,0.65,0.734,0.644,0.258,0.72,-0.005,0.817,0.576,-0.009,0.615,0.789,-0.068,0.61,0.789,-0.075,0.977,-0.2,0.182,0.98,-0.079,0.057,0.607,0.793,0.076,0.977,-0.2,-0.323,0.901,-0.289,-0.209,0.649,0.731,-0.005,0.817,0.577,-0.005,0.817,0.576,-0.003,0.442,0.897,0.303,0.071,0.95,-0.005,0.817,0.576,0.175,0.44,0.881,-0.187,0.98,-0.072,0,0.983,-0.182,-0.005,0.817,0.577,-0.188,0.436,0.88,-0.648,0.267,0.713,-0.283,0.058,0.957,0.198,0.65,0.734,0.645,0.258,0.72,-0.005,0.817,0.576,-0.009,0.615,0.789,-0.068,0.61,0.789,-0.075,0.977,-0.2,0.183,0.98,-0.079,0.057,0.607,0.793,0.076,0.977,-0.2,-0.374,0.886,-0.274,-0.209,0.649,0.731,-0.005,0.817,0.577,-0.005,0.817,0.576,-0.003,0.441,0.897,0.303,0.071,0.95,-0.005,0.817,0.576,0.175,0.44,0.881,-0.187,0.98,-0.072,0,0.983,-0.182,-0.005,0.817,0.577,-0.188,0.436,0.88,-0.649,0.267,0.712,-0.283,0.058,0.957,0.197,0.649,0.735,0.644,0.258,0.72,-0.005,0.817,0.576,-0.009,0.615,0.789,-0.067,0.61,0.789,-0.076,0.977,-0.201,0.057,0.607,0.793,0.076,0.977,-0.2,-0.378,0.885,-0.273,-0.209,0.649,0.731,-0.005,0.817,0.577,-0.005,0.817,0.576,-0.003,0.441,0.897,0.303,0.071,0.95,-0.005,0.817,0.577,0.175,0.44,0.881,0.183,0.98,-0.077,-0.187,0.98,-0.072,0,0.983,-0.182,-0.005,0.817,0.577,-0.188,0.436,0.88,-0.649,0.267,0.712,-0.283,0.058,0.957,0.197,0.649,0.734,0.645,0.258,0.72,-0.005,0.817,0.576,-0.009,0.615,0.789,-0.068,0.61,0.789,-0.075,0.977,-0.2,0.18,0.98,-0.08,0.057,0.607,0.793,0.076,0.977,-0.201,-0.209,0.649,0.732,-0.005,0.817,0.577,-0.005,0.817,0.576,-0.003,0.441,0.897,0.303,0.07,0.95,-0.005,0.817,0.576,0.175,0.44,0.881,-0.186,0.98,-0.073,0,0.983,-0.183,-0.005,0.817,0.577,-0.188,0.436,0.88,-0.649,0.268,0.712,-0.283,0.058,0.957,0.197,0.649,0.735,0.644,0.259,0.72,-0.005,0.817,0.576,-0.009,0.615,0.789,-0.067,0.61,0.789,-0.076,0.977,-0.201,0.057,0.607,0.793,0.077,0.977,-0.201,-0.208,0.649,0.732,-0.005,0.817,0.577,-0.005,0.817,0.576,-0.003,0.441,0.897,0.303,0.071,0.95,-0.005,0.817,0.576,0.175,0.44,0.881,0.185,0.98,-0.077,-0.188,0.98,-0.072,0,0.983,-0.183,-0.005,0.817,0.577,-0.188,0.436,0.88,-0.649,0.267,0.712,-0.283,0.058,0.957,0.198,0.65,0.734,0.645,0.259,0.719,-0.005,0.817,0.576,-0.009,0.615,0.789,-0.068,0.61,0.789,-0.075,0.977,-0.2,0.183,0.98,-0.079,0.057,0.607,0.793,0.076,0.977,-0.2,-0.378,0.885,-0.273,-0.209,0.649,0.731,-0.005,0.817,0.577,-0.005,0.817,0.576,-0.003,0.442,0.897,0.303,0.07,0.95,-0.005,0.817,0.576,0.175,0.44,0.881,-0.187,0.98,-0.072,0,0.983,-0.182,-0.005,0.817,0.577,-0.188,0.436,0.88,-0.65,0.267,0.712,-0.283,0.058,0.957,0.197,0.649,0.735,0.645,0.259,0.719,-0.005,0.817,0.576,-0.009,0.615,0.789,-0.067,0.61,0.789,-0.076,0.977,-0.201,0.057,0.607,0.793,0.076,0.977,-0.2,-0.381,0.883,-0.273,-0.209,0.649,0.731,-0.005,0.817,0.577,-0.005,0.817,0.576,-0.003,0.441,0.897,0.303,0.071,0.95,-0.005,0.817,0.576,0.175,0.44,0.881,0.184,0.98,-0.077,-0.187,0.98,-0.072,0,0.983,-0.182,-0.005,0.817,0.577,-0.188,0.436,0.88,-0.649,0.268,0.712,-0.283,0.058,0.957,0.197,0.649,0.734,0.645,0.258,0.72,-0.005,0.818,0.576,-0.009,0.615,0.789,-0.068,0.61,0.789,-0.075,0.977,-0.2,0.18,0.98,-0.08,0.057,0.607,0.793,0.077,0.977,-0.201,-0.208,0.649,0.732,-0.005,0.817,0.577,-0.005,0.817,0.576,-0.003,0.441,0.897,0.303,0.071,0.95,-0.005,0.817,0.576,0.175,0.44,0.881,-0.188,0.98,-0.071,0,0.983,-0.183,-0.005,0.817,0.576,-0.188,0.436,0.88,-0.649,0.267,0.712,-0.283,0.058,0.957,0.197,0.649,0.734,0.644,0.257,0.721,-0.005,0.818,0.576,-0.009,0.615,0.789,-0.068,0.61,0.789,-0.075,0.977,-0.2,0.18,0.98,-0.08,0.057,0.607,0.793,0.076,0.977,-0.201,-0.209,0.649,0.732,-0.005,0.817,0.577,-0.005,0.817,0.576,-0.003,0.441,0.897,0.303,0.071,0.95,-0.005,0.817,0.576,0.175,0.44,0.881,-0.186,0.98,-0.073,0,0.983,-0.183,-0.005,0.817,0.576,-0.188,0.436,0.88,-0.648,0.266,0.713,-0.283,0.058,0.957,0.197,0.65,0.734,0.646,0.258,0.718,0.414,0.87,-0.267,-0.009,0.615,0.789,-0.068,0.61,0.789,-0.075,0.977,-0.2,0.181,0.98,-0.079,0.057,0.607,0.793,0.076,0.977,-0.201,-0.209,0.649,0.732,-0.005,0.817,0.577,-0.005,0.817,0.576,-0.003,0.441,0.897,0.303,0.071,0.95,-0.005,0.817,0.576,0.175,0.44,0.881,-0.186,0.98,-0.073,-0.001,0.983,-0.182,-0.005,0.817,0.576,-0.005,0.817,0.577,-0.188,0.436,0.88,-0.65,0.268,0.711,-0.283,0.058,0.957,0.197,0.649,0.734,0.645,0.258,0.719,-0.005,0.817,0.576,-0.009,0.615,0.789,-0.068,0.61,0.789,-0.075,0.977,-0.201,0.181,0.98,-0.08,0.057,0.607,0.793,0.076,0.977,-0.2,-0.414,0.868,-0.274,-0.209,0.649,0.731,-0.005,0.817,0.577,-0.005,0.817,0.576,-0.003,0.441,0.897,0.303,0.071,0.95,-0.005,0.817,0.576,0.175,0.44,0.881,-0.187,0.98,-0.072,0,0.983,-0.182,-0.005,0.817,0.577,-0.188,0.436,0.88,-0.65,0.267,0.712,-0.283,0.058,0.957,0.198,0.65,0.734,0.645,0.259,0.719,-0.005,0.817,0.576,-0.009,0.615,0.789,-0.068,0.61,0.789,-0.075,0.977,-0.201,0.185,0.979,-0.079,0.057,0.607,0.793,0.048,0.952,-0.304,-0.209,0.649,0.732,-0.005,0.817,0.577,-0.005,0.817,0.576,-0.003,0.441,0.897,0.303,0.071,0.95,-0.005,0.817,0.577,0.175,0.44,0.881,-0.184,0.98,-0.077,0.005,0.987,-0.164,-0.188,0.436,0.88,-0.65,0.268,0.711,-0.283,0.058,0.957,0.198,0.65,0.734,0.781,0.243,0.576,-0.005,0.817,0.576,-0.009,0.615,0.789,-0.068,0.61,0.789,-0.075,0.977,-0.201,0.185,0.979,-0.079,0.057,0.607,0.793,0.048,0.952,-0.304,-0.005,0.819,0.573,-0.21,0.649,0.731,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.003,0.442,0.897,0.303,0.071,0.95,-0.005,0.817,0.577,0.175,0.44,0.881,-0.189,0.979,-0.077,0.005,0.987,-0.163,-0.188,0.436,0.88,-0.785,0.25,0.567,-0.283,0.058,0.957,0.198,0.649,0.734,0.644,0.259,0.72,-0.005,0.817,0.577,-0.009,0.615,0.789,-0.067,0.61,0.789,-0.076,0.977,-0.201,0.057,0.607,0.793,0.048,0.952,-0.304,-0.005,0.817,0.577,-0.21,0.649,0.731,-0.005,0.817,0.577,-0.005,0.818,0.576,-0.004,0.817,0.577,-0.003,0.441,0.897,0.303,0.071,0.95,-0.005,0.817,0.577,0.175,0.44,0.881,0.189,0.979,-0.077,-0.189,0.979,-0.077,0.005,0.987,-0.164,-0.188,0.436,0.88,-0.649,0.268,0.713,-0.283,0.058,0.957,0.198,0.65,0.734,0.645,0.259,0.719,-0.005,0.817,0.577,-0.009,0.615,0.789,-0.067,0.61,0.789,-0.076,0.977,-0.201,0.057,0.607,0.793,0.048,0.952,-0.303,-0.005,0.817,0.577,-0.21,0.649,0.731,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.003,0.441,0.897,0.303,0.071,0.95,-0.005,0.817,0.577,0.175,0.44,0.881,0.189,0.979,-0.077,-0.189,0.979,-0.077,0.005,0.987,-0.164,-0.188,0.436,0.88,-0.65,0.268,0.712,-0.283,0.058,0.957,0.197,0.649,0.735,0.645,0.259,0.719,-0.005,0.817,0.577,-0.009,0.615,0.789,-0.067,0.61,0.789,-0.076,0.977,-0.201,0.057,0.607,0.793,0.047,0.95,-0.309,-0.005,0.817,0.576,-0.21,0.649,0.731,-0.005,0.817,0.577,-0.005,0.817,0.576,-0.003,0.441,0.897,0.303,0.071,0.95,-0.005,0.817,0.577,0.175,0.44,0.881,0.184,0.98,-0.078,-0.189,0.979,-0.077,0.005,0.987,-0.163,-0.188,0.436,0.88,-0.65,0.267,0.711,-0.283,0.058,0.957,0.198,0.649,0.734,0.645,0.259,0.719,-0.005,0.817,0.577,-0.009,0.615,0.789,-0.067,0.61,0.789,-0.076,0.977,-0.201,0.057,0.607,0.793,0.048,0.951,-0.304,-0.209,0.649,0.732,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.003,0.441,0.897,0.303,0.071,0.95,-0.005,0.817,0.576,0.175,0.44,0.881,0.189,0.979,-0.077,-0.184,0.98,-0.077,0.005,0.987,-0.164,-0.188,0.436,0.88,-0.65,0.268,0.711,-0.283,0.058,0.957,0.197,0.649,0.735,0.646,0.259,0.718,-0.005,0.817,0.577,-0.009,0.615,0.789,-0.067,0.61,0.789,-0.067,0.974,-0.217,0.057,0.607,0.793,0.076,0.977,-0.201,-0.005,0.817,0.576,-0.21,0.649,0.731,-0.005,0.817,0.577,-0.005,0.818,0.576,-0.003,0.441,0.897,0.303,0.071,0.95,-0.005,0.818,0.576,0.175,0.44,0.881,0.183,0.98,-0.078,-0.191,0.979,-0.073,-0.006,0.987,-0.163,-0.188,0.436,0.88,-0.651,0.268,0.711,-0.283,0.058,0.957,0.198,0.65,0.734,0.646,0.259,0.719,-0.005,0.817,0.577,-0.009,0.615,0.789,-0.068,0.61,0.789,-0.075,0.977,-0.201,0.185,0.979,-0.079,0.057,0.607,0.793,0.048,0.951,-0.304,-0.209,0.649,0.732,-0.005,0.817,0.577,-0.005,0.818,0.576,-0.003,0.441,0.897,0.303,0.071,0.95,-0.005,0.818,0.576,0.175,0.44,0.881,-0.184,0.98,-0.077,0.005,0.987,-0.164,-0.188,0.436,0.88,-0.65,0.268,0.711,-0.283,0.058,0.957,0.198,0.649,0.734,0.645,0.259,0.719,-0.005,0.817,0.577,-0.009,0.615,0.789,-0.067,0.61,0.789,-0.076,0.977,-0.201,0.057,0.607,0.793,0.048,0.952,-0.304,-0.005,0.817,0.576,-0.21,0.649,0.731,-0.005,0.817,0.577,-0.005,0.817,0.576,-0.003,0.441,0.897,0.303,0.07,0.95,-0.005,0.817,0.576,0.175,0.44,0.881,0.189,0.979,-0.077,-0.189,0.979,-0.077,0.005,0.987,-0.163,-0.188,0.436,0.88,-0.65,0.268,0.711,-0.283,0.058,0.957,0.197,0.649,0.735,0.644,0.258,0.72,-0.005,0.817,0.577,-0.009,0.615,0.789,-0.067,0.61,0.789,-0.067,0.974,-0.217,0.057,0.607,0.793,0.076,0.977,-0.201,-0.005,0.817,0.577,-0.21,0.649,0.731,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.003,0.441,0.897,0.303,0.071,0.95,-0.005,0.817,0.576,0.175,0.44,0.881,0.183,0.98,-0.079,-0.191,0.979,-0.073,-0.006,0.987,-0.163,-0.188,0.436,0.88,-0.649,0.268,0.712,-0.283,0.058,0.957,0.198,0.65,0.734,0.645,0.259,0.72,-0.005,0.817,0.576,-0.009,0.615,0.789,-0.068,0.61,0.789,-0.075,0.977,-0.201,0.185,0.979,-0.079,0.057,0.607,0.793,0.046,0.948,-0.315,-0.208,0.649,0.732,-0.005,0.817,0.577,-0.005,0.818,0.576,-0.003,0.441,0.897,0.303,0.07,0.95,-0.005,0.818,0.575,0.175,0.44,0.881,-0.186,0.98,-0.076,0.005,0.987,-0.164,-0.188,0.436,0.88,-0.649,0.268,0.712,-0.283,0.058,0.957,0.198,0.649,0.734,0.645,0.26,0.719,-0.005,0.817,0.577,-0.009,0.615,0.789,-0.067,0.61,0.789,-0.076,0.977,-0.201,0.057,0.607,0.793,0.046,0.948,-0.315,-0.005,0.818,0.576,-0.209,0.649,0.731,-0.005,0.817,0.577,-0.005,0.818,0.576,-0.003,0.441,0.897,0.303,0.071,0.95,-0.005,0.818,0.576,0.175,0.44,0.881,0.189,0.979,-0.077,-0.191,0.979,-0.075,0.005,0.987,-0.164,-0.188,0.436,0.88,-0.65,0.268,0.711,-0.283,0.058,0.957,0.198,0.65,0.734,0.645,0.259,0.719,-0.005,0.817,0.577,-0.009,0.615,0.789,-0.068,0.61,0.789,-0.075,0.977,-0.201,0.185,0.979,-0.079,0.057,0.607,0.793,0.048,0.952,-0.303,-0.005,0.817,0.577,-0.21,0.649,0.731,-0.005,0.817,0.577,-0.005,0.818,0.576,-0.003,0.441,0.897,0.303,0.07,0.95,-0.005,0.818,0.575,0.175,0.44,0.881,-0.189,0.979,-0.077,0.005,0.987,-0.164,-0.188,0.436,0.88,-0.649,0.268,0.712,-0.283,0.058,0.957,0.198,0.65,0.734,0.645,0.259,0.719,-0.004,0.817,0.576,-0.009,0.615,0.789,-0.068,0.61,0.789,-0.075,0.977,-0.201,0.185,0.979,-0.079,0.057,0.607,0.793,0.048,0.951,-0.304,-0.004,0.817,0.577,-0.21,0.649,0.731,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.003,0.441,0.897,0.303,0.071,0.95,-0.005,0.817,0.577,0.175,0.44,0.881,-0.189,0.979,-0.077,0.005,0.987,-0.164,-0.188,0.436,0.88,-0.65,0.268,0.711,-0.283,0.058,0.957,0.198,0.65,0.734,0.67,0.242,0.702,-0.005,0.817,0.577,-0.009,0.615,0.789,-0.068,0.61,0.789,-0.075,0.977,-0.201,0.182,0.98,-0.08,0.057,0.607,0.793,0.047,0.951,-0.307,-0.004,0.817,0.577,-0.21,0.649,0.731,-0.005,0.817,0.577,-0.005,0.817,0.576,-0.003,0.441,0.897,0.303,0.071,0.95,-0.005,0.817,0.576,0.175,0.44,0.881,-0.189,0.979,-0.077,0.005,0.987,-0.163,-0.232,0.462,0.856,-0.682,0.401,0.612,-0.278,0.089,0.956,0.242,0.638,0.731,0.828,0.295,0.478,-0.005,0.817,0.577,-0.008,0.618,0.786,-0.042,0.616,0.787,-0.042,0.981,-0.189,0.031,0.613,0.79,0.045,0.98,-0.191,-0.513,0.807,-0.292,-0.253,0.637,0.728,-0.232,0.969,-0.084,0.047,0.985,-0.165,-0.005,0.817,0.577,-0.005,0.819,0.574,-0.004,0.444,0.896,0.344,0.08,0.935,-0.005,0.818,0.576,0.215,0.468,0.858,0.041,0.61,0.791,-0.046,0.985,-0.165,0.232,0.968,-0.097,-0.051,0.612,0.79,-0.004,0.988,-0.157,-0.17,0.873,0.457,0.136,0.722,0.678,0.141,0.877,0.459,-0.601,0.06,0.797,-0.174,0.73,0.661,-0.613,0.758,-0.222,0.56,0.81,-0.174,0.552,0.105,0.827,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.147,0.879,0.453,0.132,0.721,0.68,0.61,0.754,0.243,-0.559,0.092,0.824,-0.174,0.73,0.661,-0.559,0.809,-0.179,-0.005,0.817,0.577,0.374,0.865,-0.334,0.553,0.104,0.827,-0.005,0.817,0.577,-0.005,0.817,0.576,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.147,0.879,0.453,0.137,0.722,0.678,0.164,0.869,0.467,-0.56,0.092,0.823,-0.174,0.73,0.661,-0.558,0.809,-0.181,0.554,0.812,-0.186,0.552,0.105,0.827,-0.005,0.817,0.576,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.147,0.879,0.453,0.137,0.722,0.678,0.164,0.869,0.467,-0.56,0.092,0.824,-0.174,0.73,0.661,-0.558,0.81,-0.181,0.554,0.812,-0.186,0.552,0.105,0.827,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.147,0.879,0.453,0.132,0.721,0.68,0.609,0.755,0.244,-0.559,0.092,0.824,-0.174,0.73,0.661,-0.559,0.809,-0.179,-0.005,0.817,0.577,0.373,0.865,-0.334,0.551,0.104,0.828,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.576,-0.147,0.879,0.453,0.132,0.721,0.68,0.61,0.754,0.243,-0.559,0.092,0.824,-0.174,0.73,0.661,-0.558,0.81,-0.179,-0.005,0.817,0.577,0.374,0.865,-0.334,0.552,0.104,0.828,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.147,0.879,0.453,0.132,0.721,0.68,0.609,0.755,0.244,-0.559,0.092,0.824,-0.174,0.73,0.661,-0.559,0.809,-0.179,-0.005,0.817,0.577,0.374,0.865,-0.334,0.551,0.104,0.828,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.576,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.147,0.879,0.453,0.132,0.721,0.68,0.61,0.754,0.243,-0.559,0.092,0.824,-0.174,0.73,0.661,-0.559,0.81,-0.179,-0.005,0.817,0.577,0.374,0.865,-0.334,0.552,0.104,0.827,-0.005,0.817,0.577,-0.005,0.817,0.576,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.147,0.879,0.453,0.132,0.721,0.68,0.609,0.754,0.243,-0.559,0.092,0.824,-0.174,0.73,0.661,-0.56,0.809,-0.179,-0.005,0.817,0.577,0.374,0.865,-0.334,0.551,0.104,0.828,-0.005,0.817,0.576,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.147,0.879,0.453,0.132,0.721,0.68,0.61,0.754,0.243,-0.559,0.092,0.824,-0.174,0.73,0.661,-0.559,0.809,-0.179,-0.005,0.817,0.577,0.374,0.865,-0.334,0.552,0.104,0.827,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.147,0.879,0.453,0.132,0.721,0.68,0.61,0.754,0.243,-0.56,0.092,0.824,-0.174,0.73,0.661,-0.56,0.809,-0.179,-0.005,0.817,0.577,0.374,0.865,-0.334,0.552,0.104,0.827,-0.004,0.818,0.575,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.147,0.879,0.453,0.132,0.721,0.68,0.61,0.754,0.243,-0.559,0.092,0.824,-0.174,0.73,0.661,-0.56,0.809,-0.179,-0.005,0.817,0.577,0.374,0.865,-0.334,0.552,0.104,0.827,-0.005,0.817,0.576,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.147,0.879,0.453,0.132,0.721,0.68,0.61,0.754,0.243,-0.56,0.092,0.824,-0.174,0.73,0.661,-0.56,0.809,-0.179,-0.005,0.817,0.577,0.374,0.865,-0.334,0.552,0.104,0.827,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.576,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.147,0.879,0.453,0.132,0.721,0.68,0.61,0.754,0.243,-0.56,0.092,0.824,-0.174,0.73,0.661,-0.56,0.809,-0.179,-0.005,0.817,0.577,0.374,0.865,-0.334,0.552,0.104,0.827,-0.005,0.817,0.576,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.147,0.879,0.453,0.132,0.721,0.68,0.61,0.754,0.243,-0.56,0.092,0.824,-0.174,0.73,0.661,-0.56,0.809,-0.179,-0.005,0.817,0.577,0.374,0.865,-0.334,0.552,0.104,0.827,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.147,0.879,0.453,0.132,0.721,0.68,0.61,0.754,0.243,-0.56,0.092,0.824,-0.174,0.73,0.661,-0.56,0.809,-0.179,-0.005,0.817,0.577,0.374,0.865,-0.334,0.552,0.104,0.828,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.17,0.873,0.458,0.132,0.721,0.68,0.663,0.711,0.234,-0.559,0.091,0.824,-0.174,0.73,0.661,-0.553,0.81,-0.195,-0.005,0.817,0.577,0.39,0.856,-0.34,0.618,0.062,0.784,-0.005,0.817,0.576,-0.006,0.817,0.576,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.466,0.829,0.309,0.543,0.529,0.653,-0.28,0.958,-0.068,0.266,0.838,0.477,0.004,0.876,0.483,0.621,0.173,0.765,-0.119,0.655,0.746,0.543,0.529,0.653,-0.466,0.829,0.309,-0.649,0.696,0.306,-0.649,0.696,0.306,0.088,0.676,0.732,0.798,0.521,0.304,-0.068,0.938,0.339,0.485,0.828,-0.282,0.027,0.301,0.953,0.088,0.676,0.732,-0.556,-0.07,0.828,-0.068,0.938,0.339,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.515,0.028,0.857,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.108,0.978,-0.178,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.108,0.978,-0.178,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,0.014,0.645,-0.764,-1,-0.002,-0.007,-1,-0.002,-0.007,1,0.002,0.007,-1,-0.002,-0.007,1,0.002,0.007,-1,-0.002,-0.007,0.004,0.577,-0.817,-0.009,-0.189,0.982,-1,-0.002,-0.007,0.002,0.727,-0.687,1,0.002,0.007,-1,-0.002,-0.007,-1,-0.002,-0.007,1,0.002,0.007,-1,-0.002,-0.007,1,0.002,0.007,-1,-0.002,-0.007,1,0.002,0.007,-0.007,-0.002,1,0.014,0.645,-0.764,-1,-0.002,-0.007,0.007,0,-1,0.014,0.645,-0.764,-1,-0.008,-0.01,-1,0.002,-0.007,1,0.002,0.007,-1,-0.002,-0.007,1,0.002,0.007,-1,-0.002,-0.007,0.004,0.577,-0.817,0.052,0.571,-0.82,-1,-0.002,-0.007,-0.005,0.817,0.577,1,0.002,0.007,-1,-0.002,-0.007,1,0.002,0.007,-1,-0.002,-0.007,1,0.002,0.007,-1,-0.002,-0.007,1,0.002,0.007,-1,-0.002,-0.007,1,0.001,0.007,-0.007,-0.002,1,0.006,-0.001,-1,0.014,0.645,-0.764,-1,-0.002,-0.007,0.002,-1,-0.002,0.007,-0.001,-1,-0.007,0.003,1,-0.937,0.048,0.345,-0.007,-0.002,1,0.55,0.615,0.565,-0.044,0.157,0.987,-0.264,0.036,0.964,0.075,-0.279,0.957,-0.007,-0.002,1,0.369,0.889,0.272,-0.072,0.706,0.705,0.369,0.889,0.272,-0.044,0.157,0.987,-0.168,0.975,0.149,-0.167,0.152,0.974,0.325,-0.663,0.675,-0.696,0.706,0.131,0.251,0.036,0.967,-0.007,-0.002,1,0.514,0.138,0.847,-0.424,-0.254,0.869,-0.006,-0.001,1,0.734,0.436,0.521,0.098,0.281,0.955,-0.007,0,1,-0.107,-0.226,0.968,0.256,0.815,0.519,0.001,0.052,0.999,-0.007,0.002,1,0.132,-0.457,0.88,-0.055,0.968,0.243,0.096,-0.234,0.968,-0.161,0.536,0.828,-0.006,-0.015,1,0.42,-0.838,0.349,0.001,0.052,0.999,0.001,0.052,0.999,0.781,-0.484,0.394,0.146,-0.016,0.989,-0.747,0.637,0.191,-0.223,0.954,0.2,-0.006,0,1,-0.006,-0.015,1,0.971,0.234,0.049,-0.007,-0.001,1,-0.937,0.048,0.345,0.007,0.002,-1,-0.007,-0.002,1,-0.007,-0.003,1,0.006,0,-1,-0.007,-0.002,1,0.002,-1,-0.002,-0.007,-0.002,1,-0.007,-0.002,1,-1,-0.002,-0.007,-0.006,0.002,1,-0.007,-0.002,1,-0.006,-0.015,1,-0.007,-0.002,1,-0.007,-0.001,1,-0.007,-0.003,1,-0.007,-0.003,1,-0.007,-0.002,1,0.007,0,-1,-0.007,-0.002,1,-0.007,0.484,0.875,0.007,-0.484,-0.875,0.002,0.875,-0.484,1,0.002,0.007,0.007,-0.484,-0.875,0.007,-0.484,-0.875,1,0.002,0.007,0.004,0.577,-0.817,0.004,0.577,-0.817,0.004,0.577,-0.817,0.004,0.577,-0.817,0.004,0.577,-0.817,0.004,0.577,-0.817,0.004,0.577,-0.817,0.004,0.577,-0.817,0.004,0.577,-0.817,0.004,0.577,-0.817,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.004,-0.577,0.817,-1,-0.002,-0.007,0.005,-0.817,-0.577,-1,-0.002,-0.007,1,0.002,0.007,0.004,0.577,-0.817,0.004,0.577,-0.817,-0.005,0.817,0.577,0.005,-0.817,-0.577,0.005,-0.817,-0.577,0.004,0.577,-0.817,-0.005,0.817,0.577,-0.004,-0.577,0.817,0.005,-0.817,-0.577,-1,-0.002,-0.007,0.005,-0.817,-0.577,-1,-0.002,-0.007,-0.005,0.817,0.577,0.004,0.577,-0.817,-0.005,0.817,0.577,0.005,-0.817,-0.577,0.004,0.577,-0.817,0.004,0.577,-0.817,0.004,0.577,-0.817,-0.005,0.817,0.577,-0.004,-0.577,0.817,-0.004,-0.577,0.817,-1,-0.002,-0.007,0.005,-0.817,-0.577,-1,-0.002,-0.007,1,0.002,0.007,0.004,0.577,-0.817,-0.005,0.817,0.577,0.005,-0.817,-0.577,0.004,0.577,-0.817,0.004,0.577,-0.817,-0.006,-0.133,0.991,0.004,0.577,-0.817,-0.006,-0.133,0.991,0.002,0.727,-0.687,0.004,0.577,-0.817,-0.005,0.817,0.577,0.002,0.821,-0.571,-0.006,-0.133,0.991,-0.005,0.817,0.577,0.007,0.575,-0.818,-0.005,0.817,0.577,0.77,0.521,0.369,0.631,0.631,0.453,-0.005,0.817,0.577,-0.004,-0.577,0.817,-0.004,-0.577,0.817,-0.004,-0.577,0.817,0.052,0.571,-0.82,-0.013,-0.503,-0.864,0.002,0.821,-0.571,1,0.002,0.007,0.002,0.821,-0.571,0.741,0.618,-0.261,-0.006,-0.133,0.991,-1,-0.002,-0.007,-1,-0.002,-0.007,-1,-0.002,-0.007,1,0.002,0.007,-0.005,0.817,0.577,-0.006,-0.133,0.991,-0.006,-0.133,0.991,-0.005,0.817,0.577,0.004,0.577,-0.817,-0.003,-0.789,0.614,-0.003,-0.789,0.614,0.002,0.821,-0.571,-0.005,0.817,0.577,-1,-0.002,-0.007,-0.005,0.817,0.577,0.004,0.577,-0.817,-0.003,-0.789,0.614,-1,-0.002,-0.007,0.004,0.577,-0.817,0.004,0.577,-0.817,0.004,0.577,-0.817,0.004,0.577,-0.817,-0.005,0.817,0.577,1,0.002,0.007,0.004,0.577,-0.817,1,0.002,0.007,-0.004,-0.577,0.817,-1,-0.002,-0.007,0.991,0.077,0.113,-0.004,-0.577,0.817,-1,-0.002,-0.007,0.004,0.577,-0.817,0.004,0.577,-0.817,0.004,0.577,-0.817,-0.005,0.817,0.577,1,0.002,0.007,0.004,0.577,-0.817,1,0.002,0.007,-0.004,-0.577,0.817,-0.004,-0.578,0.816,-0.004,-0.577,0.817,-0.005,0.817,0.577,0.004,0.577,-0.817,-0.655,0.619,0.434,-0.005,0.817,0.577,0.004,0.577,-0.817,1,0.002,0.007,-1,-0.002,-0.007,0.004,0.577,-0.817,-0.231,0.795,0.561,0.004,0.577,-0.817,0.647,0.621,0.442,1,0.002,0.007,0.005,-0.817,-0.577,1,0.002,0.007,1,0.002,0.007,0.004,0.577,-0.817,1,0.002,0.007,-1,-0.002,-0.007,0.004,0.577,-0.817,0.295,-0.78,-0.551,0.004,0.577,-0.817,0.285,0.779,0.559,0.004,0.577,-0.817,-0.295,0.782,0.549,0.004,0.577,-0.817,-0.285,-0.78,-0.557,-0.879,-0.388,-0.275,0.004,0.577,-0.817,-0.958,0.226,0.174,0.004,0.577,-0.817,0.004,0.577,-0.817,-0.995,-0.078,-0.068,0.004,0.577,-0.817,0.958,-0.232,-0.166,0.004,0.577,-0.817,0.004,0.577,-0.817,0.004,0.577,-0.817,0.776,-0.518,-0.359,0.004,0.577,-0.817,0.007,-0.484,-0.875,-0.006,-0.278,0.96,-0.008,0.045,0.999,0.004,0.925,-0.379,-0.118,0.811,0.572,0.108,0.812,0.574,-0.004,0.95,0.312,-0.004,-0.577,0.817,-0.006,0.612,0.791,-1,-0.002,-0.007,0.004,0.577,-0.817,-1,-0.002,-0.007,-0.004,-0.577,0.817,1,0.002,0.007,1,0.002,0.007,0.004,0.577,-0.817,-0.005,0.817,0.576,-0.005,0.817,0.577,-0.004,-0.577,0.817,-0.118,0.811,0.572,0.108,0.812,0.574,-0.004,0.95,0.312,-0.004,-0.577,0.817,-0.006,0.612,0.791,-1,-0.002,-0.007,0.004,0.577,-0.817,-1,-0.002,-0.007,-0.004,-0.577,0.817,1,0.002,0.007,1,0.002,0.007,0.004,0.577,-0.817,0.004,0.577,-0.817,-0.005,0.817,0.576,-0.004,-0.577,0.817,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.576,-0.007,0.043,0.999,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.006,0.736,0.677,0.004,-0.884,-0.467,0.004,-0.884,-0.467,-0.004,-0.577,0.817,0.004,0.577,-0.817,0.085,-0.814,-0.574,0.006,-0.736,-0.677,0.005,-0.817,-0.577,-0.533,-0.491,0.69,-0.006,0.736,0.677,-0.008,0.817,0.577,-1,-0.002,-0.007,0.005,-0.817,-0.577,-1,-0.002,-0.007,-0.005,0.817,0.577,-0.085,0.886,0.455,-0.077,0.807,0.585,0.005,-0.817,-0.577,0.525,-0.489,0.697,-0.004,0.817,0.577,0.075,0.814,0.576,0.005,-0.817,-0.577,0.004,0.577,-0.817,0.085,-0.814,-0.574,-0.075,-0.814,-0.576,0.005,-0.817,-0.577,-0.005,0.817,0.577,0,0,1,-1,-0.002,-0.007,-1,-0.002,-0.007,0.005,-0.817,-0.577,-0.005,0.817,0.577,0.004,0.577,-0.817,0.075,0.814,0.576,0.005,-0.817,-0.577,-0.353,-0.541,0.763,-0.005,0.817,0.577,-0.353,-0.541,0.763,-1,-0.002,-0.007,-0.005,0.817,0.576,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,0,0,1,-0.005,0.869,0.494,-0.005,0.756,0.655,-0.001,0.997,-0.072,0,0,1,0,0,1,-0.002,0.992,0.124,-0.004,0.949,0.315,0,0,1,-1,-0.002,-0.007,-1,-0.002,-0.007,-0.005,0.754,0.657,0,0,1,0.057,0.448,0.892,-0.007,0.449,0.894,-0.008,0.045,0.999,-0.007,0.072,0.997,-0.039,-0.654,0.755,-0.042,-0.789,0.613,0.064,-0.892,0.448,0.004,0.463,-0.887,-0.022,0.654,-0.756,0.003,0.745,-0.667,-0.042,-0.789,0.613,0.064,-0.892,0.448,0,0.964,-0.266,0.004,0.924,-0.382,0,0.964,-0.266,0.023,-0.975,0.222,-0.026,-0.997,0.072,-0.026,-0.997,0.072,0.004,0.925,-0.381,0,0,1,0.007,-0.266,-0.964,0,0,1,0.031,-0.553,0.833,-0.039,-0.654,0.756,0,0,1,-0.007,0.448,0.894,0.005,-0.756,-0.654,-0.004,0.949,0.315,-0.004,0.949,0.315,-0.004,0.949,0.315,0.983,0.095,-0.157,0.006,-0.614,-0.789,0.006,-0.614,-0.789,0.006,-0.614,-0.789,-0.026,-0.997,0.072,0.018,-0.992,-0.124,0,0,1,0.006,-0.265,-0.964,0,0,1,0.075,0.814,0.576,0.004,0.577,-0.817,0.005,-0.817,-0.577,-0.004,-0.577,0.817,-0.004,-0.577,0.817,-0.006,-0.315,0.949,0.009,0.402,-0.916,-1,-0.002,-0.007,-0.002,-0.894,0.449,0.001,-0.865,0.502,-0.022,0.654,-0.756,0.003,0.745,-0.667,-0.005,0.817,0.577,0.004,0.577,-0.817,-0.005,0.756,0.654,-0.004,0.949,0.315,0.004,0.071,-0.998,0.009,-0.007,-1,0.004,0.071,-0.998,-0.007,0.448,0.894,-0.004,0.949,0.315,-0.002,-0.894,0.448,0.004,0.577,-0.817,0.004,0.577,-0.817,-0.004,-0.577,0.817,0.006,-0.614,-0.789,0.005,-0.756,-0.654,0.005,-0.756,-0.654,0.005,-0.756,-0.654,-1,-0.002,-0.007,-1,-0.002,-0.007,0,0,1,0.002,-0.992,-0.124,0.006,-0.614,-0.789,0.004,-0.949,-0.315,0.004,-0.949,-0.315,-1,-0.002,-0.007,-0.002,-0.894,0.449,0,0.964,-0.266,0,0,1,-0.006,-0.278,0.96,-0.007,-0.312,0.95,0.004,0.463,-0.887,0.009,0.402,-0.916,0.004,0.925,-0.38,0.003,0.745,-0.667,-0.006,-0.125,0.992,-0.005,-0.127,0.992,0.009,0.402,-0.916,0.004,0.071,-0.998,-0.005,0.817,0.577,-0.008,0.046,0.999,-0.084,0.814,0.575,0.075,0.814,0.576,1,0.002,0.007,0.221,0.796,0.563,0.004,0.577,-0.817,0.004,0.577,-0.817,0.075,0.814,0.576,-0.005,-0.576,0.817,0.378,0.571,-0.729,-0.96,-0.279,0.027,0.965,0.264,0.009,0.879,0.474,-0.049,-0.981,0.141,0.134,0.673,-0.586,0.452,1,0.002,0.007,-0.004,-0.308,0.951,0.004,-0.976,0.22,-0.005,0.817,0.577,-0.004,-0.308,0.951,-0.004,0.307,0.952,-0.991,0.133,-0.035,0.007,0.496,-0.868,-0.006,-0.664,0.748,-0.004,-0.307,0.952,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.576,-0.006,0.817,0.577,-0.003,0.818,0.576,-0.084,0.881,0.465,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,0.004,0.577,-0.817,0.221,0.796,0.563,0.004,0.577,-0.817,-0.004,0.817,0.577,-0.005,0.817,0.577,-0.004,0.817,0.577,0.004,0.577,-0.817,0.004,0.577,-0.817,0.004,0.577,-0.817,-1,-0.002,-0.007,0.004,0.577,-0.817,0.004,0.577,-0.817,0.004,0.577,-0.817,0.004,0.577,-0.817,0.004,0.577,-0.817,0.004,0.577,-0.817,0.004,0.577,-0.817,0.004,0.577,-0.817,0.004,0.577,-0.817,-0.085,0.884,0.461,1,0.002,0.007,-0.005,0.817,0.577,-0.006,-0.188,0.982,0.005,-0.817,-0.577,0.001,0.574,-0.819,-0.003,-0.789,0.614,0.004,0.577,-0.817,-0.005,0.817,0.577,-0.002,0.572,-0.82,-0.003,-0.789,0.614,-0.005,0.817,0.577,0.004,0.577,-0.817,-0.007,-0.002,1,0.007,0,-1,-0.005,0.817,0.577,0.007,0.001,-1,-0.005,0.817,0.577,0.004,0.577,-0.817,-0.005,0.817,0.577,0.004,0.577,-0.817,0.002,0.821,-0.571,-0.005,0.817,0.577,1,0.002,0.007,0.004,0.577,-0.817,0.005,-0.817,-0.577,-0.007,-0.454,0.891,0.004,0.577,-0.817,0.004,0.577,-0.817,0.004,0.577,-0.817,0.004,0.577,-0.817,0.004,0.577,-0.817,1,0.002,0.007,0.004,0.577,-0.817,0.004,0.577,-0.817,0.004,0.577,-0.817,0.004,0.577,-0.817,0.004,0.577,-0.817,0.004,0.577,-0.817,0.004,0.577,-0.817,0.004,0.577,-0.817,0.004,0.577,-0.817,0.004,0.577,-0.817,0.004,0.577,-0.817,0.004,0.577,-0.817,0.004,0.577,-0.817,0.004,0.577,-0.817,0.004,0.577,-0.817,0.004,0.577,-0.817,0.004,0.577,-0.817,1,0.002,0.007,-0.007,0.072,0.997,0.057,0.448,0.892,-0.005,0.756,0.654,-1,-0.002,-0.007,0.002,-0.992,-0.124,0.005,-0.756,-0.654,0.004,0.577,-0.817,-0.004,-0.577,0.817,0,-0.66,0.751,-0.003,-0.485,0.875,0.015,-0.512,-0.859,-0.001,-0.639,0.769,0.015,-0.504,-0.863,-0.002,-0.973,0.23,0.004,0.765,-0.644,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.576,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,-0.005,0.817,0.577,0.917,-0.397,0.039,0.995,-0.1,-0.001,-0.859,-0.41,-0.306,-0.004,-0.577,0.817,0.652,0.576,-0.493,0.317,-0.762,0.564,0.007,-0.638,-0.77];
		var intTextures=2, intBlnTextureUVmapping=1;
		var arrTextureUVs=[0.1563,0.3079,0.1504,0.3077,0.1536,0.2993,0.1878,0.3177,0.1971,0.3076,0.2153,0.3513,0.1735,0.3148,0.1802,0.3154,0.1975,0.3557,0.2041,0.3565,0.167,0.3154,0.1849,0.3557,0.1706,0.3514,0.1594,0.3178,0.17,0.3079,0.1867,0.2993,0.1876,0.3076,0.1771,0.3566,0.1913,0.3554,0.2045,0.3078,0.1983,0.3076,0.2021,0.2992,0.2358,0.3175,0.2451,0.3075,0.2605,0.3513,0.2216,0.3147,0.2283,0.3153,0.243,0.3556,0.215,0.3154,0.2304,0.3557,0.2158,0.3513,0.2073,0.3178,0.2182,0.3078,0.2352,0.2992,0.2358,0.3075,0.2498,0.3565,0.2226,0.3565,0.2368,0.3554,0.2527,0.3077,0.2463,0.3075,0.2506,0.2992,0.2838,0.3175,0.2931,0.3074,0.306,0.3513,0.2696,0.3147,0.2763,0.3153,0.2885,0.3556,0.2953,0.3564,0.263,0.3153,0.2759,0.3556,0.261,0.3513,0.2553,0.3177,0.2664,0.3077,0.2837,0.2991,0.284,0.3074,0.2681,0.3565,0.2823,0.3553,0.6782,0.5371,0.6794,0.537,0.6781,0.5374,0.6788,0.5369,0.6786,0.5366,0.6792,0.5364,0.68,0.5358,0.6785,0.5361,0.6779,0.5351,0.6791,0.5349,0.6781,0.5364,0.6771,0.5367,0.6764,0.5352,0.68,0.5363,0.6782,0.5373,0.6768,0.537,0.6792,0.5357,0.9371,0.9903,0.9371,0.8965,0.9329,0.8977,0.9249,0.8977,0.73,0.9591,0.2772,0.6004,0.7302,0.6013,0.2765,0.9563,0.2774,0.5147,0.2776,0.5132,0.2731,0.5021,0.2425,0.5014,0.2742,0.5014,0.2748,0.5015,0.2726,0.503,0.2722,0.5041,0.2771,0.516,0.2719,0.5055,0.2767,0.5172,0.2717,0.5071,0.2763,0.518,0.2716,0.5087,0.2757,0.5186,0.2717,0.5105,0.2752,0.5189,0.2718,0.5122,0.2746,0.5188,0.2721,0.5138,0.274,0.5184,0.2725,0.5153,0.2734,0.5176,0.2729,0.5166,0.2736,0.5016,0.2776,0.5115,0.2776,0.5098,0.2774,0.5081,0.2753,0.502,0.2768,0.5051,0.2759,0.5027,0.2764,0.5038,0.2772,0.5065,0.2462,0.5081,0.3532,0.3084,0.3446,0.308,0.3458,0.2995,0.6055,0.3076,0.6078,0.3074,0.6025,0.3514,0.476,0.3149,0.5138,0.3154,0.5135,0.3558,0.5501,0.3172,0.548,0.3565,0.4383,0.3156,0.442,0.3559,0.3517,0.352,0.3705,0.3569,0.4076,0.3567,0.3518,0.3517,0.6081,0.3076,0.3457,0.2992,0.3422,0.3078,0.342,0.308,0.452,0.3078,0.6032,0.2991,0.6034,0.2987,0.363,0.3182,0.4021,0.3174,0.5868,0.3177,0.5829,0.3567,0.5963,0.3075,0.4778,0.3556,0.1981,0.3079,0.1537,0.2989,0.1505,0.3073,0.1868,0.2989,0.246,0.3078,0.2021,0.2989,0.2352,0.2988,0.2938,0.3077,0.2505,0.2988,0.2837,0.2987,0.6174,0.3072,0.609,0.307,0.6172,0.2985,0.647,0.317,0.6562,0.3069,0.648,0.3509,0.6329,0.3141,0.6396,0.3147,0.6327,0.3553,0.6399,0.3561,0.6262,0.3148,0.62,0.3553,0.6029,0.351,0.6182,0.3172,0.6566,0.3072,0.6171,0.2982,0.631,0.3072,0.6506,0.2985,0.6506,0.2981,0.649,0.3068,0.6126,0.3562,0.6263,0.355,0.3009,0.3077,0.2942,0.3075,0.299,0.2991,0.3176,0.3146,0.3243,0.3152,0.334,0.3556,0.3109,0.3152,0.3214,0.3556,0.3032,0.3176,0.3317,0.3174,0.3322,0.3073,0.3409,0.3076,0.3509,0.3512,0.2989,0.2987,0.3145,0.3076,0.3321,0.2991,0.3322,0.2986,0.3409,0.3564,0.3136,0.3565,0.3277,0.3553,0.6348,0.3509,0.6143,0.3509,0.3258,0.3512,0.6662,0.3071,0.6575,0.3069,0.6663,0.2985,0.6956,0.3169,0.7047,0.3068,0.6938,0.3509,0.6815,0.3141,0.6882,0.3147,0.6787,0.3552,0.686,0.356,0.6748,0.3147,0.666,0.3552,0.6486,0.3509,0.6668,0.3171,0.7047,0.3065,0.6661,0.2981,0.6797,0.3071,0.6997,0.2984,0.6997,0.298,0.6978,0.3068,0.6587,0.3561,0.6723,0.3549,0.6824,0.3509,0.7189,0.3029,0.7106,0.3018,0.7186,0.2977,0.7347,0.3094,0.7415,0.3098,0.736,0.3282,0.728,0.3098,0.7228,0.3282,0.7043,0.3239,0.7145,0.3089,0.7515,0.3238,0.7581,0.3017,0.7586,0.3017,0.7186,0.2974,0.7104,0.3015,0.7523,0.2976,0.7522,0.2973,0.751,0.3031,0.7529,0.3089,0.7491,0.3113,0.7438,0.329,0.7202,0.3114,0.7152,0.3291,0.7293,0.3279,0.768,0.3028,0.7594,0.3017,0.7677,0.2976,0.7836,0.3093,0.7905,0.3097,0.7838,0.3281,0.7981,0.3112,0.7915,0.329,0.7769,0.3097,0.7705,0.3281,0.7633,0.3089,0.7989,0.3238,0.807,0.3016,0.8074,0.3017,0.7678,0.2973,0.8014,0.2976,0.8014,0.2972,0.8,0.303,0.8017,0.3088,0.7691,0.3113,0.763,0.3291,0.7771,0.3279,0.817,0.3027,0.8083,0.3017,0.8169,0.2975,0.8326,0.3092,0.8394,0.3096,0.8316,0.328,0.8471,0.3112,0.8394,0.3289,0.8259,0.3097,0.8183,0.3281,0.812,0.3088,0.8462,0.3237,0.8559,0.3015,0.856,0.3013,0.8169,0.2972,0.8506,0.2975,0.8506,0.2972,0.8491,0.303,0.8505,0.3088,0.8181,0.3113,0.8109,0.329,0.8248,0.3278,0.7585,0.3313,0.7503,0.3302,0.7582,0.3264,0.7736,0.3375,0.7802,0.3379,0.774,0.355,0.7876,0.3394,0.7814,0.3559,0.7672,0.3379,0.7612,0.355,0.7429,0.3507,0.754,0.337,0.7887,0.3507,0.7961,0.3301,0.7966,0.3301,0.7583,0.3261,0.7495,0.3302,0.7907,0.3263,0.7907,0.326,0.7894,0.3316,0.7911,0.337,0.7596,0.3395,0.754,0.356,0.7675,0.3548,0.7113,0.3314,0.7032,0.3303,0.7109,0.3265,0.7265,0.3376,0.7331,0.338,0.7279,0.3551,0.7404,0.3395,0.7353,0.3559,0.72,0.338,0.7151,0.3551,0.6975,0.3508,0.707,0.3371,0.749,0.3302,0.711,0.3261,0.7031,0.33,0.7434,0.3264,0.7433,0.3261,0.7421,0.3316,0.7441,0.337,0.7125,0.3396,0.7079,0.356,0.7215,0.3548,0.8057,0.3312,0.7974,0.3302,0.8056,0.3263,0.8208,0.3375,0.8274,0.3379,0.8201,0.355,0.8348,0.3394,0.8276,0.3558,0.8143,0.3379,0.8073,0.355,0.801,0.337,0.8342,0.3506,0.8433,0.3301,0.8433,0.3298,0.8056,0.326,0.8381,0.3263,0.838,0.326,0.8366,0.3315,0.8381,0.3369,0.8068,0.3394,0.8001,0.3559,0.8136,0.3547,0.7328,0.3601,0.7278,0.359,0.7315,0.3523,0.7795,0.3664,0.7941,0.3669,0.78,0.4023,0.7648,0.367,0.7522,0.4023,0.7155,0.3983,0.7248,0.4032,0.739,0.403,0.8132,0.398,0.8302,0.3587,0.8302,0.3592,0.7314,0.352,0.7265,0.3601,0.715,0.398,0.7752,0.3601,0.8314,0.3522,0.8314,0.3519,0.7355,0.3694,0.7506,0.3687,0.7937,0.403,0.8222,0.3691,0.8073,0.4032,0.8081,0.3686,0.8273,0.3597,0.1776,0.3606,0.1749,0.3596,0.1735,0.3529,0.2258,0.3669,0.2402,0.3674,0.2535,0.4025,0.2114,0.3674,0.226,0.4025,0.1925,0.3985,0.1982,0.4034,0.2125,0.4032,0.2893,0.3982,0.2758,0.3592,0.2772,0.3604,0.1735,0.3525,0.1748,0.3598,0.1927,0.3983,0.2197,0.3606,0.272,0.3528,0.2722,0.3524,0.1827,0.3698,0.1976,0.3691,0.2665,0.4032,0.2683,0.3695,0.2798,0.4034,0.2543,0.3691,0.2707,0.3603,0.766,0.4021,0.2398,0.4023,0.2837,0.3605,0.2775,0.3601,0.2818,0.3528,0.3125,0.3694,0.3211,0.36,0.3315,0.3982,0.2993,0.3668,0.3055,0.3673,0.3156,0.4025,0.2931,0.3674,0.3037,0.4025,0.2898,0.3985,0.2859,0.3696,0.3219,0.3602,0.2818,0.3524,0.2964,0.3605,0.3127,0.3528,0.3127,0.3524,0.3129,0.3602,0.322,0.4034,0.2965,0.4034,0.3097,0.4022,0.3071,0.3982,0.3287,0.3605,0.3223,0.36,0.327,0.3527,0.3574,0.3694,0.366,0.36,0.3736,0.3985,0.3441,0.3668,0.3504,0.3673,0.3582,0.4025,0.3646,0.4033,0.3379,0.3673,0.3464,0.4025,0.3321,0.3982,0.3307,0.3695,0.3667,0.3602,0.327,0.3524,0.3414,0.3604,0.3579,0.3527,0.358,0.3523,0.3579,0.3602,0.3392,0.4034,0.3523,0.4022,0.3564,0.3982,0.3743,0.3982,0.3738,0.3604,0.3671,0.36,0.3723,0.3527,0.4023,0.3693,0.4108,0.3599,0.4161,0.3984,0.389,0.3667,0.3953,0.3673,0.4009,0.4025,0.4073,0.4033,0.3828,0.3673,0.3891,0.4025,0.3756,0.3695,0.4115,0.3602,0.3723,0.3523,0.3864,0.3604,0.4033,0.3527,0.4033,0.3523,0.403,0.3602,0.3819,0.4034,0.395,0.4022,0.3989,0.3982,0.4167,0.3982,0.4188,0.3604,0.412,0.3599,0.4176,0.3527,0.4471,0.3693,0.4557,0.3599,0.4586,0.3984,0.434,0.3667,0.4402,0.3672,0.4436,0.4025,0.4277,0.3672,0.4318,0.4025,0.4205,0.3694,0.4563,0.3601,0.4176,0.3523,0.4315,0.3604,0.4486,0.3527,0.4486,0.3523,0.4481,0.3601,0.4502,0.4033,0.4246,0.4034,0.4377,0.4022,0.4414,0.3981,0.4591,0.3981,0.4639,0.3603,0.4569,0.3599,0.463,0.3526,0.4921,0.3693,0.5007,0.3598,0.5017,0.3981,0.4789,0.3666,0.4852,0.3672,0.4864,0.4024,0.4929,0.4033,0.4727,0.3672,0.4745,0.4024,0.4596,0.3984,0.4654,0.3694,0.5012,0.3601,0.4629,0.3522,0.4766,0.3603,0.494,0.3526,0.494,0.3522,0.4933,0.3601,0.4674,0.4034,0.4804,0.4022,0.4839,0.3981,0.5091,0.3603,0.5018,0.3599,0.5084,0.3526,0.5371,0.3692,0.5457,0.3598,0.5442,0.3981,0.5239,0.3666,0.5302,0.3672,0.5292,0.4024,0.5357,0.4033,0.5177,0.3672,0.5173,0.4024,0.5104,0.3694,0.5462,0.36,0.5083,0.3522,0.5218,0.3603,0.5394,0.3526,0.5394,0.3522,0.5385,0.36,0.5103,0.4033,0.5232,0.4021,0.5177,0.3981,0.5544,0.3603,0.5468,0.3598,0.5539,0.3525,0.5822,0.3692,0.5907,0.3598,0.5866,0.3981,0.569,0.3666,0.5753,0.3671,0.572,0.4024,0.5786,0.4032,0.5628,0.3671,0.5601,0.4024,0.5554,0.3693,0.5912,0.36,0.5538,0.3521,0.567,0.3602,0.5849,0.3525,0.5849,0.3521,0.5838,0.36,0.5531,0.4033,0.5661,0.4021,0.5664,0.3981,0.5996,0.3602,0.5919,0.3598,0.5994,0.3525,0.6273,0.3692,0.6358,0.3597,0.6295,0.3981,0.6141,0.3665,0.6204,0.3671,0.6149,0.4024,0.6216,0.4032,0.6079,0.3671,0.603,0.4024,0.5871,0.3981,0.6005,0.3693,0.6362,0.3599,0.5993,0.3521,0.6123,0.3602,0.6305,0.3525,0.6304,0.3521,0.6291,0.36,0.5961,0.4033,0.6089,0.4021,0.6117,0.3981,0.645,0.3602,0.6369,0.3597,0.6449,0.3524,0.6724,0.3691,0.681,0.3597,0.6718,0.3983,0.6593,0.3665,0.6655,0.367,0.6578,0.4024,0.6646,0.4032,0.653,0.3671,0.6459,0.4024,0.6456,0.3693,0.6813,0.3599,0.6448,0.3521,0.6576,0.3602,0.676,0.3524,0.676,0.352,0.6744,0.3599,0.6391,0.4033,0.6518,0.4021,0.6544,0.398,0.6722,0.398,0.6903,0.3601,0.6821,0.3597,0.6905,0.3524,0.7176,0.3691,0.7261,0.3596,0.7045,0.3665,0.7108,0.367,0.7008,0.4024,0.7076,0.4032,0.6982,0.367,0.6889,0.4024,0.6728,0.3983,0.6908,0.3692,0.6904,0.352,0.7029,0.3601,0.7217,0.3524,0.7216,0.352,0.7198,0.3599,0.6821,0.4033,0.6948,0.4021,0.6901,0.398,0.2012,0.4066,0.1961,0.4062,0.1982,0.3996,0.2628,0.4148,0.272,0.4061,0.2838,0.4397,0.234,0.4123,0.2448,0.4128,0.2571,0.4437,0.2233,0.4128,0.2365,0.4437,0.2116,0.4397,0.2048,0.415,0.2184,0.4446,0.2263,0.4444,0.2842,0.4394,0.2725,0.406,0.1981,0.3992,0.1961,0.4056,0.2117,0.4394,0.2293,0.4065,0.2646,0.3996,0.2648,0.3992,0.2641,0.4063,0.213,0.4144,0.2667,0.4444,0.2738,0.4446,0.2553,0.4143,0.2468,0.4434,0.2785,0.4065,0.2727,0.4059,0.2767,0.3995,0.3055,0.4147,0.3136,0.4059,0.3234,0.4397,0.2931,0.4123,0.2989,0.4128,0.3087,0.4437,0.3146,0.4445,0.2873,0.4128,0.2976,0.4437,0.2806,0.4148,0.3143,0.406,0.2767,0.3992,0.2904,0.4065,0.3056,0.3996,0.3056,0.3992,0.3058,0.4063,0.2908,0.4446,0.3032,0.4434,0.3138,0.4394,0.3241,0.4395,0.3206,0.4065,0.3146,0.4059,0.319,0.3995,0.3351,0.4123,0.3409,0.4128,0.3487,0.4437,0.3475,0.4147,0.3547,0.4446,0.3293,0.4128,0.3376,0.4437,0.3225,0.4148,0.3479,0.4063,0.3554,0.406,0.3637,0.4395,0.3562,0.406,0.319,0.3992,0.3324,0.4065,0.3479,0.3995,0.3479,0.3992,0.3308,0.4446,0.3432,0.4434,0.3536,0.4395,0.3627,0.4065,0.3565,0.4059,0.3613,0.3995,0.3894,0.4146,0.3975,0.4059,0.4036,0.4395,0.377,0.4122,0.3829,0.4128,0.3887,0.4437,0.3712,0.4128,0.3776,0.4437,0.3645,0.4148,0.3981,0.406,0.3613,0.3992,0.3746,0.4065,0.3902,0.3995,0.3903,0.3991,0.3901,0.4063,0.3949,0.4446,0.3709,0.4446,0.3832,0.4434,0.3952,0.4395,0.4049,0.4065,0.3985,0.4059,0.4037,0.3995,0.4314,0.4146,0.4395,0.4058,0.443,0.4397,0.4191,0.4122,0.4249,0.4128,0.4288,0.4437,0.4133,0.4128,0.4177,0.4437,0.4065,0.4148,0.44,0.406,0.4036,0.3991,0.4167,0.4065,0.4326,0.3995,0.4327,0.3991,0.4323,0.4063,0.435,0.4446,0.411,0.4446,0.4233,0.4435,0.4333,0.4395,0.4436,0.4395,0.4471,0.4065,0.4405,0.4059,0.4461,0.3995,0.4735,0.4147,0.4815,0.4058,0.483,0.4397,0.4611,0.4122,0.467,0.4127,0.4689,0.4437,0.4751,0.4446,0.4553,0.4127,0.4578,0.4437,0.4485,0.4148,0.4821,0.406,0.446,0.3991,0.4589,0.4065,0.4751,0.3995,0.4751,0.3991,0.4745,0.4063,0.4512,0.4446,0.4634,0.4435,0.4732,0.4395,0.4835,0.4395,0.4893,0.4065,0.4825,0.4058,0.4885,0.3995,0.5156,0.4147,0.5236,0.4058,0.5229,0.4397,0.5033,0.4122,0.5091,0.4127,0.5091,0.4437,0.5153,0.4446,0.4974,0.4127,0.498,0.4437,0.4906,0.4148,0.5241,0.406,0.4885,0.3991,0.5012,0.4064,0.5176,0.3995,0.5176,0.3991,0.5168,0.4062,0.4914,0.4446,0.5035,0.4435,0.5083,0.4395,0.5235,0.4395,0.5316,0.4065,0.5246,0.4058,0.531,0.3994,0.5577,0.4146,0.5657,0.4058,0.563,0.4397,0.5454,0.4122,0.5513,0.4127,0.5493,0.4437,0.5396,0.4127,0.5382,0.4437,0.5327,0.4147,0.5662,0.4059,0.531,0.3991,0.5434,0.4064,0.5601,0.3994,0.5601,0.3991,0.5591,0.4062,0.5556,0.4446,0.5316,0.4446,0.5437,0.4435,0.5532,0.4395,0.5634,0.4395,0.5739,0.4064,0.5667,0.4058,0.5736,0.3994,0.5999,0.4146,0.6079,0.4058,0.603,0.4397,0.5876,0.4122,0.5934,0.4127,0.5895,0.4437,0.5958,0.4446,0.5817,0.4127,0.5784,0.4437,0.5748,0.4147,0.6083,0.406,0.5735,0.3991,0.5857,0.4064,0.6026,0.3994,0.6026,0.399,0.6015,0.4062,0.5718,0.4446,0.5839,0.4435,0.5883,0.4395,0.6035,0.4395,0.6163,0.4064,0.609,0.4058,0.6162,0.3994,0.6421,0.4146,0.6501,0.4058,0.6435,0.4395,0.6299,0.4122,0.6357,0.4127,0.6298,0.4437,0.624,0.4127,0.6186,0.4437,0.617,0.4148,0.6505,0.4059,0.6161,0.399,0.6281,0.4064,0.6453,0.3994,0.6452,0.399,0.6439,0.4062,0.6362,0.4446,0.6122,0.4446,0.6242,0.4435,0.6284,0.4395,0.6587,0.4064,0.6512,0.4058,0.6588,0.3994,0.6844,0.4146,0.6924,0.4058,0.6832,0.4397,0.6721,0.4122,0.678,0.4127,0.6702,0.4438,0.6765,0.4446,0.6663,0.4127,0.659,0.4437,0.6593,0.4147,0.6927,0.4059,0.6587,0.399,0.6706,0.4064,0.6879,0.3994,0.6879,0.399,0.6864,0.4062,0.6525,0.4446,0.6645,0.4435,0.6734,0.4395,0.6837,0.4395,0.7012,0.4064,0.6935,0.4058,0.7015,0.3994,0.7268,0.4146,0.7347,0.4057,0.7236,0.4395,0.7145,0.4122,0.7203,0.4127,0.7105,0.4438,0.7169,0.4446,0.7086,0.4127,0.6993,0.4438,0.7016,0.4147,0.7348,0.4056,0.7014,0.399,0.713,0.4064,0.7306,0.3994,0.7306,0.399,0.7289,0.4062,0.6929,0.4446,0.7049,0.4435,0.7119,0.4395,0.7427,0.4064,0.7351,0.406,0.7424,0.3993,0.8011,0.4147,0.8097,0.4059,0.7946,0.4397,0.7731,0.4121,0.7836,0.4127,0.7709,0.4438,0.7624,0.4127,0.7507,0.4438,0.7238,0.4397,0.744,0.4149,0.7336,0.4446,0.7411,0.4445,0.7945,0.4395,0.8097,0.4054,0.7421,0.399,0.7701,0.4063,0.8076,0.3993,0.8076,0.399,0.8047,0.4061,0.7521,0.4142,0.7808,0.4445,0.7879,0.4446,0.7937,0.4142,0.7607,0.4435,0.2209,0.447,0.215,0.4461,0.2163,0.4406,0.2704,0.451,0.2764,0.4461,0.2877,0.4762,0.2458,0.4523,0.2546,0.4528,0.2657,0.4802,0.237,0.4528,0.2489,0.4802,0.2285,0.476,0.2214,0.451,0.288,0.476,0.2775,0.4466,0.2163,0.4403,0.2149,0.4459,0.2419,0.447,0.2705,0.4406,0.2706,0.4403,0.2684,0.4468,0.2663,0.4546,0.2766,0.4811,0.225,0.4548,0.2368,0.4811,0.2573,0.4799,0.2607,0.476,0.2833,0.447,0.2779,0.4463,0.2817,0.4406,0.3087,0.4546,0.3163,0.4463,0.3258,0.476,0.297,0.4523,0.3025,0.4528,0.3116,0.4802,0.3171,0.481,0.2916,0.4528,0.3011,0.4802,0.2888,0.4762,0.2853,0.4547,0.317,0.4464,0.2817,0.4403,0.2945,0.447,0.3088,0.4407,0.3088,0.4403,0.309,0.4468,0.2947,0.4811,0.3064,0.4799,0.3041,0.476,0.3229,0.447,0.3173,0.4463,0.3214,0.4406,0.3482,0.4546,0.3557,0.4463,0.3634,0.476,0.3365,0.4523,0.342,0.4528,0.3493,0.4802,0.3549,0.481,0.3311,0.4528,0.3388,0.4802,0.3263,0.4763,0.3247,0.4547,0.3564,0.4464,0.3214,0.4403,0.3341,0.447,0.3486,0.4407,0.3486,0.4403,0.3486,0.4468,0.3324,0.4811,0.3441,0.4799,0.3416,0.476,0.3625,0.4471,0.3567,0.4463,0.3612,0.4406,0.3876,0.4546,0.3952,0.4463,0.4011,0.476,0.376,0.4523,0.3815,0.4528,0.3871,0.4802,0.3705,0.4528,0.3766,0.4802,0.3639,0.4763,0.3642,0.4547,0.3958,0.4464,0.3612,0.4403,0.3736,0.447,0.3884,0.4407,0.3884,0.4403,0.3882,0.4469,0.3928,0.4811,0.3702,0.4811,0.3818,0.48,0.3792,0.476,0.4021,0.4471,0.3962,0.4463,0.401,0.4407,0.4271,0.4546,0.4347,0.4463,0.4387,0.4761,0.4155,0.4523,0.421,0.4528,0.4249,0.4803,0.4306,0.4811,0.41,0.4528,0.4144,0.4802,0.4036,0.4547,0.4352,0.4464,0.401,0.4403,0.4133,0.447,0.4282,0.4407,0.4282,0.4403,0.4279,0.4469,0.4081,0.4811,0.4196,0.48,0.4153,0.476,0.4418,0.4471,0.4357,0.4463,0.4409,0.4407,0.4667,0.4546,0.4742,0.4463,0.4763,0.4761,0.455,0.4523,0.4605,0.4528,0.4627,0.4803,0.4496,0.4528,0.4522,0.4803,0.4432,0.4547,0.4747,0.4464,0.4408,0.4403,0.4529,0.447,0.4681,0.4407,0.4681,0.4403,0.4676,0.4469,0.4685,0.4811,0.4459,0.4812,0.4574,0.48,0.4544,0.4761,0.4815,0.4471,0.4752,0.4463,0.4808,0.4407,0.5063,0.4546,0.5138,0.4463,0.5139,0.4761,0.4946,0.4523,0.5001,0.4528,0.5005,0.4803,0.5063,0.4811,0.4892,0.4528,0.49,0.4803,0.4768,0.4763,0.4827,0.4547,0.5143,0.4464,0.4807,0.4403,0.4926,0.447,0.508,0.4407,0.508,0.4403,0.5073,0.4469,0.4838,0.4812,0.4953,0.48,0.4906,0.4761,0.5213,0.4471,0.5147,0.4463,0.5207,0.4407,0.5458,0.4546,0.5534,0.4463,0.5517,0.4761,0.5343,0.4523,0.5398,0.4528,0.5384,0.4803,0.5288,0.4528,0.5279,0.4803,0.5144,0.4764,0.5223,0.4547,0.5538,0.4464,0.5206,0.4403,0.5324,0.447,0.5479,0.4407,0.5479,0.4403,0.5471,0.4469,0.5444,0.4812,0.5217,0.4812,0.5332,0.48,0.5298,0.4761,0.561,0.4471,0.5543,0.4463,0.5606,0.4407,0.5855,0.4546,0.593,0.4463,0.5895,0.4761,0.5739,0.4524,0.5794,0.4528,0.5764,0.4803,0.5822,0.4811,0.5684,0.4528,0.5658,0.4803,0.562,0.4547,0.5934,0.4464,0.5605,0.4403,0.5722,0.447,0.5879,0.4407,0.5879,0.4403,0.5869,0.4469,0.5596,0.4812,0.5711,0.4801,0.566,0.4761,0.6009,0.4471,0.594,0.4463,0.6006,0.4407,0.6252,0.4546,0.6327,0.4463,0.6273,0.4761,0.6136,0.4524,0.6191,0.4528,0.6143,0.4804,0.6202,0.4812,0.6081,0.4528,0.6038,0.4804,0.6016,0.4548,0.6331,0.4464,0.6005,0.4403,0.612,0.447,0.628,0.4407,0.6279,0.4403,0.6268,0.4469,0.5977,0.4812,0.609,0.4801,0.6053,0.4761,0.6407,0.4471,0.6337,0.4463,0.6407,0.4407,0.665,0.4547,0.6724,0.4463,0.6647,0.4764,0.6534,0.4524,0.6589,0.4529,0.6523,0.4804,0.6583,0.4812,0.6479,0.4529,0.6418,0.4804,0.6413,0.4548,0.6728,0.4464,0.6406,0.4403,0.6518,0.447,0.668,0.4407,0.668,0.4403,0.6667,0.4469,0.6357,0.4812,0.647,0.4801,0.6431,0.4762,0.6651,0.4762,0.6806,0.4471,0.6734,0.4463,0.6808,0.4407,0.7047,0.4547,0.7122,0.4463,0.703,0.4762,0.6931,0.4524,0.6986,0.4529,0.6904,0.4804,0.6964,0.4812,0.6876,0.4529,0.6798,0.4804,0.6656,0.4764,0.681,0.4548,0.7125,0.4464,0.6806,0.4403,0.6917,0.4471,0.7081,0.4407,0.7081,0.4403,0.7066,0.4469,0.6738,0.4813,0.685,0.4801,0.6809,0.4762,0.7205,0.4471,0.7131,0.4463,0.7209,0.4407,0.7445,0.4547,0.752,0.4463,0.7406,0.4762,0.733,0.4524,0.7384,0.4529,0.7284,0.4804,0.7345,0.4812,0.7274,0.4529,0.7178,0.4804,0.7208,0.4548,0.7522,0.4464,0.7207,0.4403,0.7316,0.4471,0.7483,0.4407,0.7482,0.4403,0.7465,0.4469,0.7119,0.4813,0.7231,0.4802,0.7605,0.4471,0.7529,0.4463,0.761,0.4407,0.7843,0.4547,0.7918,0.4463,0.7786,0.4762,0.7728,0.4524,0.7783,0.4529,0.7665,0.4804,0.7726,0.4813,0.7673,0.4529,0.7559,0.4804,0.741,0.4762,0.7606,0.4548,0.7918,0.446,0.7609,0.4403,0.7716,0.4471,0.7884,0.4407,0.7884,0.4403,0.7865,0.4469,0.75,0.4813,0.7612,0.4802,0.2362,0.4829,0.2313,0.482,0.2345,0.477,0.2603,0.4899,0.2675,0.4821,0.2786,0.5086,0.2493,0.4878,0.2545,0.4882,0.265,0.5127,0.2442,0.4882,0.2551,0.5127,0.2435,0.5085,0.2383,0.49,0.2682,0.4821,0.2345,0.4767,0.2313,0.4817,0.2468,0.4829,0.26,0.4771,0.2601,0.4767,0.2604,0.4827,0.2703,0.5135,0.249,0.5135,0.2601,0.5124,0.2735,0.4829,0.2684,0.4821,0.2719,0.4771,0.2975,0.4899,0.3046,0.4821,0.3141,0.5086,0.2865,0.4878,0.2917,0.4882,0.3006,0.5127,0.2814,0.4882,0.2907,0.5127,0.279,0.5086,0.2754,0.49,0.3053,0.4822,0.2719,0.4767,0.284,0.4829,0.2975,0.4771,0.2975,0.4767,0.2977,0.4828,0.306,0.5135,0.2847,0.5136,0.2957,0.5124,0.3108,0.483,0.3056,0.4821,0.3094,0.4771,0.3347,0.4899,0.3418,0.4821,0.3498,0.5086,0.3237,0.4878,0.3289,0.4883,0.3363,0.5127,0.3185,0.4883,0.3264,0.5127,0.3144,0.5086,0.3126,0.49,0.3424,0.4822,0.3093,0.4768,0.3213,0.4829,0.335,0.4771,0.335,0.4768,0.335,0.4828,0.3417,0.5136,0.3204,0.5136,0.3314,0.5125,0.3481,0.483,0.3427,0.4821,0.3468,0.4771,0.3719,0.4899,0.379,0.4821,0.3851,0.5087,0.3609,0.4878,0.3661,0.4883,0.372,0.5128,0.3558,0.4883,0.3621,0.5128,0.3498,0.4901,0.3796,0.4822,0.3468,0.4768,0.3586,0.4829,0.3725,0.4771,0.3725,0.4768,0.3724,0.4828,0.3774,0.5136,0.3561,0.5136,0.3671,0.5125,0.3855,0.483,0.3799,0.4821,0.3844,0.4771,0.4091,0.49,0.4163,0.4821,0.4209,0.5087,0.3982,0.4879,0.4033,0.4883,0.4077,0.5128,0.393,0.4883,0.3978,0.5128,0.3855,0.5087,0.387,0.4901,0.4168,0.4822,0.3843,0.4768,0.396,0.483,0.41,0.4772,0.41,0.4768,0.4098,0.4828,0.4132,0.5136,0.3918,0.5137,0.4028,0.5125,0.4229,0.483,0.4172,0.4822,0.4219,0.4771,0.4464,0.49,0.4535,0.4822,0.4563,0.5087,0.4354,0.4879,0.4406,0.4883,0.4434,0.5128,0.4489,0.5136,0.4303,0.4883,0.4335,0.5128,0.4242,0.4901,0.454,0.4822,0.4219,0.4768,0.4334,0.483,0.4476,0.4772,0.4476,0.4768,0.4472,0.4829,0.4276,0.5137,0.4385,0.5126,0.4603,0.4831,0.4544,0.4822,0.4595,0.4772,0.4837,0.49,0.4908,0.4822,0.4919,0.5088,0.4727,0.4879,0.4779,0.4884,0.4792,0.5129,0.4676,0.4884,0.4693,0.5129,0.4566,0.5087,0.4615,0.4901,0.4913,0.4823,0.4594,0.4768,0.4708,0.483,0.4852,0.4772,0.4852,0.4768,0.4846,0.4829,0.4848,0.5137,0.4634,0.5137,0.4743,0.5126,0.4978,0.4831,0.4917,0.4822,0.4971,0.4772,0.521,0.49,0.5282,0.4822,0.5277,0.5088,0.5101,0.4879,0.5153,0.4884,0.5151,0.5129,0.5049,0.4884,0.5051,0.5129,0.4923,0.5088,0.4988,0.4902,0.5286,0.4823,0.4971,0.4768,0.5083,0.483,0.5228,0.4772,0.5228,0.4769,0.5221,0.4829,0.5206,0.5137,0.4992,0.5138,0.5101,0.5126,0.5353,0.4831,0.5291,0.4822,0.5348,0.4772,0.5585,0.4901,0.5655,0.4822,0.5633,0.5088,0.5475,0.488,0.5527,0.4884,0.5509,0.5129,0.5564,0.5137,0.5423,0.4884,0.5409,0.5129,0.5362,0.4902,0.566,0.4823,0.5347,0.4769,0.5458,0.483,0.5605,0.4772,0.5605,0.4769,0.5597,0.4829,0.5351,0.5138,0.5459,0.5127,0.5728,0.4831,0.5665,0.4822,0.5725,0.4772,0.5959,0.4901,0.603,0.4822,0.599,0.5088,0.585,0.488,0.5901,0.4884,0.5868,0.513,0.5798,0.4884,0.5768,0.513,0.5636,0.5088,0.5737,0.4902,0.6033,0.4823,0.5724,0.4769,0.5833,0.4831,0.5983,0.4773,0.5982,0.4769,0.5972,0.4829,0.5925,0.5138,0.571,0.5138,0.5818,0.5127,0.6104,0.4831,0.6039,0.4823,0.6102,0.4772,0.6333,0.4902,0.6404,0.4823,0.6347,0.5089,0.6224,0.488,0.6276,0.4885,0.6227,0.513,0.6283,0.5138,0.6172,0.4885,0.6127,0.513,0.5994,0.5088,0.6111,0.4902,0.6408,0.4824,0.6101,0.4769,0.6209,0.4831,0.636,0.4773,0.636,0.4769,0.6348,0.483,0.607,0.5139,0.6177,0.5127,0.648,0.4832,0.6413,0.4823,0.648,0.4773,0.6708,0.4902,0.6779,0.4823,0.6705,0.5089,0.6599,0.488,0.6651,0.4885,0.6587,0.513,0.6643,0.5138,0.6547,0.4885,0.6487,0.513,0.6351,0.5089,0.6485,0.4903,0.6782,0.4824,0.6479,0.4769,0.6585,0.4831,0.6738,0.4773,0.6738,0.4769,0.6725,0.483,0.6429,0.5139,0.6536,0.5128,0.6856,0.4832,0.6788,0.4823,0.6858,0.4773,0.7083,0.4902,0.7154,0.4823,0.7065,0.5089,0.6975,0.4881,0.7026,0.4885,0.6946,0.5131,0.7003,0.5139,0.6922,0.4885,0.6846,0.5131,0.6709,0.5089,0.686,0.4903,0.7156,0.4823,0.6857,0.4769,0.6961,0.4831,0.7116,0.4773,0.7116,0.477,0.7101,0.483,0.6789,0.5139,0.6896,0.5128,0.7221,0.4832,0.7159,0.4825,0.7218,0.4773,0.7687,0.4903,0.7756,0.4825,0.7639,0.509,0.7463,0.4881,0.7548,0.4885,0.7446,0.5131,0.7378,0.4885,0.7284,0.5131,0.7067,0.5092,0.7231,0.4904,0.7147,0.514,0.7207,0.5138,0.7756,0.482,0.7216,0.477,0.744,0.4832,0.7739,0.4773,0.7739,0.477,0.7716,0.483,0.7296,0.4899,0.7526,0.5138,0.7583,0.514,0.7628,0.4899,0.7364,0.5129,0.2543,0.5342,0.2733,0.518,0.2801,0.5342,0.2459,0.517,0.2468,0.518,0.2541,0.5346,0.2811,0.5346,0.2739,0.517,0.2471,0.5122,0.2555,0.5299,0.2831,0.5289,0.2768,0.5132,0.2743,0.512,0.2818,0.53,0.2838,0.5342,0.3037,0.518,0.3101,0.5343,0.2762,0.517,0.2771,0.518,0.2834,0.5346,0.3124,0.529,0.31,0.5348,0.3043,0.5171,0.3069,0.5132,0.3046,0.512,0.2781,0.512,0.2854,0.5301,0.3111,0.5301,0.3132,0.5343,0.334,0.5181,0.3391,0.5343,0.3066,0.517,0.3074,0.518,0.3128,0.5346,0.34,0.5347,0.3346,0.5171,0.3083,0.512,0.3147,0.5301,0.3403,0.5301,0.3348,0.512,0.3417,0.529,0.3371,0.5132,0.3427,0.5343,0.3644,0.5181,0.3686,0.5343,0.337,0.517,0.3378,0.5181,0.3422,0.5347,0.3694,0.5348,0.3651,0.5171,0.365,0.5121,0.3385,0.512,0.3711,0.529,0.3673,0.5132,0.344,0.5301,0.3696,0.5302,0.3723,0.5343,0.3948,0.5181,0.3986,0.5344,0.3674,0.5171,0.3682,0.5181,0.3717,0.5347,0.4005,0.5291,0.3983,0.5349,0.3955,0.5172,0.3733,0.5302,0.3989,0.5302,0.3688,0.5121,0.3976,0.5133,0.3953,0.5121,0.4018,0.5344,0.4253,0.5182,0.4282,0.5344,0.3979,0.5171,0.3987,0.5181,0.4013,0.5347,0.4299,0.5291,0.4279,0.5349,0.426,0.5172,0.4257,0.5121,0.3991,0.5121,0.4026,0.5302,0.4283,0.5302,0.4278,0.5133,0.4314,0.5344,0.4558,0.5182,0.4578,0.5345,0.4284,0.5171,0.4291,0.5182,0.4308,0.5348,0.4594,0.5291,0.4574,0.535,0.4565,0.5172,0.4581,0.5133,0.4294,0.5121,0.456,0.5121,0.432,0.5302,0.4577,0.5303,0.461,0.5344,0.4863,0.5182,0.4874,0.5345,0.4589,0.5172,0.4596,0.5182,0.4603,0.5348,0.4888,0.5292,0.487,0.535,0.487,0.5173,0.4884,0.5134,0.4864,0.5122,0.4598,0.5121,0.4614,0.5303,0.4871,0.5303,0.4906,0.5345,0.5168,0.5183,0.517,0.5345,0.4894,0.5172,0.4901,0.5182,0.4899,0.5348,0.5183,0.5292,0.5165,0.535,0.5176,0.5173,0.4902,0.5122,0.5187,0.5134,0.5168,0.5122,0.4908,0.5303,0.5165,0.5303,0.5203,0.5345,0.5473,0.5183,0.5467,0.5346,0.5199,0.5172,0.5206,0.5183,0.5195,0.5349,0.5478,0.5293,0.5461,0.5351,0.5481,0.5173,0.5205,0.5122,0.5202,0.5303,0.546,0.5304,0.5491,0.5134,0.5472,0.5122,0.5499,0.5346,0.5779,0.5183,0.5763,0.5346,0.5505,0.5173,0.5511,0.5183,0.5491,0.5349,0.5773,0.5293,0.5757,0.5351,0.5787,0.5174,0.5509,0.5122,0.5496,0.5304,0.5754,0.5304,0.5794,0.5134,0.5776,0.5123,0.5796,0.5346,0.6084,0.5183,0.606,0.5347,0.5811,0.5173,0.5816,0.5183,0.5787,0.5349,0.6068,0.5293,0.6054,0.5351,0.6093,0.5174,0.5814,0.5123,0.6098,0.5135,0.5791,0.5304,0.6049,0.5304,0.608,0.5123,0.6092,0.5346,0.639,0.5184,0.6357,0.5347,0.6116,0.5173,0.6122,0.5184,0.6083,0.535,0.6363,0.5294,0.635,0.5352,0.6399,0.5174,0.6085,0.5304,0.6343,0.5305,0.6118,0.5123,0.6385,0.5123,0.6402,0.5135,0.6389,0.5347,0.6696,0.5184,0.6654,0.5347,0.6423,0.5173,0.6428,0.5184,0.638,0.535,0.6659,0.5294,0.6646,0.5352,0.6705,0.5174,0.6689,0.5123,0.6422,0.5123,0.638,0.5305,0.6638,0.5305,0.6706,0.5135,0.6686,0.5347,0.7002,0.5184,0.6951,0.5348,0.6729,0.5174,0.6734,0.5184,0.6677,0.5351,0.6955,0.5294,0.6943,0.5353,0.7012,0.5175,0.701,0.5136,0.6994,0.5124,0.6727,0.5123,0.6675,0.5305,0.6934,0.5305,0.6984,0.5347,0.7309,0.5185,0.7249,0.5348,0.7036,0.5174,0.704,0.5184,0.6974,0.5351,0.7251,0.5294,0.724,0.5353,0.7318,0.5175,0.7032,0.5124,0.7315,0.5136,0.7299,0.5124,0.697,0.5305,0.7229,0.5306,0.7282,0.5348,0.7616,0.5185,0.7547,0.5348,0.7342,0.5174,0.7347,0.5185,0.7271,0.5352,0.7533,0.5305,0.7538,0.5353,0.7626,0.5175,0.7337,0.5124,0.761,0.5125,0.7266,0.5306,0.6789,0.5339,0.6804,0.5348,0.7369,0.5371,0.7384,0.5368,0.7367,0.5375,0.7375,0.537,0.7373,0.5367,0.7379,0.5365,0.7377,0.5362,0.7384,0.5352,0.7368,0.5365,0.736,0.5359,0.7357,0.537,0.708,0.5366,0.709,0.5364,0.708,0.537,0.7084,0.5371,0.7086,0.5356,0.7077,0.5363,0.7076,0.5354,0.7071,0.5368,0.7391,0.5348,0.7378,0.534,0.7351,0.5353,0.7372,0.5355,0.7386,0.5364,0.706,0.537,0.7066,0.5372,0.7074,0.5373,0.709,0.5365,0.7353,0.537,0.7367,0.5373,0.7075,0.5374,0.7097,0.5349,0.7083,0.534,0.7056,0.5354,0.9319,0.8954,0.924,0.8946,0.9243,0.8963,0.9317,0.8934,0.9239,0.8925,0.9318,0.8913,0.924,0.891,0.9241,0.8902,0.7399,0.5574,0.7031,0.5615,0.7028,0.5523,0.7395,0.5673,0.7027,0.5686,0.702,0.573,0.7386,0.573,0.7012,0.5768,0.7376,0.5769,0.7002,0.5801,0.7364,0.5801,0.6991,0.5825,0.9324,0.897,0.9246,0.8972,0.9249,0.8965,0.8389,0.8952,0.8313,0.8944,0.2818,0.5767,0.8391,0.8933,0.8314,0.8924,0.839,0.8912,0.8313,0.8909,0.8311,0.89,0.3041,0.5519,0.2674,0.5608,0.2676,0.5519,0.3038,0.5617,0.268,0.5679,0.3043,0.5679,0.2687,0.5722,0.3049,0.5723,0.2698,0.5761,0.3058,0.5762,0.271,0.5793,0.3069,0.5794,0.2724,0.5817,0.8302,0.8976,0.8385,0.8968,0.8306,0.8971,0.8369,0.8962,0.8302,0.8963,0.5041,0.9748,0.5045,0.9783,0.5039,0.9784,0.5051,0.9798,0.5026,0.9815,0.5051,0.9782,0.5025,0.9804,0.5017,0.9798,0.5021,0.982,0.502,0.9818,0.5038,0.9812,0.5003,0.9816,0.5,0.9816,0.4998,0.9805,0.5009,0.98,0.4983,0.9797,0.4989,0.9783,0.4995,0.9784,0.4982,0.9782,0.4976,0.976,0.4991,0.9758,0.499,0.9754,0.499,0.974,0.4976,0.9745,0.4991,0.9729,0.5001,0.9738,0.5,0.9737,0.4989,0.9721,0.5012,0.9718,0.5013,0.9733,0.5017,0.9726,0.5017,0.9731,0.5007,0.9711,0.5024,0.9715,0.5024,0.9732,0.5014,0.9732,0.5042,0.9729,0.5043,0.974,0.5033,0.9738,0.5023,0.9734,0.5045,0.9722,0.5024,0.971,0.5058,0.9761,0.506,0.9753,0.5044,0.9754,0.8258,0.9895,0.2536,0.5768,0.2528,0.9966,0.826,0.8963,0.2725,0.5768,0.9385,0.8963,0.7539,1,0.7351,0.5826,0.7313,0.6013,0.7311,0.9609,0.2761,0.6004,0.2754,0.958,0.5049,0.9802,0.4975,0.9784,0.5021,0.9819,0.4999,0.9814,0.6991,0.5776,0.9329,0.8965,0.7351,0.5776,0.9339,0.8908,0.9353,0.8877,0.9346,0.8868,0.9375,0.8908,0.9381,0.8917,0.9345,0.8917,0.9382,0.8868,0.9067,0.8853,0.9058,0.8912,0.9055,0.8913,0.907,0.8851,0.9059,0.8908,0.9069,0.8847,0.9055,0.8905,0.9063,0.8847,0.9051,0.8909,0.9063,0.8852,0.4635,0.5268,0.4637,0.5296,0.4641,0.5215,0.4662,0.5603,0.8815,0.8906,0.873,0.8906,0.8815,0.8924,0.5034,0.5346,0.5034,0.5265,0.5033,0.5268,0.4639,0.5186,0.5033,0.5187,0.4645,0.5265,0.4053,0.5267,0.4068,0.5214,0.4063,0.5186,0.8605,0.8924,0.8691,0.8906,0.8607,0.8905,0.869,0.8924,0.8685,0.8847,0.4451,0.5267,0.4457,0.5186,0.8596,0.8847,0.4068,0.5345,0.446,0.5345,0.3501,0.5266,0.3524,0.5214,0.3516,0.5185,0.8487,0.8923,0.8574,0.8905,0.849,0.8905,0.8572,0.8923,0.8562,0.8847,0.3898,0.5267,0.3909,0.5185,0.8473,0.8846,0.8559,0.8865,0.6976,0.5627,0.9248,0.8952,0.6978,0.5692,0.7013,0.5525,0.7006,0.5417,0.271,0.5621,0.8295,0.8951,0.2707,0.5685,0.2696,0.5398,0.2706,0.5411,0.8967,0.8889,0.9039,0.8901,0.9046,0.8894,0.7543,0.5628,0.7638,0.5413,0.3915,0.5214,0.2562,0.5029,0.3057,0.552,0.2433,0.5414,0.7338,0.5762,0.9386,0.8944,0.7512,0.5762,0.2542,0.505,0.2535,0.5621,0.828,0.8864,0.7366,0.5628,0.7321,0.5729,0.9374,0.8953,0.2739,0.5754,0.2532,0.5685,0.3093,0.5686,0.312,0.5755,0.8382,0.8951,0.3069,0.5402,0.2711,0.5401,0.8252,0.8958,0.6952,0.5761,0.7369,0.5693,0.6987,0.5403,0.738,0.5404,0.7002,0.5407,0.3096,0.5621,0.8574,0.8929,0.8566,0.8836,0.8562,0.8867,0.8473,0.8833,0.8579,0.8893,0.849,0.8893,0.3924,0.5364,0.8484,0.8929,0.3904,0.5295,0.2549,0.5026,0.2548,0.503,0.3509,0.5295,0.45,0.5626,0.8688,0.8833,0.8687,0.8857,0.8595,0.8833,0.8695,0.8893,0.8606,0.8893,0.447,0.5365,0.8602,0.8929,0.446,0.5215,0.7603,0.542,0.4454,0.5296,0.4059,0.5296,0.8797,0.8834,0.8803,0.8898,0.8799,0.8894,0.5045,0.5361,0.4651,0.5622,0.5047,0.5622,0.8801,0.8838,0.8817,0.8901,0.8743,0.8834,0.8747,0.8894,0.5033,0.5297,0.5034,0.5215,0.8911,0.8829,0.8907,0.8889,0.8977,0.8873,0.8908,0.8932,0.897,0.8933,0.6151,0.5354,0.9053,0.8926,0.9057,0.8927,0.9053,0.8893,0.6149,0.5203,0.9057,0.8893,0.9078,0.8864,0.9062,0.8926,0.907,0.8921,0.6165,0.5208,0.9067,0.8898,0.9052,0.8837,0.9084,0.8856,0.9073,0.8911,0.9048,0.885,0.9039,0.8915,0.9084,0.8846,0.9058,0.8834,0.9061,0.8866,0.9046,0.8923,0.9052,0.8859,0.9389,0.8877,0.2774,0.5147,0.2776,0.5123,0.2733,0.5018,0.5151,0.1134,0.6317,0.0492,0.6241,0.1129,0.5155,0.0456,0.5155,0.0497,0.5091,0.0494,0.5151,0.1163,0.5091,0.113,0.632,0.045,0.638,0.0488,0.6301,0.1126,0.6236,0.1159,0.5151,0.115,0.6298,0.1112,0.6317,0.0438,0.3702,0.1139,0.4768,0.0499,0.4788,0.1135,0.3606,0.0463,0.3611,0.0504,0.3548,0.0501,0.3708,0.1169,0.3643,0.1136,0.4767,0.0458,0.4833,0.0495,0.4849,0.1131,0.4789,0.1164,0.3712,0.1156,0.4849,0.1118,0.4768,0.0446,0.3829,0.1339,0.3684,0.1381,0.3809,0.1292,0.3999,0.2615,0.4,0.2724,0.3872,0.266,0.6138,0.133,0.6156,0.1285,0.6284,0.1373,0.5997,0.2611,0.612,0.2656,0.5993,0.2722,0.9945,0.0311,0.777,0.7659,0.9845,0.7648,0.7614,0.5157,0.7886,0.4547,0.7531,0.5036,0.2619,0.508,0.778,0.768,0.7759,0.768,0.0051,0.0359,0.0094,0.0461,0,0.0458,0.8262,0.8798,0.2558,0.5053,0.2496,0.5437,0.2496,0.5437,0.2496,0.5437,0.9835,0.7669,0.9857,0.767,0.9903,0.0414,1,0.041,0.9369,0.8799,0.7461,0.5084,0.7522,0.5057,0.8248,0.8793,0.826,0.8793,0.2485,0.5414,0.2486,0.5415,0.8223,0.888,0.8226,0.8877,0.8369,0.8798,0.2499,0.5437,0.7564,0.5466,0.7629,0.5439,0.9371,0.8793,0.5155,0.0444,0.4833,0.0483,0.3611,0.0451,0.3552,0.0489,0.479,0.1151,0.3647,0.1123,0.6377,0.0476,0.5091,0.0482,0.5091,0.1117,0.6233,0.1146,0.2444,0.5027,0.2445,0.5028,0.2426,0.5038,0.2425,0.5014,0.2431,0.5015,0.2431,0.5015,0.2432,0.5015,0.2414,0.5019,0.241,0.5166,0.2386,0.5166,0.2392,0.5176,0.2768,0.5051,0.2772,0.5065,0.2459,0.5065,0.2774,0.5081,0.2776,0.5098,0.2463,0.5098,0.2454,0.5171,0.2453,0.5171,0.243,0.5173,0.2399,0.5054,0.2402,0.5041,0.238,0.5034,0.2449,0.5179,0.2448,0.518,0.2425,0.5014,0.2401,0.5012,0.2418,0.5016,0.2436,0.5188,0.2436,0.5188,0.2408,0.5188,0.2413,0.5021,0.2398,0.5121,0.2374,0.5121,0.2401,0.5138,0.2458,0.5159,0.2458,0.516,0.2462,0.5081,0.2438,0.5081,0.2405,0.5153,0.2444,0.5027,0.242,0.5027,0.2438,0.5019,0.2443,0.538,0.2381,0.5153,0.2401,0.5138,0.2377,0.5138,0.243,0.5187,0.2429,0.5187,0.2398,0.5121,0.2398,0.512,0.2372,0.5104,0.7639,0.5417,0.7923,0.4657,0.7636,0.5227,0.762,0.5263,0.7644,0.5263,0.2437,0.5146,0.2718,0.5063,0.2722,0.5041,0.2757,0.5186,0.2418,0.5186,0.2403,0.504,0.2726,0.503,0.7606,0.5122,0.9369,0.8683,0.2764,0.5038,0.2759,0.5027,0.2371,0.5087,0.2396,0.5103,0.2716,0.5099,0.2461,0.508,0.2753,0.502,0.2443,0.5185,0.7892,0.4645,0.7502,0.4656,0.7592,0.5163,0.2401,0.5139,0.2725,0.5153,0.2406,0.5154,0.2729,0.5166,0.2771,0.516,0.2767,0.5172,0.2718,0.5122,0.2746,0.5188,0.2721,0.5138,0.274,0.5184,0.2734,0.5176,0.2752,0.5189,0.2763,0.518,0.2742,0.5014,0.2748,0.5015,0.2461,0.5145,0.2439,0.5131,0.2375,0.5055,0.2397,0.5069,0.2388,0.5021,0.2407,0.5029,0.2463,0.513,0.244,0.5115,0.2372,0.507,0.2396,0.5086,0.2491,0.5424,0.2464,0.5114,0.249,0.5424,0.7638,0.542,0.7634,0.5416,0.8743,0.8898,0.8739,0.8838,0.8468,0.8864,0.7609,0.5419,0.7588,0.5421,0.2537,0.5067,0.2536,0.507,0.2539,0.506,0.254,0.5055,0.2541,0.5053,0.2542,0.505,0.9403,0.8881,0.27,0.5414,0.2749,0.5414,0.2712,0.5421,0.2791,0.5415,0.2839,0.5415,0.244,0.5392,0.2888,0.5415,0.2845,0.5415,0.2549,0.5414,0.7641,0.5421,0.2486,0.5415,0.2487,0.5414,0.2488,0.5415,0.2487,0.5414,0.2487,0.5414,0.251,0.5459,0.7415,0.542,0.7507,0.5421,0.7555,0.5435,0.7578,0.5443,0.7523,0.5421,0.7569,0.5421,0.7517,0.5421,0.4632,0.5298,0.8728,0.8901,0.8723,0.8841,0.2488,0.5414,0.2489,0.5414,0.2488,0.5414,0.6134,0.5202,0.9058,0.8864,0.3508,0.5364,0.847,0.8865,0.4056,0.5342,0.8591,0.8867,0.4641,0.5346,0.4628,0.5361,0.8974,0.8835,0.5735,0.5186,0.9066,0.8846,0.9082,0.8843,0.9049,0.8843,0.2446,0.5433,0.8911,0.884,0.7585,0.5421,0.7586,0.5421,0.826,0.8792,0.7369,0.5417,0.3065,0.5412,0.7255,0.5506,0.7279,0.5609,0.7399,0.5526,0.7364,0.5407,0.6931,0.5609,0.8389,0.89,0.3081,0.5818,0.8381,0.8976,0.3145,0.5603,0.8381,0.8963,0.28,0.5602,0.9243,0.8925,0.2786,0.5602,0.3084,0.5398,0.8256,0.8951,0.7293,0.5609,0.9352,0.8866,0.8387,0.8924,0.9383,0.8793,0.7586,0.5421,0.8566,0.8833,0.4471,0.5356,0.4054,0.5364,0.5046,0.5267,0.5046,0.524,0.8912,0.8873,0.9085,0.885,0.9078,0.8837,0.908,0.884,0.6066,0.5292,0.9085,0.8853,0.9083,0.8859,0.9081,0.8862,0.6136,0.5352,0.6118,0.5203,0.905,0.8856,0.9055,0.8835,0.6181,0.5348,0.9075,0.8835,0.9055,0.8862,0.905,0.884,0.6167,0.5352,0.9048,0.8846,0.9406,0.8876,0.244,0.5098,0.2432,0.5053,0.245,0.5039,0.2399,0.5183,0.2423,0.5183,0.241,0.5166,0.7895,0.4652,0.759,0.5157,0.2504,0.5414,0.2494,0.5414,0.2598,0.5414,0.2555,0.5414,0.2646,0.5414,0.2652,0.5414,0.2936,0.5415,0.3616,0.5416,0.3659,0.5416,0.3703,0.5416,0.3747,0.5416,0.3854,0.5416,0.3873,0.5416,0.3789,0.5416,0.7318,0.542,0.751,0.5421,0.7512,0.5421,0.7572,0.5421,0.7581,0.5421,0.7584,0.5421,0.7584,0.543,0.7588,0.5421,0.2441,0.5389,0.2442,0.5386,0.2439,0.5396,0.2435,0.541,0.2438,0.5399,0.2438,0.5397,0.7505,0.5443,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var vec4color=netspace.vec4.create([1,0.39215686274509803,0,1]);
		var textureImageData=null;
		textureCanvas=that.createLaptopTexture();
		var laptopVarietyManifold3D=new VarietyManifold3D(netspace.gl,"Laptop",arrVertices,arrIndices,arrNormals,vec4color,vec4color,0.5,vec4color,0.4,netspace.vec4.create([1.0,1.0,1.0,1.0]),0.1,1.0,textureCanvas,mat4transformation,intTextures,arrTextureUVs,null);
		that.varietyManifold3D=laptopVarietyManifold3D;
		varietyManifolds3D.push(that.varietyManifold3D);
		objectsIsland.varietyManifolds3D=varietyManifolds3D;objectsIsland.LightObject=null;for(var ii=0;ii<objectsIsland.varietyManifolds3D.length;ii++)if("Light"==objectsIsland.varietyManifolds3D[ii].name){objectsIsland.LightObject=objectsIsland.varietyManifolds3D[ii];objectsIsland.vec3positionLight=netspace.computeVec3median(objectsIsland.varietyManifolds3D[ii]);}objectsIsland.fltAdditionalMovementParameter0=0;if(null==objectsIsland.LightObject)objectsIsland.vec3positionLight=netspace.vec3.create([0,0,5]);if(netspace.loadObjectsConfiguration.intPointLightIslandNumber<netspace.pointLightIslands.length){netspace.intActualPointLightIsland=netspace.loadObjectsConfiguration.intPointLightIslandNumber;}else{netspace.pointLightIslands.push(objectsIsland);netspace.intActualPointLightIsland=netspace.pointLightIslands.length-1;}netspace.blnObjectsLoaded=true;
	}
	if(false==netspace.blnLoad3dWorldsOnStart)
		that.createLaptopTexture_lite();
	var divTxtFunFunFunFileSection=document.getElementById("divTxtFunFunFunFileSection");
	if(undefined!=netspace.extensionManager&&null!=netspace.extensionManager)
		netspace.extensionManager.addExtension("ComputerExtension","Computer",function(){var btnLoadComputer=document.getElementById("btnLoadComputer");btnLoadComputer.outerHTML="";});
	var btnUpdateComputerScreen=document.createElement("button");
	btnUpdateComputerScreen.innerText="Update Computer Screen with txtFunFunFun";
	btnUpdateComputerScreen.id="btnUpdateComputerScreen";
	btnUpdateComputerScreen.onclick=function(){
		var intStartxPID=null;
		var theStartx=null;
		for(var ii=0;ii<netspace.computer.lstRunningPrograms.length;ii++){
			if("startx"==netspace.computer.lstRunningPrograms[ii][0])
				intStartxPID=ii;
		};
		if(null!=intStartxPID){
			theStartx=netspace.computer.lstRunningPrograms[intStartxPID][2];
			theStartx.newTerminal_xy(0,0,300,150);
			theStartx.lstXWindows[theStartx.lstXWindows.length-1].theActualProgram.runProgram("txtFunFunFun");
		}else netspace.computer.runProgram("txtFunFunFun");
	};

	if(undefined!=netspace.extensionManager&&null!=netspace.extensionManager)
		netspace.extensionManager.appendChild("ComputerExtension",btnUpdateComputerScreen);
	else divTxtFunFunFunFileSection.appendChild(btnUpdateComputerScreen);
	var chkTouchscreenKeyboard=document.createElement("input");
	chkTouchscreenKeyboard.type="checkbox";
	chkTouchscreenKeyboard.id="chkTouchscreenKeyboard";
	chkTouchscreenKeyboard.onchange=function(){
		var chkTouchscreenKeyboard=document.getElementById("chkTouchscreenKeyboard");
		var divTouchscreenKeys=document.getElementById("divTouchscreenKeys");
		divTouchscreenKeys.onmousedown=function(evtMouse){
			if(chkTouchscreenKeyboard.checked){
				divTouchscreenKeys.innerHTML="<center></center>";
				divTouchscreenKeys.firstElementChild.appendChild(netspace.computer.keyboardCanvas);
				divTouchscreenKeys.firstElementChild.appendChild(netspace.computer.touchpadCanvas);
			}
		};
		var chkTouchscreenKeys=document.getElementById("chkTouchscreenKeys");
		chkTouchscreenKeys.checked=this.checked;
		if(chkTouchscreenKeyboard.checked){divTouchscreenKeys.style.display="";
			chkTouchscreenKeyboard.strDivTouchscreenKeysInnerHTML=divTouchscreenKeys.innerHTML;
			divTouchscreenKeys.innerHTML="<center></center>";
			divTouchscreenKeys.firstElementChild.appendChild(netspace.computer.keyboardCanvas);
			divTouchscreenKeys.firstElementChild.appendChild(netspace.computer.touchpadCanvas);
		}
		else{
			divTouchscreenKeys.innerHTML=chkTouchscreenKeyboard.strDivTouchscreenKeysInnerHTML;
			divTouchscreenKeys.style.display="none";
		};
		//mhdmodiff
		//if(null!=netspace)netspace.onResize();
		if(null!=netspace)window.mhd.onWindowResize();
	};
	var chkTouchscreenKeyboardTitle=document.createTextNode("Touchscreen keyboard");
	if(undefined!=netspace.extensionManager&&null!=netspace.extensionManager){
		netspace.extensionManager.appendChild("ComputerExtension",chkTouchscreenKeyboard);
		netspace.extensionManager.appendChild("ComputerExtension",chkTouchscreenKeyboardTitle);
	}else{
		divTxtFunFunFunFileSection.appendChild(chkTouchscreenKeyboard);
		divTxtFunFunFunFileSection.appendChild(chkTouchscreenKeyboardTitle);
	}
	var chkComputerKeyboardOff=document.createElement("input");
	chkComputerKeyboardOff.type="checkbox";
	chkComputerKeyboardOff.id="chkComputerKeyboardOff";
	that.chkComputerKeyboardOff=chkComputerKeyboardOff;
	window.mhd.chkComputerKeyboardOff=that.chkComputerKeyboardOff;
	var chkComputerKeyboardOffTitle=document.createTextNode("Computer keyboard off");
	if(undefined!=netspace.extensionManager&&null!=netspace.extensionManager){
		netspace.extensionManager.appendChild("ComputerExtension",chkComputerKeyboardOff);
		netspace.extensionManager.appendChild("ComputerExtension",chkComputerKeyboardOffTitle);
	}else{
		divTxtFunFunFunFileSection.appendChild(chkComputerKeyboardOff);
		divTxtFunFunFunFileSection.appendChild(chkComputerKeyboardOffTitle);
	}
	var chkComputerMouseOff=document.createElement("input");
	chkComputerMouseOff.type="checkbox";
	chkComputerMouseOff.id="chkComputerMouseOff";
	that.chkComputerMouseOff=chkComputerMouseOff;
	var chkComputerMouseOffTitle=document.createTextNode("Computer mouse off");
	if(undefined!=netspace.extensionManager&&null!=netspace.extensionManager){
		netspace.extensionManager.appendChild("ComputerExtension",chkComputerMouseOff);
		netspace.extensionManager.appendChild("ComputerExtension",chkComputerMouseOffTitle);
	}else{
		divTxtFunFunFunFileSection.appendChild(chkComputerMouseOff);
		divTxtFunFunFunFileSection.appendChild(chkComputerMouseOffTitle);
	}


	/*
	//mhdmodiff
	var btnLockFullscreenMode=document.createElement("button");
	btnLockFullscreenMode.innerText="Set camera to screen";
	btnLockFullscreenMode.id="btnLockFullscreenMode";
	btnLockFullscreenMode.onclick=function(){
		if("Set camera to screen"==this.innerText){
			var strVec3position=prompt("Enter netspace.camera.vec3position suitable for your screen:","[0.0,5.0,-1.0]");
			if(null==strVec3position)return;
			this.innerText="Unlock normal mode";
			if(true==netspace.blnLoad3dWorldsOnStart){
				var lstVec3position=strVec3position.substring(1,strVec3position.length-1).split(",");
				var vec3position=[];	
				for(var ii=0;ii<3;ii++)vec3position[ii]=parseFloat(lstVec3position[ii]);
				netspace.camera.vec3position=netspace.vec3.create(vec3position);
 				netspace.camera.vec3forward=netspace.vec3.create([-0.001, 0, 1.]);
 				netspace.camera.vec3right=netspace.vec3.create([-1., 0, -0.01]);
 				netspace.camera.vec3lookat=netspace.vec3.create([-0.0062, -0.7838, 0.6210]);
				netspace.vec3.cross(netspace.camera.vec3up,netspace.camera.vec3right,netspace.camera.vec3lookat);
				netspace.camera.prevMouseX=null;
				netspace.camera.prevMouseY=null;
				netspace.camera.blnMouseBlocked=true;
			}
			netspace.chkKeyboardOff.checked=true;
			netspace.chkPreventDefaultKeyactions.checked=true;
			netspace.computer.netspacesFullScreenMode(true);
		}else{
			this.innerText="Set camera to screen";
			if(true==netspace.blnLoad3dWorldsOnStart)
				netspace.camera.blnMouseBlocked=false;
			netspace.chkKeyboardOff.checked=false;
			netspace.chkPreventDefaultKeyactions.checked=false;
			netspace.computer.netspacesFullScreenMode(false);
		}
	};
	if(undefined!=netspace.extensionManager&&null!=netspace.extensionManager)
		netspace.extensionManager.appendChild("ComputerExtension",btnLockFullscreenMode);
	else divTxtFunFunFunFileSection.appendChild(btnLockFullscreenMode);
	*/

	var btnLockComputerScreenCanvas=document.createElement("button");
	btnLockComputerScreenCanvas.innerText="Lock computer screen canvas";
	btnLockComputerScreenCanvas.id="btnLockComputerScreenCanvas";
	btnLockComputerScreenCanvas.onclick=function(){
		var chkShaderThinkpad=document.getElementById("chkShaderThinkpad");
		if("Lock computer screen canvas"==this.innerText){
			this.innerText="Unlock normal mode";
			if(true==netspace.blnLoad3dWorldsOnStart){
				netspace.camera.prevMouseX=null;
				netspace.camera.prevMouseY=null;
				netspace.camera.blnMouseBlocked=true;
			}
			netspace.chkKeyboardOff.checked=true;
			netspace.chkPreventDefaultKeyactions.checked=true;
			netspace.computer.netspacesComputerScreenCanvasMode(true,chkShaderThinkpad.checked);
		}else{
			this.innerText="Lock computer screen canvas";
			if(true==netspace.blnLoad3dWorldsOnStart)
				netspace.camera.blnMouseBlocked=false;
			netspace.chkKeyboardOff.checked=false;
			netspace.chkPreventDefaultKeyactions.checked=false;
			netspace.computer.netspacesComputerScreenCanvasMode(false,chkShaderThinkpad.checked);
		}
	};
	if(undefined!=netspace.extensionManager&&null!=netspace.extensionManager)
		netspace.extensionManager.appendChild("ComputerExtension",btnLockComputerScreenCanvas);
	else divTxtFunFunFunFileSection.appendChild(btnLockComputerScreenCanvas);
	var btnLockComputerTextScreenDiv=document.createElement("button");
	btnLockComputerTextScreenDiv.innerText="Lock computer text screen div";
	btnLockComputerTextScreenDiv.id="btnLockComputerTextScreenDiv";
	btnLockComputerTextScreenDiv.onclick=function(){
		if("Lock computer text screen div"==this.innerText){
			this.innerText="Unlock normal mode";
			if(true==netspace.blnLoad3dWorldsOnStart){
				netspace.camera.prevMouseX=null;
				netspace.camera.prevMouseY=null;
				netspace.camera.blnMouseBlocked=true;
			}
			netspace.chkKeyboardOff.checked=true;
			netspace.chkPreventDefaultKeyactions.checked=true;
			netspace.computer.netspacesComputerTextScreenDivMode(true,false);
		}else{
			this.innerText="Lock computer text screen div";
			if(true==netspace.blnLoad3dWorldsOnStart)
				netspace.camera.blnMouseBlocked=false;
			netspace.chkKeyboardOff.checked=false;
			netspace.chkPreventDefaultKeyactions.checked=false;
			netspace.computer.netspacesComputerTextScreenDivMode(false,false);
		}
	};
	if(undefined!=netspace.extensionManager&&null!=netspace.extensionManager)
		netspace.extensionManager.appendChild("ComputerExtension",btnLockComputerTextScreenDiv);
	else divTxtFunFunFunFileSection.appendChild(btnLockComputerTextScreenDiv);

	var btnLockComputerTextScreenTextDeencoderDiv=document.createElement("button");
	btnLockComputerTextScreenTextDeencoderDiv.innerText="Lock computer text screen text deencoder div";
	btnLockComputerTextScreenTextDeencoderDiv.id="btnLockComputerTextScreenTextDeencoderDiv";
	btnLockComputerTextScreenTextDeencoderDiv.onclick=function(){
		if("Lock computer text screen text deencoder div"==this.innerText){
			this.innerText="Unlock normal mode";
			if(true==netspace.blnLoad3dWorldsOnStart){
				netspace.camera.prevMouseX=null;
				netspace.camera.prevMouseY=null;
				netspace.camera.blnMouseBlocked=true;
			}
			netspace.chkKeyboardOff.checked=true;
			netspace.chkPreventDefaultKeyactions.checked=true;
			netspace.computer.netspacesComputerTextScreenDivMode(true,true);
		}else{
			this.innerText="Lock computer text screen text deencoder div";
			if(true==netspace.blnLoad3dWorldsOnStart){
				netspace.camera.blnMouseBlocked=false;
			}
			netspace.chkKeyboardOff.checked=false;
			netspace.chkPreventDefaultKeyactions.checked=false;
			netspace.computer.netspacesComputerTextScreenDivMode(false,true);
		}
	};
	if(undefined!=netspace.extensionManager&&null!=netspace.extensionManager)
		netspace.extensionManager.appendChild("ComputerExtension",btnLockComputerTextScreenTextDeencoderDiv);
	else divTxtFunFunFunFileSection.appendChild(btnLockComputerTextScreenTextDeencoderDiv);
	var btnResizeTextModeScreen=document.createElement("button");
	btnResizeTextModeScreen.innerText="Resize text mode screen";
	btnResizeTextModeScreen.id="btnResizeTextModeScreen";
	btnResizeTextModeScreen.onclick=function(){
		var strDimensions=prompt("Enter new [intScreenWidth_text,intScreenHeight_text]:","["+netspace.computer.intScreenWidth_text+","+netspace.computer.intScreenHeight_text+"]");
		if(null==strDimensions||undefined==strDimensions)return;
		var lstDimensions=strDimensions.substring(1,strDimensions.length-1).split(",");
		var intScreenWidth_text,intScreenHeight_text;
		intScreenWidth_text=parseInt(lstDimensions[0]);
		intScreenHeight_text=parseInt(lstDimensions[1]);
		if(true==netspace.nonNumber(intScreenWidth_text)||true==netspace.nonNumber(intScreenHeight_text))return;
		netspace.computer.intScreenWidth_text=intScreenWidth_text;
		netspace.computer.intScreenHeight_text=intScreenHeight_text;
		netspace.computer.screenCanvas=null;
		if(0!=this.intRenderText)
			netspace.computer.arrHTMLtextScreenBuffer=new Uint8Array(3*90*intScreenWidth_text*intScreenHeight_text);
		if(undefined!=netspace.computer.theActualProgram.updateDimensions)netspace.computer.theActualProgram.updateDimensions();
		if(undefined!=netspace.shaderThinkpad&&null!=netspace.shaderThinkpad){
			var intNewWidth=netspace.computer.intFontWidth*netspace.computer.intScreenWidth_text;
			var intNewHeight=netspace.computer.intFontHeight*netspace.computer.intScreenHeight_text;
			netspace.shaderThinkpad.resize(intNewWidth,intNewHeight);
		}
	};
	if(undefined!=netspace.extensionManager&&null!=netspace.extensionManager)
		netspace.extensionManager.appendChild("ComputerExtension",btnResizeTextModeScreen);
	else divTxtFunFunFunFileSection.appendChild(btnResizeTextModeScreen);

	var btnFullwindowTextModeScreenSize=document.createElement("button");
	btnFullwindowTextModeScreenSize.innerText="Full window text mode screen size";
	btnFullwindowTextModeScreenSize.id="btnFullwindowTextModeScreenSize";
	btnFullwindowTextModeScreenSize.onclick=function(){
		var intWindowWidth=window.innerWidth;
		var intWindowHeight=window.innerHeight;
		var intWidth_chars=Math.floor(intWindowWidth/netspace.computer.intFontWidth);
		var intHeight_chars=Math.floor(intWindowHeight/netspace.computer.intFontHeight);
		var intScreenWidth_text=intWidth_chars;
		var intScreenHeight_text=intHeight_chars;
		netspace.computer.intScreenWidth_text=intScreenWidth_text;
		netspace.computer.intScreenHeight_text=intScreenHeight_text;
		netspace.computer.screenCanvas=null;
		if(0!=this.intRenderText)
			netspace.computer.arrHTMLtextScreenBuffer=new Uint8Array(3*90*intScreenWidth_text*intScreenHeight_text);
		if(undefined!=netspace.computer.theActualProgram.updateDimensions)netspace.computer.theActualProgram.updateDimensions();
		if(undefined!=netspace.shaderThinkpad&&null!=netspace.shaderThinkpad){
			var intNewWidth=netspace.computer.intFontWidth*netspace.computer.intScreenWidth_text;
			var intNewHeight=netspace.computer.intFontHeight*netspace.computer.intScreenHeight_text;
			netspace.shaderThinkpad.resize(intNewWidth,intNewHeight);
		}
	};
	if(undefined!=netspace.extensionManager&&null!=netspace.extensionManager)
		netspace.extensionManager.appendChild("ComputerExtension",btnFullwindowTextModeScreenSize);
	else divTxtFunFunFunFileSection.appendChild(btnFullwindowTextModeScreenSize);

	var btnLaptopTextModeScreenSize=document.createElement("button");
	btnLaptopTextModeScreenSize.innerText="Laptop text mode screen size";
	btnLaptopTextModeScreenSize.id="btnLaptopTextModeScreenSize";
	btnLaptopTextModeScreenSize.onclick=function(){
		var intScreenWidth_text=netspace.computer.intDefaultScreenWidth_text;
		var intScreenHeight_text=netspace.computer.intDefaultScreenHeight_text;
		netspace.computer.intScreenWidth_text=intScreenWidth_text;
		netspace.computer.intScreenHeight_text=intScreenHeight_text;
		netspace.computer.screenCanvas=null;
		if(0!=this.intRenderText)
			netspace.computer.arrHTMLtextScreenBuffer=new Uint8Array(3*90*intScreenWidth_text*intScreenHeight_text);
		if(undefined!=netspace.computer.theActualProgram.updateDimensions)netspace.computer.theActualProgram.updateDimensions();
		if(undefined!=netspace.shaderThinkpad&&null!=netspace.shaderThinkpad){
			var intNewWidth=netspace.computer.intFontWidth*netspace.computer.intScreenWidth_text;
			var intNewHeight=netspace.computer.intFontHeight*netspace.computer.intScreenHeight_text;
			netspace.shaderThinkpad.resize(intNewWidth,intNewHeight);
		}
	};
	if(undefined!=netspace.extensionManager&&null!=netspace.extensionManager)
		netspace.extensionManager.appendChild("ComputerExtension",btnLaptopTextModeScreenSize);
	else divTxtFunFunFunFileSection.appendChild(btnLaptopTextModeScreenSize);
};
var ComputerConstructor_strF=function(that,lstPrograms){
};
var ComputerConstructor_internals=function(that,screen,lstPrograms){
	netspace=window.mhd.netspace;
	that.screen=screen;
	that.screenCanvas=null;
	that.divComputerTextScreen=document.createElement("div");
	that.divComputerTextScreen.style="white-space: nowrap;";
	that.divComputerTextScreen.font="10px Courier";
	that.divComputerTextScreen.id="divComputerTextScreen";
	that.strHTMLtextScreenBuffer="";
	that.intHTMLtextScreenBuffer=0;
	that.divComputerTextScreen.innerHTML=that.strHTMLtextScreenBuffer;
	//mhdmodiff
	//that.divComputerTextScreen.onmousemove=netspace.onMouseMove;
	//that.divComputerTextScreen.onmousedown=netspace.onMouseDown;
	//that.divComputerTextScreen.onmouseup=netspace.onMouseUp;
	//that.divComputerTextScreen.onmousewheel=netspace.onMouseWheel;
	that.prevForecolor=[-1,-1,-1,-1];
	that.prevBackcolor=[-1,-1,-1,-1];
	that.strForecolor=null;
	that.strBackcolor=null;
	that.strForeBackColor=null;
	that.blnTextMode=true;
	/*font size and the laptop geometry*/
	that.intDefaultScreenWidth_text=66;
	that.intDefaultScreenHeight_text=36;
	that.intScreenWidth_text=that.intDefaultScreenWidth_text;
	that.intScreenHeight_text=that.intDefaultScreenHeight_text;
	that.intScreenWidth_graphics=745-283;
	that.intScreenHeight_graphics=977-616;
	that.intFontWidth=7;
	that.intFontHeight=10;
	if(true==netspace.blnLoad3dWorldsOnStart)
		that.blnRenderTextures=true;
	else that.blnRenderTextures=false;
	that.blnRenderScreen=true;
	that.intRenderText=0;
	that.lstVeryOrange=[255,60,0,255];
	that.blnInchesKeyboardMode=false;
	that.blnKeyboardCanvas_CapsLock=false;
	that.blnKeyboardCanvas_Fn=false;
	that.blnKeyboardCanvas_Ctrl=false;
	that.blnKeyboardCanvas_Alt=false;
	that.blnKeyboardCanvas_Shift=false;
	/*long battery hackish night spirit*/
	if(false==netspace.chkShaderThinkpad.checked)
		that.lstConsoleGray=[150,150,150,255];
	else that.lstConsoleGray=[255,255,255,255];
	that.clearScreen_text();
	that.clearScreen_graphics();
	that.lstRunningPrograms=[];
	that.lstProgramNames=[];
	that.theShell=new Program_Bash(that,that);
	that.theActualProgram=that.theShell;
	that.theActualProgram.inits();
	that.lstPrograms=lstPrograms;
	for(var ii=0;ii<lstPrograms.length;ii++){
		that.lstProgramNames.push(that.lstPrograms[ii][0]);
	}
};
var Computer=function(screen,lstPrograms){
	ComputerConstructor_internals(this,screen,lstPrograms);
	ComputerConstructor(this,lstPrograms);
	ComputerConstructor_strF(this,lstPrograms);
};
Computer.prototype.loadLaptop_input=function(){
	//mhdmodiff: function never applied
	var prevOnKeyDown=netspace.onKeyDown;
	var prevOnKeyUp=netspace.onKeyUp;
	var onKeyDown=function(evtKey){
		netspace.computer.onKeyDown(evtKey);
		prevOnKeyDown(evtKey);
	};
	var onKeyUp=function(evtKey){
		netspace.computer.onKeyUp(evtKey);
   		if(undefined!=prevOnKeyUp)
			prevOnKeyUp(evtKey);
	};
	netspace.onKeyDown=onKeyDown;
	netspace.onKeyUp=onKeyUp;

	window.onkeydown=netspace.onKeyDown;
	window.onkeyup=netspace.onKeyUp;

	var maincanvas=document.getElementById("maincanvas");
	var screenCanvas=netspace.computer.screenCanvas;
	var divComputerTextScreen=netspace.computer.divComputerTextScreen;
	var prevOnMouseMove=netspace.onMouseMove;
	var onMouseMove=function(evtMouse){
		netspace.computer.onMouseMove(evtMouse);
		prevOnMouseMove(evtMouse);
	};
	netspace.onMouseMove=onMouseMove;
	maincanvas.onmousemove=onMouseMove;
	if(null!=screenCanvas)
		screenCanvas.onmousemove=onMouseMove;
	divComputerTextScreen.onmousemove=onMouseMove;
	var prevOnMouseUp=netspace.onMouseUp;
	var onMouseUp=function(evtMouse){
		netspace.computer.onMouseUp(evtMouse);
		prevOnMouseUp(evtMouse);
	};
	netspace.onMouseUp=onMouseUp;
	maincanvas.onmouseup=onMouseUp;
	if(null!=screenCanvas)
		screenCanvas.onmouseup=onMouseUp;
	divComputerTextScreen.onmouseup=onMouseUp;
	var prevOnMouseDown=netspace.onMouseDown;
	var onMouseDown=function(evtMouse){
		netspace.computer.onMouseDown(evtMouse);
		prevOnMouseDown(evtMouse);
	};
	netspace.onMouseDown=onMouseDown;
	maincanvas.onmousedown=onMouseDown;
	if(null!=screenCanvas)
		screenCanvas.onmousedown=onMouseDown;
	divComputerTextScreen.onmousedown=onMouseDown;
	var prevOnMouseWheel=netspace.onMouseWheel;
	var onMouseWheel=function(evtMouse){
		netspace.computer.onMouseWheel(evtMouse);
		prevOnMouseWheel(evtMouse);
	};
	netspace.onMouseWheel=onMouseWheel;
	maincanvas.onmousewheel=onMouseWheel;
	if(null!=screenCanvas)
		screenCanvas.onmousewheel=onMouseWheel;
	divComputerTextScreen.onmousewheel=onMouseWheel;

	var prevAdditionalLoopFunction=netspace.additionalLoopFunction;
	var additionalLoopFunction=function(currentFrameTime){
		prevAdditionalLoopFunction(currentFrameTime);		
		netspace.computer.loopFunction(currentFrameTime);
	};
	netspace.additionalLoopFunction=additionalLoopFunction;

	touchscreenKeyDown=function(strKeycode){
	if(undefined!=netspace.computer)
		if(null!=netspace.computer){
			var evtKey;
			if("Key"==strKeycode.substring(0,3))
				evtKey=netspace.computer.keyboardCanvas.findKeyEvent([strKeycode.substring(3,4)]);
			else evtKey=netspace.computer.keyboardCanvas.findKeyEvent([strKeycode]);
			netspace.computer.onKeyDown(evtKey);
		}
	};
	touchscreenKeyUp=function(strKeycode){
	if(undefined!=netspace.computer)
		if(null!=netspace.computer){
			var evtKey;
			if("Key"==strKeycode.substring(0,3))
				evtKey=netspace.computer.keyboardCanvas.findKeyEvent([strKeycode.substring(3,4)]);
			else evtKey=netspace.computer.keyboardCanvas.findKeyEvent([strKeycode]);
			netspace.computer.onKeyUp(evtKey);
		}
	};
	var prevButtonWup=buttonWup;
	var prevButtonW=buttonW;
	buttonWup=function(){
		touchscreenKeyUp("KeyW");
		if(netspace.chkKeyboardOff.checked)return;
		prevButtonWup();
	};
	buttonW=function(){
		touchscreenKeyDown("KeyW");
		if(netspace.chkKeyboardOff.checked)return;
		prevButtonW();
	};
	var prevButtonDup=buttonDup;
	var prevButtonD=buttonD;
	buttonDup=function(){
		touchscreenKeyUp("KeyD");
		if(netspace.chkKeyboardOff.checked)return;
		prevButtonDup();
	};
	buttonD=function(){
		touchscreenKeyDown("KeyD");
		if(netspace.chkKeyboardOff.checked)return;
		prevButtonD();
	};
	var prevButtonSup=buttonSup;
	var prevButtonS=buttonS;
	buttonSup=function(){
		touchscreenKeyUp("KeyS");
		if(netspace.chkKeyboardOff.checked)return;
		prevButtonSup();
	};
	buttonS=function(){
		touchscreenKeyDown("KeyS");
		if(netspace.chkKeyboardOff.checked)return;
		prevButtonS();
	};
	var prevButtonAup=buttonAup;
	var prevButtonA=buttonA;
	buttonAup=function(){
		touchscreenKeyUp("KeyA");
		if(netspace.chkKeyboardOff.checked)return;
		prevButtonAup();
	};
	buttonA=function(){
		touchscreenKeyDown("KeyA");
		if(netspace.chkKeyboardOff.checked)return;
		prevButtonA();
	};
	var prevButtonRup=buttonRup;
	var prevButtonR=buttonR;
	buttonRup=function(){
		touchscreenKeyUp("KeyR");
		if(netspace.chkKeyboardOff.checked)return;
		prevButtonRup();
	};
	buttonR=function(){
		touchscreenKeyDown("KeyR");
		if(netspace.chkKeyboardOff.checked)return;
		prevButtonR();
	};
	var prevButtonFup=buttonFup;
	var prevButtonF=buttonF;
	buttonFup=function(){
		touchscreenKeyUp("KeyF");
		if(netspace.chkKeyboardOff.checked)return;
		prevButtonFup();
	};
	buttonF=function(){
		touchscreenKeyDown("KeyF");
		if(netspace.chkKeyboardOff.checked)return;
		prevButtonF();
	};
	var prevButtonT=buttonT;
	buttonT=function(){
		touchscreenKeyDown("KeyT");
		if(netspace.chkKeyboardOff.checked)return;
		prevButtonT();
	};
	var prevButtonG=buttonG;
	buttonG=function(){
		touchscreenKeyDown("KeyG");
		if(netspace.chkKeyboardOff.checked)return;
		prevButtonG();
	};
	var prevButtonZ=buttonZ;
	buttonZ=function(){
		touchscreenKeyDown("KeyZ");
		if(netspace.chkKeyboardOff.checked)return;
		prevButtonZ();
	};
	var prevButtonC=buttonC;
	buttonC=function(){
		touchscreenKeyDown("KeyC");
		if(netspace.chkKeyboardOff.checked)return;
		prevButtonC();
	};
	var prevButtonArrowUpup=buttonArrowUpup;
	var prevButtonArrowUp=buttonArrowUp;
	buttonArrowUpup=function(){
		touchscreenKeyUp("ArrowUp");
		if(netspace.chkKeyboardOff.checked)return;
		prevButtonArrowUpup();
	};
	buttonArrowUp=function(){
		touchscreenKeyDown("ArrowUp");
		if(netspace.chkKeyboardOff.checked)return;
		prevButtonArrowUp();
	};
	var prevButtonArrowRightup=buttonArrowRightup;
	var prevButtonArrowRight=buttonArrowRight;
	buttonArrowRightup=function(){
		touchscreenKeyUp("ArrowRight");
		if(netspace.chkKeyboardOff.checked)return;
		prevButtonArrowRightup();
	};
	buttonArrowRight=function(){
		touchscreenKeyDown("ArrowRight");
		if(netspace.chkKeyboardOff.checked)return;
		prevButtonArrowRight();
	};
	var prevButtonArrowDownup=buttonArrowDownup;
	var prevButtonArrowDown=buttonArrowDown;
	buttonArrowDownup=function(){
		touchscreenKeyUp("ArrowDown");
		if(netspace.chkKeyboardOff.checked)return;
		prevButtonArrowDownup();
	};
	buttonArrowDown=function(){
		touchscreenKeyDown("ArrowDown");
		if(netspace.chkKeyboardOff.checked)return;
		prevButtonArrowDown();
	};
	var prevButtonArrowLeftup=buttonArrowLeftup;
	var prevButtonArrowLeft=buttonArrowLeft;
	buttonArrowLeftup=function(){
		touchscreenKeyUp("ArrowLeft");
		if(netspace.chkKeyboardOff.checked)return;
		prevButtonArrowLeftup();
	};
	buttonArrowLeft=function(){
		touchscreenKeyDown("ArrowLeft");
		if(netspace.chkKeyboardOff.checked)return;
		prevButtonArrwLeft();
	};
	var prevButtonPgUpup=buttonPgUpup;
	var prevButtonPgUp=buttonPgUp;
	buttonPgUpup=function(){
		touchscreenKeyUp("PageUp");
		if(netspace.chkKeyboardOff.checked)return;
		prevButtonPgUpup();
	};
	buttonPgUp=function(){
		touchscreenKeyDown("PageUp");
		if(netspace.chkKeyboardOff.checked)return;
		prevButtonPgUp();
	};
	var prevButtonPgDnup=buttonPgDnup;
	var prevButtonPgDn=buttonPgDn;
	buttonPgDnup=function(){
		touchscreenKeyUp("PageDown");
		if(netspace.chkKeyboardOff.checked)return;
		prevButtonPgDnup();
	};
	buttonPgDn=function(){
		touchscreenKeyDown("PageDown");
		if(netspace.chkKeyboardOff.checked)return;
		prevButtonPgDn();
	};
	var prevButtonHome=buttonHome;
	buttonHome=function(){
		touchscreenKeyDown("Home");
		if(netspace.chkKeyboardOff.checked)return;
		prevButtonHome();
	};
};/*loadLaptop_input*/
Computer.prototype.spacesList=function(size){
	var list=[];
	for(var ii=0;ii<size;ii++)
		list.push(" ");
	return list;
};
Computer.prototype.getScreenIndex_text=function(i,j){
	return j*(this.intScreenWidth_text)+i;
};
Computer.prototype.getScreenIndex_graphics=function(i,j){
	return (j*(this.intScreenWidth_graphics)+i)*4;
};
Computer.prototype.getMinMax=function(a,b){
	var fltMin=(a<=b)?a:b;
	var fltMax=(a>=b)?a:b;
	return [fltMin,fltMax];
};
Computer.prototype.newOnResize=function(evtEvent){
	//mhdmodiff: function never applied
	var chkTouchscreenKeys=document.getElementById("chkTouchscreenKeys");
	var divCanvas=document.getElementById("divCanvas");
	divCanvas.style="";
	if(true==netspace.blnLoad3dWorldsOnStart){
		netspace.camera.intWidth=divCanvas.clientWidth;
		netspace.camera.intHeight=divCanvas.clientHeight;
		netspace.camera.resizeScreen(netspace.camera.intWidth,netspace.camera.intHeight);
	}
};
Computer.prototype.emptyKeyEvent=function(){
	var evtKey={};
	evtKey.altKey=false;
	evtKey.ctrlKey=false;
	evtKey.shiftKey=false;
	evtKey.key="";
	evtKey.code="";
	return evtKey;
};
Computer.prototype.netspacesFullScreenMode=function(blnFullscreenMode){
	//mhdmodiff: function never applied
	this.blnRenderScreen=true;
	if(true==netspace.blnLoad3dWorldsOnStart)
		this.blnRenderTextures=true;
	else this.blnRenderTextures=false;
	this.intRenderText=0;
	var divMenu=document.getElementById("divMenu");
	var divCanvas=document.getElementById("divCanvas");
	var btnLockFullscreenMode=document.getElementById("btnLockFullscreenMode");
	var divTxtFunFunFunFileSection=document.getElementById("divTxtFunFunFunFileSection");

	var divArtificialTextarea1=document.getElementById("divArtificialTextarea1");
	var divArtificialTextarea2=document.getElementById("divArtificialTextarea2");
	var divBtnLockFullscreenMode=document.getElementById("divBtnLockFullscreenMode");
	var keyboardCanvas=netspace.computer.keyboardCanvas;
	var chkTouchscreenKeyboard;
	var chkTouchscreenTouchpad;
	var chkBackspaceEmpty1=document.createElement("input");
	chkBackspaceEmpty1.type="checkbox";
	chkBackspaceEmpty1.id="chkBackspaceEmpty1";
	chkBackspaceEmpty1.checked=false;
	var chkBackspaceEmptyTitle1=document.createTextNode("<-");
	var chkInchesKeyboard1=document.createElement("input");
	chkInchesKeyboard1.type="checkbox";
	chkInchesKeyboard1.id="chkInchesKeyboard1";
	chkInchesKeyboard1.checked=netspace.computer.blnInchesKeyboardMode;
	chkInchesKeyboard1.onchange=function(){
		netspace.computer.blnInchesKeyboardMode=this.checked;
		if(undefined!=netspace.computer.inchesKeyboard&&null!=netspace.computer.inchesKeyboard)
			netspace.computer.inchesKeyboard.chkInchesChanged();
	};
	var chkInchesKeyboardTitle1=document.createTextNode("键盘");
	var btnArtificialEscape1=document.createElement("button");
	btnArtificialEscape1.id="btnArtificialEscape1";
	btnArtificialEscape1.style="width:50px;height:50px";
	btnArtificialEscape1.innerText="Esc";
	btnArtificialEscape1.onclick=function(){
		var newEvent=netspace.computer.emptyKeyEvent();
		newEvent.key="Escape";newEvent.code="Escape";
		netspace.computer.onKeyDown(newEvent);
		txtArtificialTextarea1.value="";
		txtArtificialTextarea2.value="";
		netspace.computer.txtArtificialTextarea_blnOninputDone=false;
	};
	var txtArtificialTextarea1=document.createElement("textarea");
	//mhdmodiff--
	//txtArtificialTextarea1.type="text";
	txtArtificialTextarea1.id="txtArtificialTextarea1";
	txtArtificialTextarea1.rows=1;
	netspace.computer.txtArtificialTextarea_blnOninputDone=false;
	txtArtificialTextarea1.oninput=function(evtInput){
		if(0==this.value.length||10==this.value.charCodeAt(0)||13==this.value.charCodeAt(0)){netspace.computer.txtArtificialTextarea_blnOninputDone=false;this.value="";return;}
		if(undefined!=chrValue)
			alert(chrValue+":"+chrValue.charCodeAt(0));
		netspace.computer.txtArtificialTextarea_blnOninputDone=false;
		var chrValue=this.value[0];
		if(chrValue.charCodeAt(0)>255){
			chrValue=this.value;/*inches from OS input systems*/
		}
		if(undefined!=chrValue&&null!=chrValue){
			var newEvent=netspace.computer.emptyKeyEvent();
			newEvent.key=chrValue;newEvent.code=chrValue;
			var intCode=chrValue.charCodeAt(0);
			if(intCode>=65&&intCode<=90)newEvent.shiftKey=true;
			if("string"==typeof(chrValue)&&1==chrValue.length){
				netspace.computer.onKeyDown(newEvent);
				this.value="";
				netspace.computer.txtArtificialTextarea_blnOninputDone=true;
			}
			if("string"==typeof(chrValue)&&chrValue.length>1&&chrValue.charCodeAt(0)>255){
				netspace.computer.onKeyDown(newEvent);
				this.value="";
				netspace.computer.txtArtificialTextarea_blnOninputDone=true;
			}
		}
	};
	txtArtificialTextarea1.onkeyup=function(evtKey){this.value="";netspace.computer.txtArtificialTextarea_blnOninputDone=true;};
	txtArtificialTextarea1.onkeydown=function(evtKey){
                var whichKeyCode=evtKey.keyCode||evtKey.which;
                if(undefined!=whichKeyCode&&0!=whichKeyCode&&229!=whichKeyCode){ 
			var strKey;
			switch(whichKeyCode){
				case 8:strKey="Backspace";break;
				case 13:strKey="Enter";break;
				case 16:strKey="Shift";break;
				case 20:strKey="CapsLock";break;
				case 27:strKey="Escape";break;
				case 37:strKey="ArrowLeft";break;
				case 38:strKey="ArrowUp";break;
				case 39:strKey="ArrowRight";break;
				case 40:strKey="ArrowDown";break;
				default:return;break;
			}
			var newEvent=netspace.computer.emptyKeyEvent();
			newEvent.key=strKey;newEvent.code=strKey;
			netspace.computer.onKeyDown(newEvent);
			netspace.computer.txtArtificialTextarea_blnOninputDone=true;
			this.value="";
			return;
                    }
		if(undefined==whichKeyCode){netspace.computer.txtArtificialTextarea_blnOninputDone=false;return;};
		if(true==chkBackspaceEmpty1.checked&&(0==whichKeyCode||229==whichKeyCode)&&0==this.value.length&&false==netspace.computer.txtArtificialTextarea_blnOninputDone){
			var strKey;
			strKey="Backspace";
			var newEvent=netspace.computer.emptyKeyEvent();
			newEvent.key=strKey;newEvent.code=strKey;
			netspace.computer.onKeyDown(newEvent);
			
			this.value="";
			netspace.computer.txtArtificialTextarea_blnOninputDone=false;
			return;
		}
		netspace.computer.txtArtificialTextarea_blnOninputDone=false;
		this.value="";
	};
	txtArtificialTextarea1.onfocus=function(){
		window.onkeydown=null;
	};
	txtArtificialTextarea1.onblur=function(){
		window.onkeydown=netspace.onKeyDown;
	};
	var chkBackspaceEmpty2=document.createElement("input");
	chkBackspaceEmpty2.type="checkbox";
	chkBackspaceEmpty2.id="chkBackspaceEmpty2";
	chkBackspaceEmpty2.checked=false;
	var chkBackspaceEmptyTitle2=document.createTextNode("<-");
	var chkInchesKeyboard2=document.createElement("input");
	chkInchesKeyboard2.type="checkbox";
	chkInchesKeyboard2.id="chkInchesKeyboard2";
	chkInchesKeyboard2.checked=netspace.computer.blnInchesKeyboardMode;
	chkInchesKeyboard2.onchange=function(){
		netspace.computer.blnInchesKeyboardMode=this.checked;
		if(undefined!=netspace.computer.inchesKeyboard&&null!=netspace.computer.inchesKeyboard)
			netspace.computer.inchesKeyboard.chkInchesChanged();
	};
	var chkInchesKeyboardTitle2=document.createTextNode("键盘");
	var btnArtificialEscape2=document.createElement("button");
	btnArtificialEscape2.id="btnArtificialEscape2";
	btnArtificialEscape2.style="width:50px;height:50px";
	btnArtificialEscape2.innerText="Esc";
	btnArtificialEscape2.onclick=btnArtificialEscape1.onclick;
	var txtArtificialTextarea2=document.createElement("textarea");
	//mhdmodiff--
	//txtArtificialTextarea2.type="text";
	txtArtificialTextarea2.id="txtArtificialTextarea2";
	txtArtificialTextarea2.rows=1;
	txtArtificialTextarea2.oninput=txtArtificialTextarea1.oninput;
	txtArtificialTextarea2.onkeyup=function(evtKey){this.value="";netspace.computer.txtArtificialTextarea_blnOninputDone=true;};
	txtArtificialTextarea2.onkeydown=function(evtKey){
                var whichKeyCode=evtKey.keyCode||evtKey.which;
                if(undefined!=whichKeyCode&&0!=whichKeyCode&&229!=whichKeyCode){ 
			var strKey;
			switch(whichKeyCode){
				case 8:strKey="Backspace";break;
				case 13:strKey="Enter";break;
				case 16:strKey="Shift";break;
				case 20:strKey="CapsLock";break;
				case 27:strKey="Escape";break;
				case 37:strKey="ArrowLeft";break;
				case 38:strKey="ArrowUp";break;
				case 39:strKey="ArrowRight";break;
				case 40:strKey="ArrowDown";break;
				default:return;break;
			}
			var newEvent=netspace.computer.emptyKeyEvent();
			newEvent.key=strKey;newEvent.code=strKey;
			netspace.computer.onKeyDown(newEvent);
			netspace.computer.txtArtificialTextarea_blnOninputDone=true;
			this.value="";
			return;
                    }
		if(undefined==whichKeyCode){netspace.computer.txtArtificialTextarea_blnOninputDone=false;return;};
		if(true==chkBackspaceEmpty2.checked&&(0==whichKeyCode||229==whichKeyCode)&&0==this.value.length&&false==netspace.computer.txtArtificialTextarea_blnOninputDone){
			var strKey;
			strKey="Backspace";
			var newEvent=netspace.computer.emptyKeyEvent();
			newEvent.key=strKey;newEvent.code=strKey;
			netspace.computer.onKeyDown(newEvent);
			this.value="";
			netspace.computer.txtArtificialTextarea_blnOninputDone=false;
			return;
		}
		netspace.computer.txtArtificialTextarea_blnOninputDone=false;
		this.value="";
	};
	txtArtificialTextarea2.onfocus=txtArtificialTextarea1.onfocus;
	txtArtificialTextarea2.onblur=txtArtificialTextarea1.onblur;
	if(null==divArtificialTextarea1){
		divArtificialTextarea1=document.createElement("div");
		divArtificialTextarea1.id="divArtificialTextarea1";
		divArtificialTextarea1.innerHTML="<center></center>";
	}
	if(null==divArtificialTextarea2){
		divArtificialTextarea2=document.createElement("div");
		divArtificialTextarea2.id="divArtificialTextarea2";
		divArtificialTextarea2.innerHTML="<center></center>";
	}
	if(null==divBtnLockFullscreenMode){
		divBtnLockFullscreenMode=document.createElement("div");
		divBtnLockFullscreenMode.id="divBtnLockFullscreenMode";
		divBtnLockFullscreenMode.appendChild(btnLockFullscreenMode);
		var chkTouchscreenKeyboard=document.createElement("input");
		chkTouchscreenKeyboard.type="checkbox";
		chkTouchscreenKeyboard.id="chkTouchscreenKeyboard";
		chkTouchscreenKeyboard.checked=true;
		chkTouchscreenKeyboard.onchange=function(){
			if(true==this.checked){
				divFullscreenContent.firstElementChild.appendChild(divTouchscreenKeyboard);
			}else{
				divFullscreenContent.firstElementChild.removeChild(divTouchscreenKeyboard);
			}

		};
		var chkTouchscreenKeyboardTitle=document.createTextNode("Keyboard");
		divBtnLockFullscreenMode.appendChild(chkTouchscreenKeyboard);
		divBtnLockFullscreenMode.appendChild(chkTouchscreenKeyboardTitle);
		var chkTouchscreenTouchpad=document.createElement("input");
		chkTouchscreenTouchpad.type="checkbox";
		chkTouchscreenTouchpad.id="chkTouchscreenTouchpad";
		chkTouchscreenTouchpad.checked=true;
		chkTouchscreenTouchpad.onchange=function(){
			if(true==this.checked){
				divFullscreenContent.firstElementChild.appendChild(divTouchscreenTouchpad);
			}else{
				divFullscreenContent.firstElementChild.removeChild(divTouchscreenTouchpad);
			}

		};
		var chkTouchscreenTouchpadTitle=document.createTextNode("Touchpad");
		divBtnLockFullscreenMode.appendChild(chkTouchscreenTouchpad);
		divBtnLockFullscreenMode.appendChild(chkTouchscreenTouchpadTitle);
		var chkArtificialTextfield=document.createElement("input");
		chkArtificialTextfield.type="checkbox";
		chkArtificialTextfield.id="chkArtificialTextfield";
		chkArtificialTextfield.checked=false;
		chkArtificialTextfield.onchange=function(){
			if(true==this.checked){
				divArtificialTextarea1.firstElementChild.appendChild(btnArtificialEscape1);
				divArtificialTextarea1.firstElementChild.appendChild(txtArtificialTextarea1);
				divArtificialTextarea1.firstElementChild.appendChild(chkBackspaceEmpty1);
				divArtificialTextarea1.firstElementChild.appendChild(chkBackspaceEmptyTitle1);
				divArtificialTextarea1.firstElementChild.appendChild(chkInchesKeyboard1);
				divArtificialTextarea1.firstElementChild.appendChild(chkInchesKeyboardTitle1);
   				chkInchesKeyboard1.checked=netspace.computer.blnInchesKeyboardMode;
				divArtificialTextarea2.firstElementChild.appendChild(btnArtificialEscape2);
				divArtificialTextarea2.firstElementChild.appendChild(txtArtificialTextarea2);
				divArtificialTextarea2.firstElementChild.appendChild(chkBackspaceEmpty2);
				divArtificialTextarea2.firstElementChild.appendChild(chkBackspaceEmptyTitle2);
				divArtificialTextarea2.firstElementChild.appendChild(chkInchesKeyboard2);
				divArtificialTextarea2.firstElementChild.appendChild(chkInchesKeyboardTitle2);
   				chkInchesKeyboard2.checked=netspace.computer.blnInchesKeyboardMode;
			}
			else{
				divArtificialTextarea1.firstElementChild.removeChild(btnArtificialEscape1);
				divArtificialTextarea1.firstElementChild.removeChild(txtArtificialTextarea1);
				divArtificialTextarea1.firstElementChild.removeChild(chkBackspaceEmpty1);
				divArtificialTextarea1.firstElementChild.removeChild(chkBackspaceEmptyTitle1);
				divArtificialTextarea1.firstElementChild.removeChild(chkInchesKeyboard1);
				divArtificialTextarea1.firstElementChild.removeChild(chkInchesKeyboardTitle1);
				divArtificialTextarea2.firstElementChild.removeChild(btnArtificialEscape2);
				divArtificialTextarea2.firstElementChild.removeChild(txtArtificialTextarea2);
				divArtificialTextarea2.firstElementChild.removeChild(chkBackspaceEmpty2);
				divArtificialTextarea2.firstElementChild.removeChild(chkBackspaceEmptyTitle2);
				divArtificialTextarea2.firstElementChild.removeChild(chkInchesKeyboard2);
				divArtificialTextarea2.firstElementChild.removeChild(chkInchesKeyboardTitle2);
			}
		};
		var chkArtificialTextfieldTitle=document.createTextNode("Artificial textarea");
		divBtnLockFullscreenMode.appendChild(chkArtificialTextfield);
		divBtnLockFullscreenMode.appendChild(chkArtificialTextfieldTitle);

		var chkShaderThinkpad2=document.createElement("input");
		chkShaderThinkpad2.type="checkbox";
		chkShaderThinkpad2.id="chkShaderThinkpad2";
		chkShaderThinkpad2.checked=netspace.chkShaderThinkpad.checked;
		chkShaderThinkpad2.onchange=function(){
			netspace.chkShaderThinkpad.checked=this.checked;
			chkShaderThinkpadChanged();
		};
		divBtnLockFullscreenMode.appendChild(chkShaderThinkpad2);
		var chkShaderThinkpad2Title=document.createTextNode("Shader thinkpad");
		divBtnLockFullscreenMode.appendChild(chkShaderThinkpad2Title);

		netspace.chk3dMouseMode.checked=false;
		var chk3dMouseMode2=document.createElement("input");
		chk3dMouseMode2.type="checkbox";
		chk3dMouseMode2.id="chk3dMouseMode2";
		chk3dMouseMode2.checked=netspace.chk3dMouseMode.checked;
		chk3dMouseMode2.onchange=function(){
			netspace.chk3dMouseMode.checked=this.checked;
		};
		divBtnLockFullscreenMode.appendChild(chk3dMouseMode2);
		var chk3dMouseModeTitle=document.createTextNode("3d mouse");
		divBtnLockFullscreenMode.appendChild(chk3dMouseModeTitle);
	}

	var divTouchscreenKeyboard=document.getElementById("divTouchscreenKeyboard");
	if(null==divTouchscreenKeyboard){
		divTouchscreenKeyboard=document.createElement("div");
		divTouchscreenKeyboard.innerHTML="<center></center>";
		divTouchscreenKeyboard.id="divTouchscreenKeyboard";
		divTouchscreenKeyboard.appendChild(keyboardCanvas);
		divTouchscreenKeyboard.onmousedown=function(evtMouse){
			var keyboardCanvas=netspace.computer.keyboardCanvas;
			divTouchscreenKeyboard.innerHTML="<center></center>";
			divTouchscreenKeyboard.id="divTouchscreenKeyboard";
			divTouchscreenKeyboard.appendChild(keyboardCanvas);
		};
	}
	var touchpadCanvas=netspace.computer.touchpadCanvas;
	var divTouchscreenTouchpad=document.getElementById("divTouchscreenTouchpad");
	if(null==divTouchscreenTouchpad){
		divTouchscreenTouchpad=document.createElement("div");
		divTouchscreenTouchpad.innerHTML="<center></center>";
		divTouchscreenTouchpad.id="divTouchscreenTouchpad";
		divTouchscreenTouchpad.appendChild(touchpadCanvas);
	}

	var divFullscreenContent=document.getElementById("divFullscreenContent");
	if(null==divFullscreenContent){
		divFullscreenContent=document.createElement("div");
		divFullscreenContent.id="divFullscreenContent";
		divFullscreenContent.innerHTML="<center></center>";
	}
	var divMenu2=document.getElementById("divMenu2");
	if(true==blnFullscreenMode){
		divMenu2.innerHTML="<center></center>";
		divMenu.style.display="none";
		divMenu2.firstElementChild.appendChild(divArtificialTextarea1);
		divFullscreenContent.firstElementChild.appendChild(divArtificialTextarea2);
		divFullscreenContent.firstElementChild.appendChild(divBtnLockFullscreenMode);
		divFullscreenContent.firstElementChild.appendChild(divTouchscreenKeyboard);
		divFullscreenContent.firstElementChild.appendChild(divTouchscreenTouchpad);
		divCanvas.appendChild(divFullscreenContent);
	}
	else{
		netspace.chk3dMouseMode.checked=true;
		divMenu2.firstElementChild.removeChild(divArtificialTextarea1);
		divFullscreenContent.firstElementChild.removeChild(divBtnLockFullscreenMode);
		divFullscreenContent.firstElementChild.removeChild(divArtificialTextarea2);
		try{
		divFullscreenContent.firstElementChild.removeChild(divTouchscreenKeyboard);
		divFullscreenContent.firstElementChild.removeChild(divTouchscreenTouchpad);
		}catch(xcp){}
		divCanvas.removeChild(divFullscreenContent);
		if(undefined!=netspace.extensionManager&&null!=netspace.extensionManager)
			netspace.extensionManager.appendChild("ComputerExtension",btnLockFullscreenMode);
		else divTxtFunFunFunFileSection.appendChild(btnLockFullscreenMode);
		divMenu.style.display="";
	}
};
Computer.prototype.netspacesComputerScreenCanvasMode=function(blnComputerScreenCanvasMode,blnShaderThinkpad){
	if(true==blnComputerScreenCanvasMode){
		this.blnRenderScreen=true;
		this.blnRenderTextures=false;
		this.intRenderText=0;
	}else{
		this.blnRenderScreen=true;
		if(true==netspace.blnLoad3dWorldsOnStart)
			this.blnRenderTextures=true;
		else this.blnRenderTextures=false;
		this.intRenderText=0;
	}
	//mhdmodiff
	//var divMenu=document.getElementById("divMenu");
	//var divCanvas=document.getElementById("divCanvas");
	var btnLockComputerScreenCanvas=document.getElementById("btnLockComputerScreenCanvas");
	var divArtificialTextarea1=document.getElementById("divArtificialTextarea1");
	var divArtificialTextarea2=document.getElementById("divArtificialTextarea2");
	var divBtnLockComputerScreenCanvas=document.getElementById("divBtnLockComputerScreenCanvas");
	var keyboardCanvas=netspace.computer.keyboardCanvas;
	var chkTouchscreenKeyboard;
	var chkTouchscreenTouchpad;
	var chkBackspaceEmpty1=document.createElement("input");
	chkBackspaceEmpty1.type="checkbox";
	chkBackspaceEmpty1.id="chkBackspaceEmpty1";
	chkBackspaceEmpty1.checked=false;
	var chkBackspaceEmptyTitle1=document.createTextNode("<-");
	var chkInchesKeyboard1=document.createElement("input");
	chkInchesKeyboard1.type="checkbox";
	chkInchesKeyboard1.id="chkInchesKeyboard1";
	chkInchesKeyboard1.checked=netspace.computer.blnInchesKeyboardMode;
	chkInchesKeyboard1.onchange=function(){
		netspace.computer.blnInchesKeyboardMode=this.checked;
		if(undefined!=netspace.computer.inchesKeyboard&&null!=netspace.computer.inchesKeyboard)
			netspace.computer.inchesKeyboard.chkInchesChanged();
	};
	var chkInchesKeyboardTitle1=document.createTextNode("键盘");
	var btnArtificialEscape1=document.createElement("button");
	btnArtificialEscape1.id="btnArtificialEscape1";
	btnArtificialEscape1.style="width:50px;height:50px";
	btnArtificialEscape1.innerText="Esc";
	btnArtificialEscape1.onclick=function(){
		var newEvent=netspace.computer.emptyKeyEvent();
		newEvent.key="Escape";newEvent.code="Escape";
		netspace.computer.onKeyDown(newEvent);
		txtArtificialTextarea1.value="";
		txtArtificialTextarea2.value="";
		netspace.computer.txtArtificialTextarea_blnOninputDone=false;
	};
	var txtArtificialTextarea1=document.createElement("textarea");
	//mhdmodiff--
	//txtArtificialTextarea1.type="text";
	txtArtificialTextarea1.id="txtArtificialTextarea1";
	txtArtificialTextarea1.rows=1;
	netspace.computer.txtArtificialTextarea_blnOninputDone=false;
	txtArtificialTextarea1.oninput=function(evtInput){
		if(0==this.value.length||10==this.value.charCodeAt(0)||13==this.value.charCodeAt(0)){netspace.computer.txtArtificialTextarea_blnOninputDone=false;this.value="";return;}
		if(undefined!=chrValue)
			alert(chrValue+":"+chrValue.charCodeAt(0));
		netspace.computer.txtArtificialTextarea_blnOninputDone=false;
		var chrValue=this.value[0];
		if(chrValue.charCodeAt(0)>255){
			chrValue=this.value;/*inches from OS input systems*/
		}
		if(undefined!=chrValue&&null!=chrValue){
			var newEvent=netspace.computer.emptyKeyEvent();
			newEvent.key=chrValue;newEvent.code=chrValue;
			var intCode=chrValue.charCodeAt(0);
			if(intCode>=65&&intCode<=90)newEvent.shiftKey=true;
			if("string"==typeof(chrValue)&&1==chrValue.length){
				netspace.computer.onKeyDown(newEvent);
				this.value="";
				netspace.computer.txtArtificialTextarea_blnOninputDone=true;
			}
			if("string"==typeof(chrValue)&&chrValue.length>1&&chrValue.charCodeAt(0)>255){
				netspace.computer.onKeyDown(newEvent);
				this.value="";
				netspace.computer.txtArtificialTextarea_blnOninputDone=true;
			}
		}
	};
	txtArtificialTextarea1.onkeyup=function(evtKey){this.value="";netspace.computer.txtArtificialTextarea_blnOninputDone=true;};
	txtArtificialTextarea1.onkeydown=function(evtKey){
                var whichKeyCode=evtKey.keyCode||evtKey.which;
                if(undefined!=whichKeyCode&&0!=whichKeyCode&&229!=whichKeyCode){ 
			var strKey;
			switch(whichKeyCode){
				case 8:strKey="Backspace";break;
				case 13:strKey="Enter";break;
				case 16:strKey="Shift";break;
				case 20:strKey="CapsLock";break;
				case 27:strKey="Escape";break;
				case 37:strKey="ArrowLeft";break;
				case 38:strKey="ArrowUp";break;
				case 39:strKey="ArrowRight";break;
				case 40:strKey="ArrowDown";break;
				default:return;break;
			}
			var newEvent=netspace.computer.emptyKeyEvent();
			newEvent.key=strKey;newEvent.code=strKey;
			netspace.computer.onKeyDown(newEvent);
			netspace.computer.txtArtificialTextarea_blnOninputDone=true;
			this.value="";
			return;
                    }
		if(undefined==whichKeyCode){netspace.computer.txtArtificialTextarea_blnOninputDone=false;return;};
		if(true==chkBackspaceEmpty1.checked&&(0==whichKeyCode||229==whichKeyCode)&&0==this.value.length&&false==netspace.computer.txtArtificialTextarea_blnOninputDone){
			var strKey;
			strKey="Backspace";
			var newEvent=netspace.computer.emptyKeyEvent();
			newEvent.key=strKey;newEvent.code=strKey;
			netspace.computer.onKeyDown(newEvent);
			
			this.value="";
			netspace.computer.txtArtificialTextarea_blnOninputDone=false;
			return;
		}
		netspace.computer.txtArtificialTextarea_blnOninputDone=false;
		this.value="";
	};
	txtArtificialTextarea1.onfocus=function(){
		window.onkeydown=null;
	};
	txtArtificialTextarea1.onblur=function(){
		window.onkeydown=netspace.onKeyDown;
	};
	var chkBackspaceEmpty2=document.createElement("input");
	chkBackspaceEmpty2.type="checkbox";
	chkBackspaceEmpty2.id="chkBackspaceEmpty2";
	chkBackspaceEmpty2.checked=false;
	var chkBackspaceEmptyTitle2=document.createTextNode("<-");
	var chkInchesKeyboard2=document.createElement("input");
	chkInchesKeyboard2.type="checkbox";
	chkInchesKeyboard2.id="chkInchesKeyboard2";
	chkInchesKeyboard2.checked=netspace.computer.blnInchesKeyboardMode;
	chkInchesKeyboard2.onchange=function(){
		netspace.computer.blnInchesKeyboardMode=this.checked;
		if(undefined!=netspace.computer.inchesKeyboard&&null!=netspace.computer.inchesKeyboard)
			netspace.computer.inchesKeyboard.chkInchesChanged();
	};
	var chkInchesKeyboardTitle2=document.createTextNode("键盘");
	var btnArtificialEscape2=document.createElement("button");
	btnArtificialEscape2.id="btnArtificialEscape2";
	btnArtificialEscape2.style="width:50px;height:50px";
	btnArtificialEscape2.innerText="Esc";
	btnArtificialEscape2.onclick=btnArtificialEscape1.onclick;
	var txtArtificialTextarea2=document.createElement("textarea");
	//mhdmodiff--
	//txtArtificialTextarea2.type="text";
	txtArtificialTextarea2.id="txtArtificialTextarea2";
	txtArtificialTextarea2.rows=1;
	txtArtificialTextarea2.oninput=txtArtificialTextarea1.oninput;
	txtArtificialTextarea2.onkeyup=function(evtKey){this.value="";netspace.computer.txtArtificialTextarea_blnOninputDone=true;};
	txtArtificialTextarea2.onkeydown=function(evtKey){
                var whichKeyCode=evtKey.keyCode||evtKey.which;
                if(undefined!=whichKeyCode&&0!=whichKeyCode&&229!=whichKeyCode){ 
			var strKey;
			switch(whichKeyCode){
				case 8:strKey="Backspace";break;
				case 13:strKey="Enter";break;
				case 16:strKey="Shift";break;
				case 20:strKey="CapsLock";break;
				case 27:strKey="Escape";break;
				case 37:strKey="ArrowLeft";break;
				case 38:strKey="ArrowUp";break;
				case 39:strKey="ArrowRight";break;
				case 40:strKey="ArrowDown";break;
				default:return;break;
			}
			var newEvent=netspace.computer.emptyKeyEvent();
			newEvent.key=strKey;newEvent.code=strKey;
			netspace.computer.onKeyDown(newEvent);
			netspace.computer.txtArtificialTextarea_blnOninputDone=true;
			this.value="";
			return;
                    }
		if(undefined==whichKeyCode){netspace.computer.txtArtificialTextarea_blnOninputDone=false;return;};
		if(true==chkBackspaceEmpty2.checked&&(0==whichKeyCode||229==whichKeyCode)&&0==this.value.length&&false==netspace.computer.txtArtificialTextarea_blnOninputDone){
			var strKey;
			strKey="Backspace";
			var newEvent=netspace.computer.emptyKeyEvent();
			newEvent.key=strKey;newEvent.code=strKey;
			netspace.computer.onKeyDown(newEvent);
			
			this.value="";
			netspace.computer.txtArtificialTextarea_blnOninputDone=false;
			return;
		}
		netspace.computer.txtArtificialTextarea_blnOninputDone=false;
		this.value="";
	};
	txtArtificialTextarea2.onfocus=txtArtificialTextarea1.onfocus;
	txtArtificialTextarea2.onblur=txtArtificialTextarea1.onblur;
	if(null==divArtificialTextarea1){
		divArtificialTextarea1=document.createElement("div");
		divArtificialTextarea1.id="divArtificialTextarea1";
		divArtificialTextarea1.innerHTML="<center></center>";
	}
	if(null==divArtificialTextarea2){
		divArtificialTextarea2=document.createElement("div");
		divArtificialTextarea2.id="divArtificialTextarea2";
		divArtificialTextarea2.innerHTML="<center></center>";
	}
	if(null==divBtnLockComputerScreenCanvas){
		divBtnLockComputerScreenCanvas=document.createElement("div");
		divBtnLockComputerScreenCanvas.id="divBtnLockComputerScreenCanvas";
		divBtnLockComputerScreenCanvas.appendChild(btnLockComputerScreenCanvas);
		var chkTouchscreenKeyboard=document.createElement("input");
		chkTouchscreenKeyboard.type="checkbox";
		chkTouchscreenKeyboard.id="chkTouchscreenKeyboard";
		chkTouchscreenKeyboard.checked=true;
		chkTouchscreenKeyboard.onchange=function(){
			if(true==this.checked){
				divScreenCanvasContent.firstElementChild.appendChild(divTouchscreenKeyboard);
			}else{
				divScreenCanvasContent.firstElementChild.removeChild(divTouchscreenKeyboard);
			}

		};
		var chkTouchscreenKeyboardTitle=document.createTextNode("Keyboard");
		divBtnLockComputerScreenCanvas.appendChild(chkTouchscreenKeyboard);
		divBtnLockComputerScreenCanvas.appendChild(chkTouchscreenKeyboardTitle);
		var chkTouchscreenTouchpad=document.createElement("input");
		chkTouchscreenTouchpad.type="checkbox";
		chkTouchscreenTouchpad.id="chkTouchscreenTouchpad";
		chkTouchscreenTouchpad.checked=true;
		chkTouchscreenTouchpad.onchange=function(){
			if(true==this.checked){
				divScreenCanvasContent.firstElementChild.appendChild(divTouchscreenTouchpad);
			}else{
				divScreenCanvasContent.firstElementChild.removeChild(divTouchscreenTouchpad);
			}

		};
		var chkTouchscreenTouchpadTitle=document.createTextNode("Touchpad");
		divBtnLockComputerScreenCanvas.appendChild(chkTouchscreenTouchpad);
		divBtnLockComputerScreenCanvas.appendChild(chkTouchscreenTouchpadTitle);
		var chkArtificialTextfield=document.createElement("input");
		chkArtificialTextfield.type="checkbox";
		chkArtificialTextfield.id="chkArtificialTextfield";
		chkArtificialTextfield.checked=false;
		chkArtificialTextfield.onchange=function(){
			if(true==this.checked){
				divArtificialTextarea1.firstElementChild.appendChild(btnArtificialEscape1);
				divArtificialTextarea1.firstElementChild.appendChild(txtArtificialTextarea1);
				divArtificialTextarea1.firstElementChild.appendChild(chkBackspaceEmpty1);
				divArtificialTextarea1.firstElementChild.appendChild(chkBackspaceEmptyTitle1);
				divArtificialTextarea1.firstElementChild.appendChild(chkInchesKeyboard1);
				divArtificialTextarea1.firstElementChild.appendChild(chkInchesKeyboardTitle1);
   				chkInchesKeyboard1.checked=netspace.computer.blnInchesKeyboardMode;
				divArtificialTextarea2.firstElementChild.appendChild(btnArtificialEscape2);
				divArtificialTextarea2.firstElementChild.appendChild(txtArtificialTextarea2);
				divArtificialTextarea2.firstElementChild.appendChild(chkBackspaceEmpty2);
				divArtificialTextarea2.firstElementChild.appendChild(chkBackspaceEmptyTitle2);
				divArtificialTextarea2.firstElementChild.appendChild(chkInchesKeyboard2);
				divArtificialTextarea2.firstElementChild.appendChild(chkInchesKeyboardTitle2);
   				chkInchesKeyboard2.checked=netspace.computer.blnInchesKeyboardMode;
			}
			else{
				divArtificialTextarea1.firstElementChild.removeChild(btnArtificialEscape1);
				divArtificialTextarea1.firstElementChild.removeChild(txtArtificialTextarea1);
				divArtificialTextarea1.firstElementChild.removeChild(chkBackspaceEmpty1);
				divArtificialTextarea1.firstElementChild.removeChild(chkBackspaceEmptyTitle1);
				divArtificialTextarea1.firstElementChild.removeChild(chkInchesKeyboard1);
				divArtificialTextarea1.firstElementChild.removeChild(chkInchesKeyboardTitle1);
				divArtificialTextarea2.firstElementChild.removeChild(btnArtificialEscape2);
				divArtificialTextarea2.firstElementChild.removeChild(txtArtificialTextarea2);
				divArtificialTextarea2.firstElementChild.removeChild(chkBackspaceEmpty2);
				divArtificialTextarea2.firstElementChild.removeChild(chkBackspaceEmptyTitle2);
				divArtificialTextarea2.firstElementChild.removeChild(chkInchesKeyboard2);
				divArtificialTextarea2.firstElementChild.removeChild(chkInchesKeyboardTitle2);
			}
		};
		var chkArtificialTextfieldTitle=document.createTextNode("Artificial textarea");
		divBtnLockComputerScreenCanvas.appendChild(chkArtificialTextfield);
		divBtnLockComputerScreenCanvas.appendChild(chkArtificialTextfieldTitle);

		var chkShaderThinkpad2=document.createElement("input");
		chkShaderThinkpad2.type="checkbox";
		chkShaderThinkpad2.id="chkShaderThinkpad2";
		chkShaderThinkpad2.checked=netspace.chkShaderThinkpad.checked;
		chkShaderThinkpad2.onchange=function(){
			netspace.chkShaderThinkpad.checked=this.checked;
			chkShaderThinkpadChanged();
		};
		divBtnLockComputerScreenCanvas.appendChild(chkShaderThinkpad2);
		var chkShaderThinkpad2Title=document.createTextNode("Shader thinkpad");
		divBtnLockComputerScreenCanvas.appendChild(chkShaderThinkpad2Title);

		netspace.chk3dMouseMode.checked=false;
		var chk3dMouseMode2=document.createElement("input");
		chk3dMouseMode2.type="checkbox";
		chk3dMouseMode2.id="chk3dMouseMode2";
		chk3dMouseMode2.checked=netspace.chk3dMouseMode.checked;
		chk3dMouseMode2.onchange=function(){
			netspace.chk3dMouseMode.checked=this.checked;
		};
		divBtnLockComputerScreenCanvas.appendChild(chk3dMouseMode2);
		var chk3dMouseModeTitle=document.createTextNode("3d mouse");
		divBtnLockComputerScreenCanvas.appendChild(chk3dMouseModeTitle);
		
	}

	var divTouchscreenKeyboard=document.getElementById("divTouchscreenKeyboard");
	if(null==divTouchscreenKeyboard){
		divTouchscreenKeyboard=document.createElement("div");
		divTouchscreenKeyboard.innerHTML="<center></center>";
		divTouchscreenKeyboard.id="divTouchscreenKeyboard";
		divTouchscreenKeyboard.appendChild(keyboardCanvas);
		divTouchscreenKeyboard.onmousedown=function(evtMouse){
			var keyboardCanvas=netspace.computer.keyboardCanvas;
			divTouchscreenKeyboard.innerHTML="<center></center>";
			divTouchscreenKeyboard.id="divTouchscreenKeyboard";
			divTouchscreenKeyboard.appendChild(keyboardCanvas);
		};
	}
	var touchpadCanvas=netspace.computer.touchpadCanvas;
	var divTouchscreenTouchpad=document.getElementById("divTouchscreenTouchpad");
	if(null==divTouchscreenTouchpad){
		divTouchscreenTouchpad=document.createElement("div");
		divTouchscreenTouchpad.innerHTML="<center></center>";
		divTouchscreenTouchpad.id="divTouchscreenTouchpad";
		divTouchscreenTouchpad.appendChild(touchpadCanvas);
	}

	var divTxtFunFunFunFileSection=document.getElementById("divTxtFunFunFunFileSection");
	//mhdmodiff
	//var maincanvas=document.getElementById("maincanvas");
	var computerScreen=netspace.computer.screenCanvas;

	var divScreenCanvasContent=document.getElementById("divScreenCanvasContent");
	if(null==divScreenCanvasContent){
		divScreenCanvasContent=document.createElement("div");
		divScreenCanvasContent.id="divScreenCanvasContent";
		divScreenCanvasContent.innerHTML="<center></center>";
	}

	if(true==blnComputerScreenCanvasMode){
		//mhdmodiff
		//divMenu.style.display="none";
		//maincanvas.style.display="none";
		divScreenCanvasContent.firstElementChild.appendChild(divArtificialTextarea1);
		divScreenCanvasContent.firstElementChild.appendChild(computerScreen);
		divScreenCanvasContent.firstElementChild.appendChild(divArtificialTextarea2);
		divScreenCanvasContent.firstElementChild.appendChild(divBtnLockComputerScreenCanvas);
		divScreenCanvasContent.firstElementChild.appendChild(divTouchscreenKeyboard);
		divScreenCanvasContent.firstElementChild.appendChild(divTouchscreenTouchpad);
		//mhdmodiff
		//divCanvas.appendChild(divScreenCanvasContent);
	}
	else{
		//mhdmodiff
		//maincanvas.style.display="";
		//netspace.chk3dMouseMode.checked=true;
		divScreenCanvasContent.firstElementChild.removeChild(divArtificialTextarea1);
		divScreenCanvasContent.firstElementChild.removeChild(computerScreen);
		divScreenCanvasContent.firstElementChild.removeChild(divArtificialTextarea2);
		divScreenCanvasContent.firstElementChild.removeChild(divBtnLockComputerScreenCanvas);
		try{
			divScreenCanvasContent.firstElementChild.removeChild(divTouchscreenKeyboard);
			divScreenCanvasContent.firstElementChild.removeChild(divTouchscreenTouchpad);
		}catch(xcp){}
		//mhdmodiff
		//divCanvas.removeChild(divScreenCanvasContent);
		if(undefined!=netspace.extensionManager&&null!=netspace.extensionManager)
			netspace.extensionManager.appendChild("ComputerExtension",btnLockComputerScreenCanvas);
		else divTxtFunFunFunFileSection.appendChild(btnLockComputerScreenCanvas);
		divMenu.style.display="";
	}
};
Computer.prototype.netspacesComputerTextScreenDivMode=function(blnComputerTextScreenDivMode,blnTextDeencoder){
	if(true==blnComputerTextScreenDivMode){
		this.blnRenderScreen=false;
		this.blnRenderTextures=false;
		if(false==blnTextDeencoder)
			this.intRenderText=1;
		else{
			this.arrHTMLtextScreenBuffer=new Uint8Array(3*90*this.intScreenWidth_text*this.intScreenHeight_text);
			this.textEncoder=new TextEncoder();
			this.textDecoder=new TextDecoder();
			this.intRenderText=2;
		}
	}else{
		this.blnRenderScreen=true;
		if(true==netspace.blnLoad3dWorldsOnStart)
			this.blnRenderTextures=true;
		else this.blnRenderTextures=false;
		this.intRenderText=0;
	}
	//mhdmodiff
	//var divMenu=document.getElementById("divMenu");
	//var divCanvas=document.getElementById("divCanvas");
	var btnLockComputerTextScreenDiv;
	if(false==blnTextDeencoder)
		btnLockComputerTextScreenDiv=document.getElementById("btnLockComputerTextScreenDiv");
	else btnLockComputerTextScreenDiv=document.getElementById("btnLockComputerTextScreenTextDeencoderDiv");
	var divArtificialTextarea1=document.getElementById("divArtificialTextarea1");
	var divArtificialTextarea2=document.getElementById("divArtificialTextarea2");
	var divBtnLockTextScreenDiv=document.getElementById("divBtnLockTextScreenDiv");
	var keyboardCanvas=netspace.computer.keyboardCanvas;
	var chkTouchscreenKeyboard;
	var chkTouchscreenTouchpad;
	var chkBackspaceEmpty1=document.createElement("input");
	chkBackspaceEmpty1.type="checkbox";
	chkBackspaceEmpty1.id="chkBackspaceEmpty";
	chkBackspaceEmpty1.checked=false;
	var chkBackspaceEmptyTitle1=document.createTextNode("<-");
	var chkInchesKeyboard1=document.createElement("input");
	chkInchesKeyboard1.type="checkbox";
	chkInchesKeyboard1.id="chkInchesKeyboard1";
	chkInchesKeyboard1.checked=netspace.computer.blnInchesKeyboardMode;
	chkInchesKeyboard1.onchange=function(){
		netspace.computer.blnInchesKeyboardMode=this.checked;
		if(undefined!=netspace.computer.inchesKeyboard&&null!=netspace.computer.inchesKeyboard)
			netspace.computer.inchesKeyboard.chkInchesChanged();
	};
	var chkInchesKeyboardTitle1=document.createTextNode("键盘");
	var btnArtificialEscape1=document.createElement("button");
	btnArtificialEscape1.id="btnArtificialEscape1";
	btnArtificialEscape1.style="width:50px;height:50px";
	btnArtificialEscape1.innerText="Esc";
	btnArtificialEscape1.onclick=function(){
		var newEvent=netspace.computer.emptyKeyEvent();
		newEvent.key="Escape";newEvent.code="Escape";
		netspace.computer.onKeyDown(newEvent);
		txtArtificialTextarea1.value="";
		txtArtificialTextarea2.value="";
		netspace.computer.txtArtificialTextarea_blnOninputDone=false;
	};
	var txtArtificialTextarea1=document.createElement("textarea");
	//mhdmodiff--
	//txtArtificialTextarea1.type="text";
	txtArtificialTextarea1.id="txtArtificialTextarea1";
	txtArtificialTextarea1.rows=1;
	netspace.computer.txtArtificialTextarea_blnOninputDone=false;
	txtArtificialTextarea1.oninput=function(evtInput){
		if(0==this.value.length||10==this.value.charCodeAt(0)||13==this.value.charCodeAt(0)){netspace.computer.txtArtificialTextarea_blnOninputDone=false;this.value="";return;}
		if(undefined!=chrValue)
			alert(chrValue+":"+chrValue.charCodeAt(0));
		netspace.computer.txtArtificialTextarea_blnOninputDone=false;
		var chrValue=this.value[0];
		if(chrValue.charCodeAt(0)>255){
			chrValue=this.value;/*inches from OS input systems*/
		}
		if(undefined!=chrValue&&null!=chrValue){
			var newEvent=netspace.computer.emptyKeyEvent();
			newEvent.key=chrValue;newEvent.code=chrValue;
			var intCode=chrValue.charCodeAt(0);
			if(intCode>=65&&intCode<=90)newEvent.shiftKey=true;
			if("string"==typeof(chrValue)&&1==chrValue.length){
				netspace.computer.onKeyDown(newEvent);
				this.value="";
				netspace.computer.txtArtificialTextarea_blnOninputDone=true;
			}
			if("string"==typeof(chrValue)&&chrValue.length>1&&chrValue.charCodeAt(0)>255){
				netspace.computer.onKeyDown(newEvent);
				this.value="";
				netspace.computer.txtArtificialTextarea_blnOninputDone=true;
			}
		}
	};
	txtArtificialTextarea1.onkeyup=function(evtKey){this.value="";netspace.computer.txtArtificialTextarea_blnOninputDone=true;};
	txtArtificialTextarea1.onkeydown=function(evtKey){
                var whichKeyCode=evtKey.keyCode||evtKey.which;
                if(undefined!=whichKeyCode&&0!=whichKeyCode&&229!=whichKeyCode){ 
			var strKey;
			switch(whichKeyCode){
				case 8:strKey="Backspace";break;
				case 13:strKey="Enter";break;
				case 16:strKey="Shift";break;
				case 20:strKey="CapsLock";break;
				case 27:strKey="Escape";break;
				case 37:strKey="ArrowLeft";break;
				case 38:strKey="ArrowUp";break;
				case 39:strKey="ArrowRight";break;
				case 40:strKey="ArrowDown";break;
				default:return;break;
			}
			var newEvent=netspace.computer.emptyKeyEvent();
			newEvent.key=strKey;newEvent.code=strKey;
			netspace.computer.onKeyDown(newEvent);
			netspace.computer.txtArtificialTextarea_blnOninputDone=true;
			this.value="";
			return;
                    }
		if(undefined==whichKeyCode){netspace.computer.txtArtificialTextarea_blnOninputDone=false;return;};
		if(true==chkBackspaceEmpty1.checked&&(0==whichKeyCode||229==whichKeyCode)&&0==this.value.length&&false==netspace.computer.txtArtificialTextarea_blnOninputDone){
			var strKey;
			strKey="Backspace";
			var newEvent=netspace.computer.emptyKeyEvent();
			newEvent.key=strKey;newEvent.code=strKey;
			netspace.computer.onKeyDown(newEvent);
			
			this.value="";
			netspace.computer.txtArtificialTextarea_blnOninputDone=false;
			return;
		}
		netspace.computer.txtArtificialTextarea_blnOninputDone=false;
		this.value="";
	};
	txtArtificialTextarea1.onfocus=function(){
		window.onkeydown=null;
	};
	txtArtificialTextarea1.onblur=function(){
		window.onkeydown=netspace.onKeyDown;
	};
	var chkBackspaceEmpty2=document.createElement("input");
	chkBackspaceEmpty2.type="checkbox";
	chkBackspaceEmpty2.id="chkBackspaceEmpty2";
	chkBackspaceEmpty2.checked=false;
	var chkBackspaceEmptyTitle2=document.createTextNode("<-");
	var chkInchesKeyboard2=document.createElement("input");
	chkInchesKeyboard2.type="checkbox";
	chkInchesKeyboard2.id="chkInchesKeyboard2";
	chkInchesKeyboard2.checked=netspace.computer.blnInchesKeyboardMode;
	chkInchesKeyboard2.onchange=function(){
		netspace.computer.blnInchesKeyboardMode=this.checked;
		if(undefined!=netspace.computer.inchesKeyboard&&null!=netspace.computer.inchesKeyboard)
			netspace.computer.inchesKeyboard.chkInchesChanged();
	};
	var chkInchesKeyboardTitle2=document.createTextNode("键盘");
	var btnArtificialEscape2=document.createElement("button");
	btnArtificialEscape2.id="btnArtificialEscape2";
	btnArtificialEscape2.style="width:50px;height:50px";
	btnArtificialEscape2.innerText="Esc";
	btnArtificialEscape2.onclick=btnArtificialEscape1.onclick;
	var txtArtificialTextarea2=document.createElement("textarea");
	//mhdmodiff--
	//txtArtificialTextarea2.type="text";
	txtArtificialTextarea2.id="txtArtificialTextarea2";
	txtArtificialTextarea2.rows=1;
	txtArtificialTextarea2.oninput=txtArtificialTextarea1.oninput;
	txtArtificialTextarea2.onkeyup=function(evtKey){this.value="";netspace.computer.txtArtificialTextarea_blnOninputDone=true;};
	txtArtificialTextarea2.onkeydown=function(evtKey){
                var whichKeyCode=evtKey.keyCode||evtKey.which;
                if(undefined!=whichKeyCode&&0!=whichKeyCode&&229!=whichKeyCode){ 
			var strKey;
			switch(whichKeyCode){
				case 8:strKey="Backspace";break;
				case 13:strKey="Enter";break;
				case 16:strKey="Shift";break;
				case 20:strKey="CapsLock";break;
				case 27:strKey="Escape";break;
				case 37:strKey="ArrowLeft";break;
				case 38:strKey="ArrowUp";break;
				case 39:strKey="ArrowRight";break;
				case 40:strKey="ArrowDown";break;
				default:return;break;
			}
			var newEvent=netspace.computer.emptyKeyEvent();
			newEvent.key=strKey;newEvent.code=strKey;
			netspace.computer.onKeyDown(newEvent);
			netspace.computer.txtArtificialTextarea_blnOninputDone=true;
			this.value="";
			return;
                    }
		if(undefined==whichKeyCode){netspace.computer.txtArtificialTextarea_blnOninputDone=false;return;};
		if(true==chkBackspaceEmpty2.checked&&(0==whichKeyCode||229==whichKeyCode)&&0==this.value.length&&false==netspace.computer.txtArtificialTextarea_blnOninputDone){
			var strKey;
			strKey="Backspace";
			var newEvent=netspace.computer.emptyKeyEvent();
			newEvent.key=strKey;newEvent.code=strKey;
			netspace.computer.onKeyDown(newEvent);
			
			this.value="";
			netspace.computer.txtArtificialTextarea_blnOninputDone=false;
			return;
		}
		netspace.computer.txtArtificialTextarea_blnOninputDone=false;
		this.value="";
	};
	txtArtificialTextarea2.onfocus=txtArtificialTextarea1.onfocus;
	txtArtificialTextarea2.onblur=txtArtificialTextarea1.onblur;
	if(null==divArtificialTextarea1){
		divArtificialTextarea1=document.createElement("div");
		divArtificialTextarea1.id="divArtificialTextarea1";
		divArtificialTextarea1.innerHTML="<center></center>";
	}
	if(null==divArtificialTextarea2){
		divArtificialTextarea2=document.createElement("div");
		divArtificialTextarea2.id="divArtificialTextarea2";
		divArtificialTextarea2.innerHTML="<center></center>";
	}
	if(null==divBtnLockTextScreenDiv){
		divBtnLockTextScreenDiv=document.createElement("div");
		divBtnLockTextScreenDiv.id="divBtnLockTextScreenDiv";
		divBtnLockTextScreenDiv.appendChild(btnLockComputerTextScreenDiv);

		var chkTouchscreenKeyboard=document.createElement("input");
		chkTouchscreenKeyboard.type="checkbox";
		chkTouchscreenKeyboard.id="chkTouchscreenKeyboard";
		chkTouchscreenKeyboard.checked=true;
		chkTouchscreenKeyboard.onchange=function(){
			if(true==this.checked){
				divTextScreenContent.firstElementChild.appendChild(divTouchscreenKeyboard);
			}else{
				divTextScreenContent.firstElementChild.removeChild(divTouchscreenKeyboard);
			}

		};
		var chkTouchscreenKeyboardTitle=document.createTextNode("Keyboard");
		divBtnLockTextScreenDiv.appendChild(chkTouchscreenKeyboard);
		divBtnLockTextScreenDiv.appendChild(chkTouchscreenKeyboardTitle);
		var chkTouchscreenTouchpad=document.createElement("input");
		chkTouchscreenTouchpad.type="checkbox";
		chkTouchscreenTouchpad.id="chkTouchscreenTouchpad";
		chkTouchscreenTouchpad.checked=true;
		chkTouchscreenTouchpad.onchange=function(){
			if(true==this.checked){
				divTextScreenContent.firstElementChild.appendChild(divTouchscreenTouchpad);
			}else{
				divTextScreenContent.firstElementChild.removeChild(divTouchscreenTouchpad);
			}

		};
		var chkTouchscreenTouchpadTitle=document.createTextNode("Touchpad");
		divBtnLockTextScreenDiv.appendChild(chkTouchscreenTouchpad);
		divBtnLockTextScreenDiv.appendChild(chkTouchscreenTouchpadTitle);
		var chkArtificialTextfield=document.createElement("input");
		chkArtificialTextfield.type="checkbox";
		chkArtificialTextfield.id="chkArtificialTextfield";
		chkArtificialTextfield.checked=false;
		chkArtificialTextfield.onchange=function(){
			if(true==this.checked){
				divArtificialTextarea1.firstElementChild.appendChild(btnArtificialEscape1);
				divArtificialTextarea1.firstElementChild.appendChild(txtArtificialTextarea1);
				divArtificialTextarea1.firstElementChild.appendChild(chkBackspaceEmpty1);
				divArtificialTextarea1.firstElementChild.appendChild(chkBackspaceEmptyTitle1);
				divArtificialTextarea1.firstElementChild.appendChild(chkInchesKeyboard1);
				divArtificialTextarea1.firstElementChild.appendChild(chkInchesKeyboardTitle1);
   				chkInchesKeyboard1.checked=netspace.computer.blnInchesKeyboardMode;
				divArtificialTextarea2.firstElementChild.appendChild(btnArtificialEscape2);
				divArtificialTextarea2.firstElementChild.appendChild(txtArtificialTextarea2);
				divArtificialTextarea2.firstElementChild.appendChild(chkBackspaceEmpty2);
				divArtificialTextarea2.firstElementChild.appendChild(chkBackspaceEmptyTitle2);
				divArtificialTextarea2.firstElementChild.appendChild(chkInchesKeyboard2);
				divArtificialTextarea2.firstElementChild.appendChild(chkInchesKeyboardTitle2);
   				chkInchesKeyboard2.checked=netspace.computer.blnInchesKeyboardMode;
			}
			else{
				divArtificialTextarea1.firstElementChild.removeChild(btnArtificialEscape1);
				divArtificialTextarea1.firstElementChild.removeChild(txtArtificialTextarea1);
				divArtificialTextarea1.firstElementChild.removeChild(chkBackspaceEmpty1);
				divArtificialTextarea1.firstElementChild.removeChild(chkBackspaceEmptyTitle1);
				divArtificialTextarea1.firstElementChild.removeChild(chkInchesKeyboard1);
				divArtificialTextarea1.firstElementChild.removeChild(chkInchesKeyboardTitle1);
				divArtificialTextarea2.firstElementChild.removeChild(btnArtificialEscape2);
				divArtificialTextarea2.firstElementChild.removeChild(txtArtificialTextarea2);
				divArtificialTextarea2.firstElementChild.removeChild(chkBackspaceEmpty2);
				divArtificialTextarea2.firstElementChild.removeChild(chkBackspaceEmptyTitle2);
				divArtificialTextarea2.firstElementChild.removeChild(chkInchesKeyboard2);
				divArtificialTextarea2.firstElementChild.removeChild(chkInchesKeyboardTitle2);
			}
		};
		var chkArtificialTextfieldTitle=document.createTextNode("Artificial textarea");
		divBtnLockTextScreenDiv.appendChild(chkArtificialTextfield);
		divBtnLockTextScreenDiv.appendChild(chkArtificialTextfieldTitle);

		var chkShaderThinkpad2=document.createElement("input");
		chkShaderThinkpad2.type="checkbox";
		chkShaderThinkpad2.id="chkShaderThinkpad2";
		chkShaderThinkpad2.checked=netspace.chkShaderThinkpad.checked;
		chkShaderThinkpad2.onchange=function(){
			netspace.chkShaderThinkpad.checked=this.checked;
			chkShaderThinkpadChanged();
		};
		divBtnLockTextScreenDiv.appendChild(chkShaderThinkpad2);
		var chkShaderThinkpad2Title=document.createTextNode("Shader thinkpad");
		divBtnLockTextScreenDiv.appendChild(chkShaderThinkpad2Title);

		netspace.chk3dMouseMode.checked=false;
		var chk3dMouseMode2=document.createElement("input");
		chk3dMouseMode2.type="checkbox";
		chk3dMouseMode2.id="chk3dMouseMode2";
		chk3dMouseMode2.checked=netspace.chk3dMouseMode.checked;
		chk3dMouseMode2.onchange=function(){
			netspace.chk3dMouseMode.checked=this.checked;
		};
		divBtnLockTextScreenDiv.appendChild(chk3dMouseMode2);
		var chk3dMouseModeTitle=document.createTextNode("3d mouse");
		divBtnLockTextScreenDiv.appendChild(chk3dMouseModeTitle);

	}
	var divTouchscreenKeyboard=document.getElementById("divTouchscreenKeyboard");
	if(null==divTouchscreenKeyboard){
		divTouchscreenKeyboard=document.createElement("div");
		divTouchscreenKeyboard.innerHTML="<center></center>";
		divTouchscreenKeyboard.id="divTouchscreenKeyboard";
		divTouchscreenKeyboard.appendChild(keyboardCanvas);
		divTouchscreenKeyboard.onmousedown=function(evtMouse){
			var keyboardCanvas=netspace.computer.keyboardCanvas;
			divTouchscreenKeyboard.innerHTML="<center></center>";
			divTouchscreenKeyboard.id="divTouchscreenKeyboard";
			divTouchscreenKeyboard.appendChild(keyboardCanvas);
		};
	}
	var touchpadCanvas=netspace.computer.touchpadCanvas;
	var divTouchscreenTouchpad=document.getElementById("divTouchscreenTouchpad");
	if(null==divTouchscreenTouchpad){
		divTouchscreenTouchpad=document.createElement("div");
		divTouchscreenTouchpad.innerHTML="<center></center>";
		divTouchscreenTouchpad.id="divTouchscreenTouchpad";
		divTouchscreenTouchpad.appendChild(touchpadCanvas);
	}
	var divTxtFunFunFunFileSection=document.getElementById("divTxtFunFunFunFileSection");
	//mhdmodiff
	//var maincanvas=document.getElementById("maincanvas");
	var divComputerTextScreen=document.getElementById("divComputerTextScreen");
	var divTextScreenContent=document.getElementById("divTextScreenContent");
	if(null==divTextScreenContent){
		divTextScreenContent=document.createElement("div");
		divTextScreenContent.id="divTextScreenContent";
		divTextScreenContent.innerHTML="<center></center>";
	}
	if(true==blnComputerTextScreenDivMode){
		this.prevOnResize=netspace.onResize;
		//mhdmodiff
		//window.onresize=this.newOnResize;
		//this.newOnResize(null);
		//mhdmodiff	
		//divMenu.style.display="none";
		//maincanvas.style.display="none";
		divTextScreenContent.firstElementChild.appendChild(divArtificialTextarea1);
		divTextScreenContent.firstElementChild.appendChild(this.divComputerTextScreen);
		divTextScreenContent.firstElementChild.appendChild(divArtificialTextarea2);
		divTextScreenContent.firstElementChild.appendChild(divBtnLockTextScreenDiv);
		divTextScreenContent.firstElementChild.appendChild(divTouchscreenKeyboard);
		divTextScreenContent.firstElementChild.appendChild(divTouchscreenTouchpad);
		//mhdmodiff
		//divCanvas.appendChild(divTextScreenContent);
	}
	else{
		//mhdmodiff
		//window.onresize=this.prevOnResize;
		//this.prevOnResize();
		//this.newOnResize(null);
		netspace.chk3dMouseMode.checked=true;
		divTextScreenContent.firstElementChild.removeChild(divArtificialTextarea1);
		divTextScreenContent.firstElementChild.removeChild(this.divComputerTextScreen);
		divTextScreenContent.firstElementChild.removeChild(divArtificialTextarea2);
		divTextScreenContent.firstElementChild.removeChild(divBtnLockTextScreenDiv);
		try{
			divTextScreenContent.firstElementChild.removeChild(divTouchscreenKeyboard);
			divTextScreenContent.firstElementChild.removeChild(divTouchscreenTouchpad);
		}catch(xcp){}
		//mhdmodiff
		//maincanvas.style.display="";
		//divCanvas.removeChild(divTextScreenContent);
		if(undefined!=netspace.extensionManager&&null!=netspace.extensionManager)
			netspace.extensionManager.appendChild("ComputerExtension",btnLockComputerTextScreenDiv);
		else divTxtFunFunFunFileSection.appendChild(btnLockComputerTextScreenDiv);
		//mhdmodiff
		//divMenu.style.display="";
	}
};
Computer.prototype.stopProgram=function(theProgram,strString){
	this.theShell.echo(this.theShell,strString);
	if(null!=theProgram.stopFinalizations)theProgram.stopFinalizations();
	this.theActualProgram=this.theShell;
};
Computer.prototype.exitProgram=function(theProgram,strString){
	this.theShell.echo(this.theShell,strString);
	if(null!=theProgram.exitFinalizations)theProgram.exitFinalizations();
	var thePID=null;
	for(var intPID=this.lstRunningPrograms.length-1;intPID>=0;intPID--){
		if(theProgram==this.lstRunningPrograms[intPID][2]){
			thePID=intPID;
			break;
		}
	}
	for(var ii=thePID+1;ii<this.lstRunningPrograms.length;ii++)
		this.lstRunningPrograms[ii][1]--;
	if(null!=thePID)this.lstRunningPrograms.splice(thePID,1);
	this.theActualProgram=this.theShell;
};
Computer.prototype.appendStringBuffer=function(arrBuffer,intPosition,strText){
	var arrText=this.textEncoder.encode(strText);
	for(var ii=0;ii<arrText.length;ii++){
		arrBuffer[intPosition+ii]=arrText[ii];
	}
	return intPosition+ii;
};
Computer.prototype.setStringBuffer=function(arrBuffer,strText){
	var ii=this.appendStringBuffer(arrBuffer,0,strText);
	return ii;
};
Computer.prototype.stringBufferToString=function(arrBuffer,intPosition){
	for(var ii=intPosition;ii<arrBuffer.length;ii++){
		arrBuffer[ii]=0;
	}
	return this.textDecoder.decode(arrBuffer);
};

Computer.prototype.drawComputerScreenTexture_text=function(textureCanvas,lstScreenBuffer_text,lstForegroundBuffer,lstBackgroundBuffer){
	var strHTMLtext="";
	var strRowString="";
	this.intHTMLtextScreenBuffer=0;
	if(undefined==lstForegroundBuffer||null==lstForegroundBuffer){
		lstForegroundBuffer=netspace.emptyList(lstScreenBuffer_text.length);
		var intR,intG,intB,intA;
		intR=this.lstConsoleGray[0];intG=this.lstConsoleGray[1];intB=this.lstConsoleGray[2];intA=this.lstConsoleGray[3];
		for(var ii=0;ii<lstForegroundBuffer.length;ii++)lstForegroundBuffer[ii]=[intR,intG,intB,intA];
	}
	if(undefined==lstBackgroundBuffer||null==lstBackgroundBuffer){
		lstBackgroundBuffer=netspace.emptyList(lstScreenBuffer_text.length);
		for(var ii=0;ii<lstBackgroundBuffer.length;ii++)lstBackgroundBuffer[ii]=[0,0,0,255];
	}
	var screenCanvas;
	var intScreenWidth,intScreenHeight;
	intScreenWidth=this.intFontWidth*this.intScreenWidth_text;
	intScreenHeight=this.intFontHeight*this.intScreenHeight_text;
	var screenCanvas,screenImage;

	if(null==this.screenCanvas){
		this.screenCanvas=document.createElement("canvas");
		this.screenCanvas.width=intScreenWidth;
		this.screenCanvas.height=intScreenHeight;
		//mhdmodiff
		//this.screenCanvas.onmousemove=netspace.onMouseMove;
		//this.screenCanvas.onmousedown=netspace.onMouseDown;
		//this.screenCanvas.onmouseup=netspace.onMouseUp;
		//this.screenCanvas.onmousewheel=netspace.onMouseWheel;

		screenCanvas=this.screenCanvas;
		screenContext=screenCanvas.getContext("2d");
		if(true==this.blnRenderScreen){
			screenImage=screenContext.createImageData(intScreenWidth,intScreenHeight);
			for(var i=0;i<intScreenWidth;i++){
				for(var j=0;j<intScreenHeight;j++){
					var index=(j*intScreenWidth+i)*4;
					screenImage.data[index+0]=netspace.lstColors[1][0];
					screenImage.data[index+1]=netspace.lstColors[1][1];
					screenImage.data[index+2]=netspace.lstColors[1][2];
					screenImage.data[index+3]=255;
				}
			}
			screenContext.putImageData(screenImage,0,0);
		}

	}
	screenCanvas=this.screenCanvas;
	var screenContext=screenCanvas.getContext("2d");

	if(1==this.intRenderText){
		strHTMLtext="<p style="+String.fromCharCode(34)+"font-family:"+String.fromCharCode(39)+"Courier New"+String.fromCharCode(39)+String.fromCharCode(34)+">";
		this.strHTMLtextScreenBuffer=strHTMLtext;

	}
	if(2==this.intRenderText){
		strHTMLtext="<p style="+String.fromCharCode(34)+"font-family:"+String.fromCharCode(39)+"Courier New"+String.fromCharCode(39)+String.fromCharCode(34)+">";
		this.intHTMLtextScreenBuffer=this.setStringBuffer(this.arrHTMLtextScreenBuffer,strHTMLtext);
	}
			screenImage=screenContext.getImageData(0,0,intScreenWidth,intScreenHeight);
			var index1,index2;
			if(null!=netspace.shaderThinkpad){
				var intShiftX=Math.floor(0.5*(netspace.shaderThinkpad.lstIntWidths[0]-intScreenWidth));
				var intShiftY=Math.floor(0.5*(netspace.shaderThinkpad.lstIntHeights[0]-intScreenHeight));
				screenImage=screenContext.getImageData(0,0,intScreenWidth,intScreenHeight);
				for(var i=0;i<intScreenWidth;i++){
					for(var j=0;j<intScreenHeight;j++){
						index1=(j*intScreenWidth+i)*4;
						index2=((netspace.shaderThinkpad.lstIntHeights[0]-j-intShiftY)*netspace.shaderThinkpad.lstIntWidths[0]+i+intShiftX)*4;
						if((i+intShiftX>=0)&&(i+intShiftX<netspace.shaderThinkpad.lstIntWidths[0])&&(j+intShiftY>=0)&&(j+intShiftY<netspace.shaderThinkpad.lstIntHeights[0])){
							screenImage.data[index1+0]=netspace.shaderThinkpad.data[index2+0];
							screenImage.data[index1+1]=netspace.shaderThinkpad.data[index2+1];
							screenImage.data[index1+2]=netspace.shaderThinkpad.data[index2+2];
							screenImage.data[index1+3]=255;
						}else{
							screenImage.data[index1+0]=netspace.lstExternalEmptyColor[0];
							screenImage.data[index1+1]=netspace.lstExternalEmptyColor[1];
							screenImage.data[index1+2]=netspace.lstExternalEmptyColor[2];
							screenImage.data[index1+3]=netspace.lstExternalEmptyColor[3];
							/*screenImage.data[index1+3]=255;*/

						}
					}
				}
				screenContext.putImageData(screenImage,0,0);
			}else{
			}
	var intLineWidth=this.intScreenWidth_text-1;
	var intLineHeight=this.intScreenHeight_text-1;
	screenContext.font="10px Courier";
	screenContext.fillStyle="rgba("+150+","+150+","+150+","+255+")";
	var jj=0;
	var intI=0;
	var intJ=this.intFontHeight;
	var intDJ=this.intFontHeight;
	var intDI=this.intFontWidth;
	var i=intI,j=intJ;

	if(null!=netspace.shaderThinkpad&&false==netspace.shaderThinkpad.shaderThinkpadManager.blnShowComputerTextScreenText){
	}else{
		for(var ii=0;ii<this.intScreenWidth_text*this.intScreenHeight_text;ii++){
			if(true==this.blnRenderScreen){
				screenContext.beginPath();
				if(null==netspace.shaderThinkpad)
					screenContext.fillStyle="rgba("+lstBackgroundBuffer[ii][0]+","+lstBackgroundBuffer[ii][1]+","+lstBackgroundBuffer[ii][2]+","+lstBackgroundBuffer[ii][3]+")";
				else screenContext.fillStyle="rgba("+lstBackgroundBuffer[ii][0]+","+lstBackgroundBuffer[ii][1]+","+lstBackgroundBuffer[ii][2]+","+netspace.shaderThinkpad.shaderThinkpadManager.fltComputerTextScreenOpacity+")";
				screenContext.moveTo(i,j);
				screenContext.lineTo(i+intDI,j);
				screenContext.lineTo(i+intDI,j-intDJ);
				screenContext.lineTo(i,j-intDJ);
				screenContext.lineTo(i,j);
				screenContext.fill();
			}
			i+=intDI;
			jj++;
			if(jj>intLineWidth){
				i=0;j+=intDJ;
				jj=0;
			}
		}
	}
	jj=0;
	intI=0;
	intJ=this.intFontHeight;
	intDJ=this.intFontHeight;
	intDI=this.intFontWidth;
	i=intI,j=intJ;
	var backColor,foreColor,strChar,chrChar,blnForeDifferent,blnBackDifferent,strSpanChar;

	if(null!=netspace.shaderThinkpad&&false==netspace.shaderThinkpad.shaderThinkpadManager.blnShowComputerTextScreenText){

	}else{
		for(var ii=0;ii<this.intScreenWidth_text*this.intScreenHeight_text;ii++){
			if(true==this.blnRenderScreen){
				screenContext.fillStyle="rgba("+lstForegroundBuffer[ii][0]+","+lstForegroundBuffer[ii][1]+","+lstForegroundBuffer[ii][2]+","+lstForegroundBuffer[ii][3]+")";
				screenContext.fillText(lstScreenBuffer_text[ii][0],i,j);
			}
			backColor=lstBackgroundBuffer[ii];
			foreColor=lstForegroundBuffer[ii];
			chrChar=lstScreenBuffer_text[ii][0];	
			if(" "==chrChar||"<"==chrChar||">"==chrChar||String.fromCharCode(34)==chrChar||String.fromCharCode(39)==chrChar){
				switch(chrChar){
					case " ":strChar="&nbsp;";break;
					case "<":strChar="&lt;";break;
					case ">":strChar="&gt;";break;
					case String.fromCharCode(34):strChar="&quot;";break;
					case String.fromCharCode(39):strChar="&apos;";break;
				}
			}else strChar=chrChar;
			if(1==this.intRenderText||2==this.intRenderText){
				blnForeDifferent=false;
				blnBackDifferent=false;
				if(this.prevForecolor[0]!=foreColor[0]||this.prevForecolor[1]!=foreColor[1]||this.prevForecolor[2]!=foreColor[2]){
					this.strForecolor="<span style="+String.fromCharCode(34)+"color:#"+((Number(foreColor[0]).toString(16).length<2)?""+0+Number(foreColor[0]).toString(16):Number(foreColor[0]).toString(16))+((Number(foreColor[1]).toString(16).length<2)?""+0+Number(foreColor[1]).toString(16):Number(foreColor[1]).toString(16))+((Number(foreColor[2]).toString(16).length<2)?""+0+Number(foreColor[2]).toString(16):Number(foreColor[2]).toString(16))+"; ";
					blnForeDifferent=true;
				}
				if(this.prevBackcolor[0]!=backColor[0]||this.prevBackcolor[1]!=backColor[1]||this.prevBackcolor[2]!=backColor[2]){
				this.strBackcolor="background-color:#"+((Number(backColor[0]).toString(16).length<2)?""+0+Number(backColor[0]).toString(16):Number(backColor[0]).toString(16))+((Number(backColor[1]).toString(16).length<2)?""+0+Number(backColor[1]).toString(16):Number(backColor[1]).toString(16))+((Number(backColor[2]).toString(16).length<2)?""+0+Number(backColor[2]).toString(16):Number(backColor[2]).toString(16))+String.fromCharCode(34)+">";
					blnBackDifferent=true;
				}
				if(true==blnForeDifferent||true==blnBackDifferent)
					this.strForeBackColor=this.strForecolor+this.strBackcolor;

				strSpanChar=strChar+"</span>";
				strHTMLtext=this.strForeBackColor+strSpanChar;
				if(1==this.intRenderText)
					strRowString+=strHTMLtext;
				if(2==this.intRenderText)
					this.intHTMLtextScreenBuffer=this.appendStringBuffer(this.arrHTMLtextScreenBuffer,this.intHTMLtextScreenBuffer,strHTMLtext);
				this.prevForecolor=foreColor;
				this.prevBackcolor=backColor;
			}
			i+=intDI;
			jj++;
			if(jj>intLineWidth){
				i=0;j+=intDJ;
				jj=0;
				if(1==this.intRenderText||2==this.intRenderText){
					strHTMLtext="<br/>";
					if(1==this.intRenderText){
						strRowString+=strHTMLtext;
						this.strHTMLtextScreenBuffer+=strRowString;
						strRowString="";
					}
					if(2==this.intRenderText)
						this.intHTMLtextScreenBuffer=this.appendStringBuffer(this.arrHTMLtextScreenBuffer,this.intHTMLtextScreenBuffer,strHTMLtext);
				}
			}
		}
		screenImage=screenContext.getImageData(0,0,intScreenWidth,intScreenHeight);
	}

if(true==this.blnRenderTextures){
	var intTextureWidth=textureCanvas.width;
	var intTextureHeight=textureCanvas.height;
	var textureContext=textureCanvas.getContext("2d");
	var textureImage=textureContext.getImageData(0,0,intTextureWidth,intTextureHeight);
	for(var i=283;i<745;i+=1){
		for(var j=616;j<977;j+=1){
				var index1=((intScreenHeight-(j-616))*intScreenWidth+i-283)*4;
				if(j-616<intScreenHeight&&i-283<intScreenWidth){
					var index0=(j*intTextureWidth+i)*4;
					textureImage.data[index0+0]=screenImage.data[index1+0];
					textureImage.data[index0+1]=screenImage.data[index1+1];
					textureImage.data[index0+2]=screenImage.data[index1+2];
					textureImage.data[index0+3]=screenImage.data[index1+3];
				}
			}
	}
	textureContext.putImageData(textureImage,0,0);
}
	if(1==this.intRenderText){
		strHTMLtext="</p>";
		strRowString+=strHTMLtext;
		this.strHTMLtextScreenBuffer+=strRowString;
		this.divComputerTextScreen.innerHTML=this.strHTMLtextScreenBuffer;
	}
	if(2==this.intRenderText){
		strHTMLtext="</p>";
		this.intHTMLtextScreenBuffer=this.appendStringBuffer(this.arrHTMLtextScreenBuffer,this.intHTMLtextScreenBuffer,strHTMLtext);
		this.divComputerTextScreen.innerHTML=this.stringBufferToString(this.arrHTMLtextScreenBuffer,this.intHTMLtextScreenBuffer);
	}
	return screenCanvas;
};
Computer.prototype.drawComputerScreenTexture_graphics=function(textureCanvas,lstScreenBuffer_graphics){
	var screenCanvas;
	var intScreenWidth,intScreenHeight;
	intScreenWidth=745-283;
	intScreenHeight=977-616;
	if(null==this.screenCanvas){
		this.screenCanvas=document.createElement("canvas");
		this.screenCanvas.width=intScreenWidth;
		this.screenCanvas.height=intScreenHeight;
		//mhdmodiff
		//this.screenCanvas.onmousemove=netspace.onMouseMove;
		//this.screenCanvas.onmousedown=netspace.onMouseDown;
		//this.screenCanvas.onmouseup=netspace.onMouseUp;
		//this.screenCanvas.onmousewheel=netspace.onMouseWheel;
	}
	screenCanvas=this.screenCanvas;


	var screenContext=screenCanvas.getContext("2d");
	var screenImage=screenContext.createImageData(intScreenWidth,intScreenHeight);
	for(var i=0;i<intScreenWidth;i++){
		for(var j=0;j<intScreenHeight;j++){
			var index0=(j*intScreenWidth+i)*4;
			var index1=(j*this.intScreenWidth_graphics+i)*4;
			screenImage.data[index0+0]=lstScreenBuffer_graphics[index1+0];
			screenImage.data[index0+1]=lstScreenBuffer_graphics[index1+1];
			screenImage.data[index0+2]=lstScreenBuffer_graphics[index1+2];
			screenImage.data[index0+3]=lstScreenBuffer_graphics[index1+3];
		}
	}
	screenContext.putImageData(screenImage,0,0);
	if(true==netspace.blnLoad3dWorldsOnStart){
		screenImage=screenContext.getImageData(0,0,intScreenWidth,intScreenHeight);
		var intTextureWidth=textureCanvas.width;
		var intTextureHeight=textureCanvas.height;
		var textureContext=textureCanvas.getContext("2d");
		var textureImage=textureContext.getImageData(0,0,intTextureWidth,intTextureHeight);
		for(var i=283;i<745;i+=1){
			for(var j=616;j<977;j+=1){
					var index0=(j*intTextureWidth+i)*4;
					var index1=((intScreenHeight-(j-616))*intScreenWidth+i-283)*4;
					textureImage.data[index0+0]=screenImage.data[index1+0];
					textureImage.data[index0+1]=screenImage.data[index1+1];
					textureImage.data[index0+2]=screenImage.data[index1+2];
					textureImage.data[index0+3]=screenImage.data[index1+3];
				}
		}
		textureContext.putImageData(textureImage,0,0);
	}
	return screenCanvas;
};
Computer.prototype.drawKeyboard=function(textureCanvas){
	var keyboardCanvas=document.createElement("canvas");
	keyboardCanvas.id="keyboardCanvas";
	keyboardCanvas.lstKeyborderlines=[];
	var intKeyboardWidth=771-252;
	var intKeyboardHeight=546-306;
	keyboardCanvas.width=intKeyboardWidth;
	keyboardCanvas.height=intKeyboardHeight;
	if(true==netspace.blnLoad3dWorldsOnStart){
		var textureContext=textureCanvas.getContext("2d");
		var textureImage=textureContext.getImageData(0,0,1024,1024);
		var intTextureWidth,intTextureHeight;
		intTextureWidth=textureCanvas.width;
		intTextureHeight=textureCanvas.height;
	}
	var intColorNumber=1;
	var keyboardContext=keyboardCanvas.getContext("2d");
	var keyboardImage=keyboardContext.createImageData(intKeyboardWidth,intKeyboardHeight);
	var I=0,J=0;
	var index=0;
	var vec4position2=netspace.vec4.create();
	for(var i=0;i<intKeyboardWidth;i+=1){
			for(var j=0;j<intKeyboardHeight;j+=1){
				var index=(j*intKeyboardWidth+i)*4;
				keyboardImage.data[index+0]=0;
				keyboardImage.data[index+1]=0;
				keyboardImage.data[index+2]=0;
				keyboardImage.data[index+3]=255;
		}
	}
	keyboardContext.putImageData(keyboardImage,0,0);
	var I,J;
	var shiftX=0,shiftY=0;
	var strNormalFillstyle="rgba("+255+","+255+","+255+","+255+")";
	var strLockedFillstyle="rgba("+this.lstVeryOrange[0]+","+this.lstVeryOrange[1]+","+this.lstVeryOrange[2]+","+this.lstVeryOrange[3]+")";
	keyboardContext.fillStyle=strNormalFillstyle;
	
	keyboardContext.font="10px Arial";
	var strBuffer;
	I=75;J=97;
	shiftX=12;
	shiftY=-15;
	strBuffer="QWERTYUIOP";
	for(var i=0;i<strBuffer.length;i++){
		keyboardContext.fillText(strBuffer[i],I,J);
		keyboardCanvas.lstKeyborderlines.push([[I-shiftX,J-shiftY],[I+35-shiftX,J-40-shiftY],[strBuffer[i]]]);
		I+=35;
	}
	I=81;
	J=137;
	strBuffer="ASDFGHJKL";
	for(var i=0;i<strBuffer.length;i++){
		keyboardContext.fillText(strBuffer[i],I,J);
		keyboardCanvas.lstKeyborderlines.push([[I-shiftX,J-shiftY+2],[I+35-shiftX,J-40-shiftY],[strBuffer[i]]]);
		I+=35;
	}
	I=97;
	J=180;
	strBuffer="ZXCVBNM";
	for(var i=0;i<strBuffer.length;i++){
		keyboardContext.fillText(strBuffer[i],I,J);
		keyboardCanvas.lstKeyborderlines.push([[I-shiftX,J-shiftY],[I+35-shiftX,J-40-shiftY],[strBuffer[i]]]);
		I+=35;
	}
	var strBuffer0,strBuffer1;
	I=20;
	J=55;
	strBuffer0="~!@#$%^&*()_+";
	strBuffer1="`1234567890-=";
	for(var i=0;i<strBuffer0.length;i++){
		keyboardContext.fillText(strBuffer0[i],I,J-8);
		keyboardContext.fillText(strBuffer1[i],I,J+5);
		if(0==i)
			keyboardCanvas.lstKeyborderlines.push([[I-shiftX-7,J-shiftY+1],[I+35-shiftX,J-40-shiftY],[strBuffer0[i],strBuffer1[i]]]);
		else keyboardCanvas.lstKeyborderlines.push([[I-shiftX,J-shiftY+1],[I+35-shiftX,J-40-shiftY],[strBuffer0[i],strBuffer1[i]]]);
		I+=35;
	}
	I=425;
	J=97;
	strBuffer0="{}|";
	strBuffer1="[]"+String.fromCharCode(92);
	for(var i=0;i<strBuffer0.length;i++){
		keyboardContext.fillText(strBuffer0[i],I,J-8);
		keyboardContext.fillText(strBuffer1[i],I,J+5);
		keyboardCanvas.lstKeyborderlines.push([[I-shiftX,J-shiftY],[I+35-shiftX,J-40-shiftY],[strBuffer0[i],strBuffer1[i]]]);
		I+=35;
	}
	I=396;
	J=137;
	strBuffer0=":"+String.fromCharCode(34);
	strBuffer1=";"+String.fromCharCode(39);
	for(var i=0;i<strBuffer0.length;i++){
		keyboardContext.fillText(strBuffer0[i],I,J-8);
		keyboardContext.fillText(strBuffer1[i],I,J+5);
		keyboardCanvas.lstKeyborderlines.push([[I-shiftX,J-shiftY+2],[I+35-shiftX,J-40-shiftY],[strBuffer0[i],strBuffer1[i]]]);
		I+=35;
	}
	I=342;
	J=180;
	strBuffer0="<>?";
	strBuffer1=",./";
	for(var i=0;i<strBuffer0.length;i++){
		keyboardContext.fillText(strBuffer0[i],I,J-8);
		keyboardContext.fillText(strBuffer1[i],I,J+5);
		keyboardCanvas.lstKeyborderlines.push([[I-shiftX,J-shiftY],[I+35-shiftX,J-40-shiftY],[strBuffer0[i],strBuffer1[i]]]);
		I+=35;
	}
	I=15;
	J=20;
	var lstBuffer=["Esc","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10"];
	shiftX=5;
	shiftY=-10;
	for(var i=0;i<lstBuffer.length;i++){
		keyboardContext.fillText(lstBuffer[i],I,J);
		if(0==i)
			keyboardCanvas.lstKeyborderlines.push([[I-shiftX-9,J-shiftY],[I+30-shiftX,J-29-shiftY],["Escape"]]);
		else keyboardCanvas.lstKeyborderlines.push([[I-shiftX,J-shiftY],[I+30-shiftX,J-29-shiftY],[lstBuffer[i]]]);
		I+=30;
	}
	I=343;
	J=20;
	var lstBuffer0=["F11","F12","Prt","Pau"];
	var lstBuffer1=["Num","Scr","Sys","Brk"];
	for(var i=0;i<lstBuffer0.length;i++){
		keyboardContext.fillText(lstBuffer0[i],I,J-7);
		keyboardContext.fillText(lstBuffer1[i],I,J+5);
		if(0==i)
			keyboardCanvas.lstKeyborderlines.push([[I-shiftX+1,J-shiftY],[I+30-shiftX,J-29-shiftY],[lstBuffer0[i],lstBuffer1[i]]]);
		else keyboardCanvas.lstKeyborderlines.push([[I-shiftX,J-shiftY],[I+30-shiftX,J-29-shiftY],[lstBuffer0[i],lstBuffer1[i]]]);
		I+=30;
	}
	I=463;
	J=20;
	var lstBuffer=["Ins","Del"];
	for(var i=0;i<lstBuffer.length;i++){
		keyboardContext.fillText(lstBuffer[i],I,J);
		keyboardCanvas.lstKeyborderlines.push([[I-shiftX,J-shiftY],[I+30-shiftX,J-29-shiftY],[lstBuffer[i]]]);
		I+=30;
	}
	I=413;
	J=215;
	var lstBuffer0=["PgUp","PgDn"];
	var lstBuffer1=["Home","End"];
	for(var i=0;i<lstBuffer0.length;i++){
		keyboardContext.fillText(lstBuffer0[i],I,J-7);
		keyboardContext.fillText(lstBuffer1[i],I,J+5);
		if(0==i)
			keyboardCanvas.lstKeyborderlines.push([[I-shiftX+3,J-shiftY-3],[I+35-shiftX+5,J-27-shiftY-3],[lstBuffer0[i],lstBuffer1[i]]]);
		else keyboardCanvas.lstKeyborderlines.push([[I-shiftX+3,J-shiftY-3],[I+35-shiftX+10,J-27-shiftY-3],[lstBuffer0[i],lstBuffer1[i]]]);
		I+=65;
	}
	keyboardContext.fillText("Tab",33,97);
	shiftX=12;shiftY=-15;
	I=33;J=97;
	keyboardCanvas.lstKeyborderlines.push([[I-shiftX-20,J-shiftY],[I+35-shiftX+7,J-40-shiftY],["Tab"]]);
	if(undefined==netspace.computer||false==netspace.computer.blnKeyboardCanvas_CapsLock)
		keyboardContext.fillText("Caps Lk",15,137);
	else{
		keyboardContext.fillStyle=strLockedFillstyle;
		keyboardContext.fillText("CAPS LK",15,137);
		keyboardContext.fillStyle=strNormalFillstyle;
	}
	I=15;J=137;
	keyboardCanvas.lstKeyborderlines.push([[I-shiftX-2,J-shiftY+2],[I+35-shiftX+30,J-40-shiftY],["CapsLock"]]);
	if(undefined==netspace.computer||false==netspace.computer.blnKeyboardCanvas_Shift)
		keyboardContext.fillText("Shift",30,180);
	else{
		keyboardContext.fillStyle=strLockedFillstyle;
		keyboardContext.fillText("SHIFT",30,180);
		keyboardContext.fillStyle=strNormalFillstyle;
	}
	I=30;J=180;
	keyboardCanvas.lstKeyborderlines.push([[I-shiftX-17,J-shiftY],[I+35-shiftX+31,J-40-shiftY],["ShiftLeft"]]);
	if(undefined==netspace.computer||false==netspace.computer.blnKeyboardCanvas_Shift)
		keyboardContext.fillText("Shift",465,180);
	else{
		keyboardContext.fillStyle=strLockedFillstyle;
		keyboardContext.fillText("SHIFT",465,180);
		keyboardContext.fillStyle=strNormalFillstyle;
	}
	I=465;J=180;
	keyboardCanvas.lstKeyborderlines.push([[I-shiftX-17,J-shiftY],[I+35-shiftX+30,J-40-shiftY],["ShiftRight"]]);
	keyboardContext.fillText("Enter",482,137);
	I=482;J=137;
	keyboardCanvas.lstKeyborderlines.push([[I-shiftX-15,J-shiftY+2],[I+35-shiftX+13,J-40-shiftY],["Enter"]]);
	if(undefined==netspace.computer||false==netspace.computer.blnKeyboardCanvas_Ctrl)
		keyboardContext.fillText("Ctrl",10,220);
	else{
		keyboardContext.fillStyle=strLockedFillstyle;
		keyboardContext.fillText("CTRL",5,220);
		keyboardContext.fillStyle=strNormalFillstyle;
	}
	I=10;J=220;
	keyboardCanvas.lstKeyborderlines.push([[I-shiftX+3,J-shiftY+4],[I+35-shiftX,J-40-shiftY],["ControlLeft"]]);
	if(undefined==netspace.computer||false==netspace.computer.blnKeyboardCanvas_Fn)
		keyboardContext.fillText("Fn",45,220);
	else{
		keyboardContext.fillStyle=strLockedFillstyle;
		keyboardContext.fillText("FN",45,220);
		keyboardContext.fillStyle=strNormalFillstyle;
	}
	I=45;J=220;
	keyboardCanvas.lstKeyborderlines.push([[I-shiftX,J-shiftY+4],[I+35-shiftX,J-40-shiftY],["Fn"]]);
	if(undefined==netspace.computer||false==netspace.computer.blnKeyboardCanvas_Alt)
		keyboardContext.fillText("Alt",115,220);
	else{
		keyboardContext.fillStyle=strLockedFillstyle;
		keyboardContext.fillText("ALT",113,220);
		keyboardContext.fillStyle=strNormalFillstyle;
	}
	I=115;J=220;
	keyboardCanvas.lstKeyborderlines.push([[I-shiftX,J-shiftY+4],[I+35-shiftX,J-40-shiftY],["AltLeft"]]);
	if(undefined==netspace.computer||false==netspace.computer.blnKeyboardCanvas_Alt)
		keyboardContext.fillText("Alt",348,220);
	else{
		keyboardContext.fillStyle=strLockedFillstyle;
		keyboardContext.fillText("ALT",346,220);
		keyboardContext.fillStyle=strNormalFillstyle;

	}

	I=348;J=220;
	keyboardCanvas.lstKeyborderlines.push([[I-shiftX,J-shiftY+4],[I+35-shiftX,J-40-shiftY],["AltRight"]]);
	keyboardContext.beginPath();
	keyboardContext.strokeStyle="rgba("+255+","+255+","+255+","+255+")";
	keyboardContext.moveTo(475,55);
	keyboardContext.lineTo(499,55);
	keyboardContext.stroke();
	/*backspace arrow*/
	keyboardContext.beginPath();
	keyboardContext.moveTo(475,55);
	keyboardContext.lineTo(485,50);
	keyboardContext.lineTo(485,60);
	keyboardContext.lineTo(475,55);
	keyboardContext.fill();
	I=490;J=55;
	keyboardCanvas.lstKeyborderlines.push([[I-shiftX-15,J-shiftY+1],[I+35-shiftX+5,J-40-shiftY],["Backspace"]]);
	/*arrow left*/
	keyboardContext.beginPath();
	keyboardContext.moveTo(423,230);
	keyboardContext.lineTo(433,225);
	keyboardContext.lineTo(433,235);
	keyboardContext.lineTo(423,230);
	keyboardContext.fill();
	I=423;J=225;
	keyboardCanvas.lstKeyborderlines.push([[I-shiftX,J-shiftY-1],[I+35-shiftX+2,J-15-shiftY-3],["ArrowLeft"]]);
	/*arrow right*/
	keyboardContext.beginPath();
	keyboardContext.moveTo(433+67,230);
	keyboardContext.lineTo(423+67,225);
	keyboardContext.lineTo(423+67,235);
	keyboardContext.lineTo(433+67,230);
	keyboardContext.fill();
	I=423+67;J=225;
	keyboardCanvas.lstKeyborderlines.push([[I-shiftX-2,J-shiftY-1],[I+35-shiftX+5,J-15-shiftY-3],["ArrowRight"]]);
	/*arrow down*/
	keyboardContext.beginPath();
	keyboardContext.moveTo(423+36,225);
	keyboardContext.lineTo(433+36,225);
	keyboardContext.lineTo(427+36,235);
	keyboardContext.lineTo(423+36,225);
	keyboardContext.fill();
	I=423+36;J=225;
	keyboardCanvas.lstKeyborderlines.push([[I-shiftX+1,J-shiftY-1],[I+35-shiftX-6,J-15-shiftY-3],["ArrowDown"]]);
	/*arrow up*/
	keyboardContext.beginPath();
	keyboardContext.moveTo(423+36,235-23);
	keyboardContext.lineTo(433+36,235-23);
	keyboardContext.lineTo(427+36,225-23);
	keyboardContext.lineTo(423+36,235-23);
	keyboardContext.fill();
	I=423+36;J=225-23;
	keyboardCanvas.lstKeyborderlines.push([[I-shiftX+1,J-shiftY+5],[I+35-shiftX-6,J-15-shiftY-7],["ArrowUp"]]);
	/*enter arrow*/
	keyboardContext.beginPath();
	keyboardContext.moveTo(463,137);
	keyboardContext.lineTo(468,132);
	keyboardContext.lineTo(468,142);
	keyboardContext.lineTo(463,137);
	keyboardContext.fill();
	keyboardContext.beginPath();
	keyboardContext.moveTo(463,137);
	keyboardContext.lineTo(478,137);
	keyboardContext.lineTo(478,127);
	keyboardContext.stroke();
	/*shift L*/
	if(undefined==netspace.computer||false==netspace.computer.blnKeyboardCanvas_Shift){
		keyboardContext.beginPath();
		keyboardContext.moveTo(10,175);
		keyboardContext.lineTo(20,175);
		keyboardContext.lineTo(15,165);
		keyboardContext.lineTo(10,175);
		keyboardContext.moveTo(13,175);
		keyboardContext.lineTo(13,185);
		keyboardContext.lineTo(17,185);
		keyboardContext.lineTo(17,175);
		keyboardContext.fill();
	}
	else{
		keyboardContext.fillStyle=strLockedFillstyle;
		keyboardContext.beginPath();
		keyboardContext.moveTo(10,175);
		keyboardContext.lineTo(20,175);
		keyboardContext.lineTo(15,165);
		keyboardContext.lineTo(10,175);
		keyboardContext.moveTo(13,175);
		keyboardContext.lineTo(13,185);
		keyboardContext.lineTo(17,185);
		keyboardContext.lineTo(17,175);
		keyboardContext.fill();
		keyboardContext.fillStyle=strNormalFillstyle;
	}
	/*shift R*/
	if(undefined==netspace.computer||false==netspace.computer.blnKeyboardCanvas_Shift){
		keyboardContext.beginPath();
		keyboardContext.moveTo(445,175);
		keyboardContext.lineTo(455,175);
		keyboardContext.lineTo(450,165);
		keyboardContext.lineTo(445,175);
		keyboardContext.moveTo(448,175);
		keyboardContext.lineTo(448,185);
		keyboardContext.lineTo(452,185);
		keyboardContext.lineTo(452,175);
		keyboardContext.fill();
	}
	else{
		keyboardContext.fillStyle=strLockedFillstyle;
		keyboardContext.beginPath();
		keyboardContext.moveTo(445,175);
		keyboardContext.lineTo(455,175);
		keyboardContext.lineTo(450,165);
		keyboardContext.lineTo(445,175);
		keyboardContext.moveTo(448,175);
		keyboardContext.lineTo(448,185);
		keyboardContext.lineTo(452,185);
		keyboardContext.lineTo(452,175);
		keyboardContext.fill();
		keyboardContext.fillStyle=strNormalFillstyle;
	}
	/*tab*/
	keyboardContext.beginPath();
	keyboardContext.moveTo(15,97-10);
	keyboardContext.lineTo(25,94-10);
	keyboardContext.lineTo(25,100-10);
	keyboardContext.lineTo(15,97-10);
	keyboardContext.fill();
	keyboardContext.beginPath();
	keyboardContext.moveTo(25,97-10);
	keyboardContext.lineTo(30,97-10);
	keyboardContext.stroke();
	keyboardContext.beginPath();
	keyboardContext.moveTo(30,97+0);
	keyboardContext.lineTo(20,94+0);
	keyboardContext.lineTo(20,100+0);
	keyboardContext.lineTo(30,97+0);
	keyboardContext.fill();
	keyboardContext.beginPath();
	keyboardContext.moveTo(20,97+0);
	keyboardContext.lineTo(15,97+0);
	keyboardContext.stroke();
	keyboardContext.beginPath();
	keyboardContext.moveTo(15,94-10);
	keyboardContext.lineTo(15,100-10);
	keyboardContext.stroke();
	keyboardContext.beginPath();
	keyboardContext.moveTo(30,94+0);
	keyboardContext.lineTo(30,100+0);
	keyboardContext.stroke();
	/*option menu*/
	keyboardContext.beginPath();
	keyboardContext.moveTo(390-7,218+12);
	keyboardContext.lineTo(390+7,218+12);
	keyboardContext.lineTo(390+7,218-12);
	keyboardContext.lineTo(390-7,218-12);
	keyboardContext.lineTo(390-7,218+12);
	keyboardContext.moveTo(390-4,218+0);
	keyboardContext.lineTo(390+4,218+0);
	keyboardContext.moveTo(390-4,218-6);
	keyboardContext.lineTo(390+4,218-6);
	keyboardContext.moveTo(390-4,218+6);
	keyboardContext.lineTo(390+4,218+6);
	keyboardContext.stroke();
	I=390-8;J=220;
	keyboardCanvas.lstKeyborderlines.push([[I-shiftX,J-shiftY+4],[I+35-shiftX+6,J-40-shiftY],["ContextMenu"]]);
	/*OS key*/
	keyboardContext.beginPath();
	keyboardContext.moveTo(80-10+7,220+5-5);
	keyboardContext.lineTo(80+10+7,220+10-5);
	keyboardContext.lineTo(80+10+7,220-10-5);
	keyboardContext.lineTo(80-10+7,220-5-5);
	keyboardContext.lineTo(80-10+7,220+5-5);
	keyboardContext.fill();
	keyboardContext.beginPath();
	keyboardContext.fillStyle="rgba("+0+","+0+","+0+","+255+")";
	keyboardContext.moveTo(80-1+7,220-10-5);
	keyboardContext.lineTo(80+1+7,220-10-5);
	keyboardContext.lineTo(80+1+7,220+10-5);
	keyboardContext.lineTo(80-1+7,220+10-5);
	keyboardContext.lineTo(80-1+7,220-10-5);
	keyboardContext.moveTo(80-10+7,220-1-5);
	keyboardContext.lineTo(80+10+7,220-1-5);
	keyboardContext.lineTo(80+10+7,220+1-5);
	keyboardContext.lineTo(80-10+7,220+1-5);
	keyboardContext.lineTo(80-10+7,220-1-5);
	keyboardContext.fill();
	I=80;J=220;
	keyboardCanvas.lstKeyborderlines.push([[I-shiftX,J-shiftY+4],[I+35-shiftX,J-40-shiftY],["OS"]]);
	I=150;J=220;
	keyboardCanvas.lstKeyborderlines.push([[I-shiftX,J-shiftY+4],[I+198-shiftX,J-40-shiftY],["Space"]]);
	if(true==netspace.blnLoad3dWorldsOnStart){
		keyboardImage=keyboardContext.getImageData(0,0,intKeyboardWidth,intKeyboardHeight);
		var X0_0=252,Y0_0=546,X0_1=150,Y0_1=306;
		var X0=771,Y0=546,X1=871,Y1=306;
		X0_0=250;
		X0_1=148;
		Y0_0=550;
		Y0=550;
		X0=780;
		X1=885;
		for(var j=306;j<550;j+=1){
			for(var i=Math.floor((j+48.039215686274474)*0.4180327868852459);i<Math.floor((2362.5714285714284-j)*0.430327868852459);i+=1){
				index=(j*intTextureWidth+i)*4;
				textureImage.data[index+0]=0;
				textureImage.data[index+1]=0;
				textureImage.data[index+2]=0;
				textureImage.data[index+3]=255;
			}
		}
		var index0,index1;
		var vec3position=netspace.vec3.create([I,J,0]);
		var vec3position2=netspace.vec3.create([0,0,0]);
		var fltScale=1.;
		var mat3transformation=netspace.mat3.create([1.43284,0.83413,-466.65187,0.01287,1.91723,-281.58049,0.00002,0.00166,0.48973]);
		for(var j=306;j<546;j+=1){
			for(var i=252;i<771;i+=1){
			index1=((intKeyboardHeight-(j-306))*intKeyboardWidth+i-252)*4;
				vec3position=netspace.vec3.create([i,j,1]);
				netspace.mat3.multiplyVec3(vec3position2,mat3transformation,vec3position);
				index0=(Math.floor(vec3position2[1]/vec3position2[2])*intTextureWidth+Math.floor(vec3position2[0]/vec3position2[2]))*4;
				textureImage.data[index0+0]=keyboardImage.data[index1+0];
				textureImage.data[index0+1]=keyboardImage.data[index1+1];
				textureImage.data[index0+2]=keyboardImage.data[index1+2];
				textureImage.data[index0+3]=keyboardImage.data[index1+3];
			}
		}
		this.putPixel(textureImage,intTextureWidth,257,515,255,255,255,255);
		this.putPixel(textureImage,intTextureWidth,259,517,255,255,255,255);
		this.putPixel(textureImage,intTextureWidth,263,514,255,255,255,255);
		this.putPixel(textureImage,intTextureWidth,264,515,255,255,255,255);
		for(var i=0;i<3;i++){
			this.putPixel(textureImage,intTextureWidth,262+i,516,0,0,0,255);
			this.putPixel(textureImage,intTextureWidth,735+i,534,255,255,255,255);
		}
		for(var i=0;i<4;i++)
			this.putPixel(textureImage,intTextureWidth,754+i,541,255,255,255,255);
		for(var i=0;i<7;i++)
			this.putPixel(textureImage,intTextureWidth,295,514,0,0,0,255);
		for(var i=0;i<6;i++)
			this.putPixel(textureImage,intTextureWidth,337+i,520,255,255,255,255);
		this.putPixel(textureImage,intTextureWidth,372,513,0,0,0,255);
		this.putPixel(textureImage,intTextureWidth,373,513,255,255,255,255);
		this.putPixel(textureImage,intTextureWidth,525,513,255,255,255,255);
		for(var i=0;i<7;i++){
			this.putPixel(textureImage,intTextureWidth,330+i,503,255,255,255,255);
			this.putPixel(textureImage,intTextureWidth,519+i,510,255,255,255,255);
		}
		for(var i=0;i<3;i++){
			this.putPixel(textureImage,intTextureWidth,520+i,513,255,255,255,255);
			this.putPixel(textureImage,intTextureWidth,624,380+i,255,255,255,255);
			for(var j=0;j<3;j++){
				this.putPixel(textureImage,intTextureWidth,699+i,480+j,255,255,255,255);
				this.putPixel(textureImage,intTextureWidth,742+i,480+j,255,255,255,255);
			}
		}
		this.putPixel(textureImage,intTextureWidth,705,476,255,255,255,255);
		this.putPixel(textureImage,intTextureWidth,702,485,255,255,255,255);
		this.putPixel(textureImage,intTextureWidth,739,476,255,255,255,255);
		this.putPixel(textureImage,intTextureWidth,737,485,255,255,255,255);
		this.putPixel(textureImage,intTextureWidth,718,449,0,0,0,255);
		this.putPixel(textureImage,intTextureWidth,719,447,0,0,0,255);
		this.putPixel(textureImage,intTextureWidth,625,380,255,255,255,255);
		this.putPixel(textureImage,intTextureWidth,712,393,255,255,255,255);
		for(var i=0;i<14;i++){
			this.putPixel(textureImage,intTextureWidth,550+i,425,50,50,50,255);
			this.putPixel(textureImage,intTextureWidth,423+i,425,50,50,50,255);
		}
		textureContext.putImageData(textureImage,0,0);
		textureImage=textureContext.getImageData(0,0,intTextureWidth,intTextureHeight);
		for(var j=136;j<=267;j+=1){
			for(var i=Math.floor(0.12213740458015267*j+373.3893129770992);i<=Math.floor(639.6-0.1*j);i+=1){
				index=(j*intTextureWidth+i)*4;
				textureImage.data[index+0]=0;
				textureImage.data[index+1]=0;
				textureImage.data[index+2]=0;
				textureImage.data[index+3]=255;
			}
		}
		for(var j=44;j<=118;j+=1){
			for(var i=Math.floor(0.16666666666666666*j+353.6666666666667);i<=Math.floor(0.013513513513513514*j+492.4054054054054);i+=1){
				index=(j*intTextureWidth+i)*4;
				textureImage.data[index+0]=0;
				textureImage.data[index+1]=0;
				textureImage.data[index+2]=0;
				textureImage.data[index+3]=255;
			}
		}
		for(var j=44;j<=118;j+=1){
			for(var i=Math.floor(0.02702702702702703*j+516.8108108108108);i<=Math.floor(657.5-0.125*j);i+=1){
				index=(j*intTextureWidth+i)*4;
				textureImage.data[index+0]=0;
				textureImage.data[index+1]=0;
				textureImage.data[index+2]=0;
				textureImage.data[index+3]=255;
			}
		}
		textureContext.putImageData(textureImage,0,0);
	}
	this.drawKeyborderlines(keyboardCanvas);
	keyboardCanvas.findKeyname=function(intX,intY){
		var intMinX,intMinY,intMaxX,intMaxY;
		var keyborderline;
		var lstReturn;
		for(var ii=0;ii<this.lstKeyborderlines.length;ii++){
			keyborderline=this.lstKeyborderlines[ii];
			lstReturn=netspace.computer.getMinMax(keyborderline[0][0],keyborderline[1][0]);
			intMinX=lstReturn[0];
			intMaxX=lstReturn[1];
			lstReturn=netspace.computer.getMinMax(keyborderline[0][1],keyborderline[1][1]);
			intMinY=lstReturn[0];
			intMaxY=lstReturn[1];
			if(intX>=intMinX&&intX<=intMaxX&&intY>=intMinY&&intY<=intMaxY)
				return keyborderline[2];
		}
		return null;
	};
	keyboardCanvas.specialNaming=["`","~","[","]","{","}",";",":",String.fromCharCode(39),String.fromCharCode(34),String.fromCharCode(92),"|",",","<",".",">","/","?","-","_","=","+"];
	keyboardCanvas.specialNames=["Backquote","Backquote","BracketLeft","BracketRight","BracketLeft","BracketRight","Semicolon","Semicolon","Quote","Quote","Backslash","Backslash","Comma","Comma","Period","Period","Slash","Slash","Minus","Minus","Equal","Equal"];
	keyboardCanvas.upperDigits=[")","!","@","#","$","%","^","&","*","("];
	keyboardCanvas.findKeyEvent=function(lstKeyname){
		var ii=-1;
		var evtKey={};
		var laptopTexture=null;
		var lstReturn;
		if(true==netspace.blnLoad3dWorldsOnStart)
			var laptopTexture=netspace.computer.varietyManifold3D.textureCanvas;
		if("CapsLock"==lstKeyname[0]){
			netspace.computer.blnKeyboardCanvas_CapsLock=(netspace.computer.blnKeyboardCanvas_CapsLock)?false:true;
			lstReturn=netspace.computer.drawKeyboard(laptopTexture);
			netspace.computer.keyboardCanvas=lstReturn[0];
			netspace.computer.touchpadCanvas=lstReturn[1];
		}
		if("Shift"==lstKeyname[0].substring(0,5)){
			netspace.computer.blnKeyboardCanvas_Shift=(netspace.computer.blnKeyboardCanvas_Shift)?false:true;
			lstReturn=netspace.computer.drawKeyboard(laptopTexture);
			netspace.computer.keyboardCanvas=lstReturn[0];
			netspace.computer.touchpadCanvas=lstReturn[1];
		}
		if("Control"==lstKeyname[0].substring(0,7)){
			netspace.computer.blnKeyboardCanvas_Ctrl=(netspace.computer.blnKeyboardCanvas_Ctrl)?false:true;
			lstReturn=netspace.computer.drawKeyboard(laptopTexture);
			netspace.computer.keyboardCanvas=lstReturn[0];
			netspace.computer.touchpadCanvas=lstReturn[1];
		}
		if("Alt"==lstKeyname[0].substring(0,3)){
			netspace.computer.blnKeyboardCanvas_Alt=(netspace.computer.blnKeyboardCanvas_Alt)?false:true;
			lstReturn=netspace.computer.drawKeyboard(laptopTexture);
			netspace.computer.keyboardCanvas=lstReturn[0];
			netspace.computer.touchpadCanvas=lstReturn[1];
		}
		if("Fn"==lstKeyname[0]){
			netspace.computer.blnKeyboardCanvas_Fn=(netspace.computer.blnKeyboardCanvas_Fn)?false:true;
			lstReturn=netspace.computer.drawKeyboard(laptopTexture);
			netspace.computer.keyboardCanvas=lstReturn[0];
			netspace.computer.touchpadCanvas=lstReturn[1];
			evtKey.code=lstKeyname[0];	
			evtKey.key=lstKeyname[0];	
			return evtKey;
		}
		evtKey.altKey=netspace.computer.blnKeyboardCanvas_Alt;
		evtKey.ctrlKey=netspace.computer.blnKeyboardCanvas_Ctrl;
		var blnShiftCaps=false;
		if(true==netspace.computer.blnKeyboardCanvas_CapsLock)blnShiftCaps=true;
		else blnShiftCaps=netspace.computer.blnKeyboardCanvas_Shift;
		evtKey.shiftKey=blnShiftCaps;
		var strKeyname;
		var intCharcode;
		if("CapsLock"==lstKeyname[0]){
			evtKey.code=lstKeyname[0];	
			evtKey.key=lstKeyname[0];	
			return evtKey;
		}
		if("F11"==lstKeyname[0]||"F12"==lstKeyname[0]){
			if(false==netspace.computer.blnKeyboardCanvas_Fn){
				evtKey.code=lstKeyname[0];	
				evtKey.key=lstKeyname[0];	
				return evtKey;
			}else{
				if("F11"==lstKeyname[0]){
					evtKey.code="NumLock";
					evtKey.key="NumLock";
					return evtKey;
				}
				if("F12"==lstKeyname[0]){
					evtKey.code="ScrollLock";
					evtKey.key="ScrollLock";
					return evtKey;
				}
			}
		}
		if("Pau"==lstKeyname[0]){
			evtKey.code="Pause";
			evtKey.key="Pause";
			return evtKey;
		}
		if("Ins"==lstKeyname[0]){
			evtKey.code="Insert";
			evtKey.key="Insert";
			return evtKey;
		}
		if("Del"==lstKeyname[0]){
			evtKey.code="Delete";
			evtKey.key="Delete";
			return evtKey;
		}
		if(lstKeyname.length>1){
			strKeyname=lstKeyname[1];
			intCharcode=lstKeyname[1].charCodeAt(0);
			if(strKeyname.charCodeAt(0)>=48&&strKeyname.charCodeAt(0)<=57){
				if(false==blnShiftCaps){
					evtKey.code="Digit"+String.fromCharCode(intCharcode);
					evtKey.key=String.fromCharCode(intCharcode);
					return evtKey;
				}else{
					evtKey.code="Digit"+String.fromCharCode(intCharcode);
					evtKey.key=this.upperDigits[intCharcode-48];
					return evtKey;
				}
				
			}
			ii=keyboardCanvas.specialNaming.indexOf(lstKeyname[0]);
			if(-1!=ii){
				if(false==blnShiftCaps){
					evtKey.code=keyboardCanvas.specialNames[ii];
					evtKey.key=lstKeyname[1];
					return evtKey;
				}else{
					evtKey.code=keyboardCanvas.specialNames[ii];
					evtKey.key=lstKeyname[0];
					return evtKey;
				}
			}
			if(false==blnShiftCaps){
				evtKey.code=lstKeyname[1];
				evtKey.key=lstKeyname[1];
				return evtKey;
			}else{
				evtKey.code=lstKeyname[0];
				evtKey.key=lstKeyname[0];
				if("PgUp"==evtKey.code){
					evtKey.code="PageUp";
					evtKey.key="PageUp";
				}
				if("PgDn"==evtKey.code){
					evtKey.code="PageDown";
					evtKey.key="PageDown";
				}
				return evtKey;
			}
		}else{
			strKeyname=lstKeyname[0];
			intCharcode=lstKeyname[0].charCodeAt(0);
			if(strKeyname.length==1&&intCharcode>=65&&intCharcode<=90){
				if(false==blnShiftCaps){
					evtKey.code="Key"+strKeyname;
					evtKey.key=String.fromCharCode(intCharcode+32);
					return evtKey;
				}else{
					evtKey.code="Key"+strKeyname;
					evtKey.key=strKeyname;
					return evtKey;
				}
			}
			if(strKeyname.length==1&&intCharcode>=97&&intCharcode<=122){
				if(false==blnShiftCaps){
					evtKey.code="Key"+String.fromCharCode(intCharcode-32);
					evtKey.key=strKeyname;
					return evtKey;
				}else{
					evtKey.code="Key"+String.fromCharCode(intCharcode-32);
					evtKey.key=String.fromCharCode(intCharcode-32);
					return evtKey;
				}
			}
			ii=keyboardCanvas.specialNaming.indexOf(lstKeyname[0]);
			if(-1!=ii){
				evtKey.code=keyboardCanvas.specialNames[ii];
				evtKey.key=lstKeyname[0];
				return evtKey;
			}
			if("Space"==lstKeyname[0]){
				evtKey.code=lstKeyname[0];
				evtKey.key=" ";
				return evtKey;
			}
			if("Shift"==lstKeyname[0].substring(0,5)){
				evtKey.code=lstKeyname[0];
				evtKey.key=lstKeyname[0].substring(0,5);
				evtKey.shiftKey=true;
				return evtKey;
			}
			if("Control"==lstKeyname[0].substring(0,7)){
				evtKey.code=lstKeyname[0];
				evtKey.key=lstKeyname[0].substring(0,7);
				evtKey.ctrlKey=true;
				return evtKey;
			}
			if("Alt"==lstKeyname[0].substring(0,3)){
				evtKey.code=lstKeyname[0];
				evtKey.key=lstKeyname[0].substring(0,3);
				evtKey.altKey=true;
				return evtKey;
				if("AltRight"==lstKeyname[0])evtKey.key="AltGraph";
				return evtKey;
			}
			evtKey.code=lstKeyname[0];
			evtKey.key=lstKeyname[0];
			return evtKey;
		}
	};
	keyboardCanvas.onMouseDown=function(evtMouse){
		if(1==evtMouse.buttons){
			var lstKeyname=keyboardCanvas.findKeyname(evtMouse.offsetX,evtMouse.offsetY);
			if(null!=lstKeyname){
				var evtKey=keyboardCanvas.findKeyEvent(lstKeyname);
				if(null!=evtKey)
					netspace.computer.onKeyDown(evtKey);
			}
		}
	};
	keyboardCanvas.onMouseUp=function(evtEvent){
	};
	keyboardCanvas.onMouseMove=function(evtEvent){
	};
	keyboardCanvas.onMouseWheel=function(evtEvent){
	};
	keyboardCanvas.onmousedown=keyboardCanvas.onMouseDown;
	keyboardCanvas.onmouseup=keyboardCanvas.onMouseUp;
	keyboardCanvas.onmousemove=keyboardCanvas.onMouseMove;
	keyboardCanvas.onmousewheel=keyboardCanvas.onMouseWheel;
	var touchpadCanvas=document.createElement("canvas");
	touchpadCanvas.id="touchpadCanvas";
	var intTouchpadWidth=250;
	var intTouchpadHeigth=150;
	var intTouchpadButtonWidth=125;
	var intTouchpadButtonHeight=50;
	var intTouchpadCanvasWidth=intTouchpadWidth+20;
	var intTouchpadCanvasHeight=intTouchpadHeigth+21+intTouchpadButtonHeight;
	touchpadCanvas.width=intTouchpadCanvasWidth;
	touchpadCanvas.height=intTouchpadCanvasHeight;
	var touchpadContext=touchpadCanvas.getContext("2d");
	var touchpadImage=touchpadContext.createImageData(intTouchpadCanvasWidth,intTouchpadCanvasHeight);
	var index=0;
	for(var i=0;i<intTouchpadCanvasWidth;i++){
			for(var j=0;j<intTouchpadCanvasHeight;j++){
				var index=(j*intTouchpadCanvasWidth+i)*4;
				touchpadImage.data[index+0]=0;
				touchpadImage.data[index+1]=0;
				touchpadImage.data[index+2]=0;
				touchpadImage.data[index+3]=255;
		}
	}
	touchpadContext.putImageData(touchpadImage,0,0);
	touchpadCanvas.lstKeyborderlines=[];
	touchpadCanvas.lstKeyborderlines.push([[10,10],[10+intTouchpadWidth,10+intTouchpadHeigth],["Touchpad"]]);
	touchpadCanvas.lstKeyborderlines.push([[0,20+intTouchpadHeigth],[0+intTouchpadButtonWidth,20+intTouchpadHeigth+intTouchpadButtonHeight],["TouchpadButtonL"]]);
	touchpadCanvas.lstKeyborderlines.push([[20+intTouchpadButtonWidth,20+intTouchpadHeigth],[20+2*intTouchpadButtonWidth,20+intTouchpadHeigth+intTouchpadButtonHeight],["TouchpadButtonR"]]);
	this.drawKeyborderlines(touchpadCanvas);
	touchpadCanvas.blnButton1Down=false;
	touchpadCanvas.blnButton2Down=false;
	touchpadCanvas.blnMouseInTouchpadMoving=false;
	touchpadCanvas.blnPrevMouseBlocked=null;
	touchpadCanvas.findKeyname=function(intX,intY){
		var intMinX,intMinY,intMaxX,intMaxY;
		var keyborderline;
		var lstReturn;
		for(var ii=0;ii<this.lstKeyborderlines.length;ii++){
			keyborderline=this.lstKeyborderlines[ii];
			lstReturn=netspace.computer.getMinMax(keyborderline[0][0],keyborderline[1][0]);
			intMinX=lstReturn[0];
			intMaxX=lstReturn[1];
			lstReturn=netspace.computer.getMinMax(keyborderline[0][1],keyborderline[1][1]);
			intMinY=lstReturn[0];
			intMaxY=lstReturn[1];
			if(intX>=intMinX&&intX<=intMaxX&&intY>=intMinY&&intY<=intMaxY)
				return keyborderline[2];
		}
		return null;
	};
	touchpadCanvas.onMouseDown=function(evtMouse){
		var strKeyname=touchpadCanvas.findKeyname(evtMouse.offsetX,evtMouse.offsetY);
		touchpadCanvas.blnButton1Down=true;
		if("TouchpadButtonL"==strKeyname)
			netspace.computer.onMouseDown(evtMouse);
		if("TouchpadButtonR"==strKeyname){
 			var evtMouse2={};
 			evtMouse2.buttons=2;
 			evtMouse2.offsetX=evtMouse.offsetX;
 			evtMouse2.offsetY=evtMouse.offsetY;
			netspace.computer.onMouseDown(evtMouse2);
		}
		if("Touchpad"==strKeyname){
			netspace.computer.theActualProgram.blnMouseBlocked=false;
		}
	};
	touchpadCanvas.onMouseUp=function(evtMouse){
		var strKeyname=touchpadCanvas.findKeyname(evtMouse.offsetX,evtMouse.offsetY);
		touchpadCanvas.blnButton1Down=false;
		if("TouchpadButtonL"==strKeyname)
			netspace.computer.onMouseUp(evtMouse);
		if("TouchpadButtonR"==strKeyname)
			netspace.computer.onMouseUp(evtMouse);
		if("Touchpad"==strKeyname){
			netspace.computer.theActualProgram.blnMouseBlocked=true;
			netspace.computer.theActualProgram.prevMouseX=null;
			netspace.computer.theActualProgram.prevMouseY=null;
		}
	};
	touchpadCanvas.onMouseMove=function(evtMouse){
		var strKeyname=touchpadCanvas.findKeyname(evtMouse.offsetX,evtMouse.offsetY);
		if("Touchpad"==strKeyname){
			if(true==this.blnButton1Down){
				netspace.computer.onMouseMove(evtMouse);
				this.blnMouseInTouchpadMoving=true;
			}
		}else{
			if(true==this.blnButton1Down&&true==this.blnMouseInTouchpadMoving){
				this.blnButton1Down=false;
				this.blnMouseInTouchpadMoving=false;
				netspace.computer.theActualProgram.blnMouseBlocked=true;
				netspace.computer.theActualProgram.prevMouseX=null;
				netspace.computer.theActualProgram.prevMouseY=null;
			}
		}
	};
	touchpadCanvas.onMouseOut=function(evtMouse){
		if(true==this.blnButton1Down&&true==this.blnMouseInTouchpadMoving){
			this.blnButton1Down=false;
			this.blnMouseInTouchpadMoving=false;
			netspace.computer.theActualProgram.blnMouseBlocked=true;
			netspace.computer.theActualProgram.prevMouseX=null;
			netspace.computer.theActualProgram.prevMouseY=null;
		}
		netspace.computer.theActualProgram.blnMouseBlocked=this.blnPrevMouseBlocked;
	};
	touchpadCanvas.onMouseEnter=function(evtMouse){
		this.blnPrevMouseBlocked=netspace.computer.theActualProgram.blnMouseBlocked;
	};	
	touchpadCanvas.onMouseWheel=function(evtMouse){
		netspace.computer.onMouseWheel(evtMouse);
	};
	touchpadCanvas.onmousedown=touchpadCanvas.onMouseDown;
	touchpadCanvas.onmouseup=touchpadCanvas.onMouseUp;
	touchpadCanvas.onmousemove=touchpadCanvas.onMouseMove;
	touchpadCanvas.onmousewheel=touchpadCanvas.onMouseWheel;
	touchpadCanvas.onmouseout=touchpadCanvas.onMouseOut;
	touchpadCanvas.onmouseenter=touchpadCanvas.onMouseEnter;
	return [keyboardCanvas,touchpadCanvas];
};
Computer.prototype.drawKeyborderlines=function(keyboardCanvas){
	var I0,J0,I1,J1,lstKeynames;
	var keyboardContext=keyboardCanvas.getContext("2d");
	keyboardContext.strokeStyle="rgba("+this.lstVeryOrange[0]+","+this.lstVeryOrange[1]+","+this.lstVeryOrange[2]+","+this.lstVeryOrange[3]+")";
	var keyboarderline;
	for(var ii=0;ii<keyboardCanvas.lstKeyborderlines.length;ii++){
		keyboarderline=keyboardCanvas.lstKeyborderlines[ii];	
		I0=keyboarderline[0][0];J0=keyboarderline[0][1];I1=keyboarderline[1][0];J1=keyboarderline[1][1];
		lstKeynames=keyboarderline[2];
		keyboardContext.beginPath();
		keyboardContext.moveTo(I0,J0);
		keyboardContext.lineTo(I0,J1);
		keyboardContext.lineTo(I1,J1);
		keyboardContext.lineTo(I1,J0);
		keyboardContext.lineTo(I0,J0);
		keyboardContext.stroke();
		if("F"==lstKeynames[0]||"J"==lstKeynames[0]){
			keyboardContext.beginPath();
			keyboardContext.moveTo(I0+10,J0-10);
			keyboardContext.lineTo(I0+10+13,J0-10);
			keyboardContext.stroke();
		}
	};
};
Computer.prototype.putPixel=function(textureImage,intWidth,x,y,r,g,b,a){
	var index=(y*intWidth+x)*4;
	textureImage.data[index+0]=r;
	textureImage.data[index+1]=g;
	textureImage.data[index+2]=b;
	textureImage.data[index+3]=a;
};
Computer.prototype.listToString=function(lstScreenBuffer_text){
	var strScreenBuffer="";
	for(var ii=0;ii<lstScreenBuffer_text.length;ii++)
		if(0===lstScreenBuffer_text[ii])
			strScreenBuffer+=" ";
		else strScreenBuffer+=lstScreenBuffer_text[ii];	
	return strScreenBuffer;
};
Computer.prototype.changeComputerScreen_text=function(lstScreenBuffer_text,lstForegroundBuffer,lstBackgroundBuffer){
	if(true==netspace.blnLoad3dWorldsOnStart)
		this.changeComputerScreenTexture_text(netspace.computer.varietyManifold3D.textureCanvas,lstScreenBuffer_text,lstForegroundBuffer,lstBackgroundBuffer);
	else this.changeComputerScreenTexture_text(null,lstScreenBuffer_text,lstForegroundBuffer,lstBackgroundBuffer);
};
Computer.prototype.changeComputerScreenTexture_text=function(textureCanvas,lstScreenBuffer_text,lstForegroundBuffer,lstBackgroundBuffer){
	this.drawComputerScreenTexture_text(textureCanvas,lstScreenBuffer_text,lstForegroundBuffer,lstBackgroundBuffer);
	if(true==netspace.blnLoad3dWorldsOnStart)
		netspace.computer.varietyManifold3D.textureCanvas=textureCanvas;
	var divTextures=document.getElementById("divTextures");
	if(true==netspace.blnLoad3dWorldsOnStart){
		netspace.computer.varietyManifold3D.texture=netspace.gl.createTexture();
		netspace.gl.activeTexture(netspace.gl.TEXTURE0);
		netspace.gl.bindTexture(netspace.gl.TEXTURE_2D,netspace.computer.varietyManifold3D.texture);
		netspace.gl.texParameteri(netspace.gl.TEXTURE_2D,netspace.gl.TEXTURE_MIN_FILTER,netspace.gl.NEAREST);
		netspace.gl.texParameteri(netspace.gl.TEXTURE_2D,netspace.gl.TEXTURE_MAG_FILTER,netspace.gl.NEAREST);
		netspace.gl.texImage2D(netspace.gl.TEXTURE_2D,0,netspace.gl.RGBA,netspace.gl.RGBA,netspace.gl.UNSIGNED_BYTE,textureCanvas);
		if(1==netspace.computer.varietyManifold3D.intBlnTextureUVmapping){
			netspace.computer.varietyManifold3D.textureUVbuffer=gl.createBuffer();
			netspace.gl.bindBuffer(netspace.gl.ARRAY_BUFFER,netspace.computer.varietyManifold3D.textureUVbuffer);
			netspace.gl.bufferData(netspace.gl.ARRAY_BUFFER,netspace.computer.varietyManifold3D.arrTextureUVs,netspace.gl.STATIC_DRAW);
		}
	}
	return textureCanvas;
};
Computer.prototype.changeComputerScreen_graphics=function(lstScreenBuffer_graphics){
	if(true==netspace.blnLoad3dWorldsOnStart)
		this.changeComputerScreenTexture_graphics(netspace.computer.varietyManifold3D.textureCanvas,lstScreenBuffer_graphics);
	else this.changeComputerScreenTexture_graphics(null,lstScreenBuffer_graphics);
};
Computer.prototype.changeComputerScreenTexture_graphics=function(textureCanvas,lstScreenBuffer_graphics){
	if(false==netspace.blnLoad3dWorldsOnStart)
		this.drawComputerScreenTexture_graphics(null,lstScreenBuffer_graphics);
	else{
		this.drawComputerScreenTexture_graphics(textureCanvas,lstScreenBuffer_graphics);
		netspace.computer.varietyManifold3D.textureCanvas=textureCanvas;
		var divTextures=document.getElementById("divTextures");
		netspace.computer.varietyManifold3D.texture=netspace.gl.createTexture();
		netspace.gl.activeTexture(netspace.gl.TEXTURE0);
		netspace.gl.bindTexture(netspace.gl.TEXTURE_2D,netspace.computer.varietyManifold3D.texture);
		netspace.gl.texParameteri(netspace.gl.TEXTURE_2D,netspace.gl.TEXTURE_MIN_FILTER,netspace.gl.NEAREST);
		netspace.gl.texParameteri(netspace.gl.TEXTURE_2D,netspace.gl.TEXTURE_MAG_FILTER,netspace.gl.NEAREST);
		netspace.gl.texImage2D(netspace.gl.TEXTURE_2D,0,netspace.gl.RGBA,netspace.gl.RGBA,netspace.gl.UNSIGNED_BYTE,textureCanvas);
		if(1==netspace.computer.varietyManifold3D.intBlnTextureUVmapping){
			netspace.computer.varietyManifold3D.textureUVbuffer=gl.createBuffer();
			netspace.gl.bindBuffer(netspace.gl.ARRAY_BUFFER,netspace.computer.varietyManifold3D.textureUVbuffer);
			netspace.gl.bufferData(netspace.gl.ARRAY_BUFFER,netspace.computer.varietyManifold3D.arrTextureUVs,netspace.gl.STATIC_DRAW);
		}
	}
	return textureCanvas;
};
Computer.prototype.createLaptopTexture=function(){
	var textureCanvas=document.createElement("canvas");
	var intTextureWidth,intTextureHeight;
	intTextureWidth=1024;
	intTextureHeight=intTextureWidth;
textureCanvas.width=intTextureWidth;
textureCanvas.height=intTextureHeight;
var textureContext=textureCanvas.getContext("2d");
	var intColorNumber=1;
	var textureImage=textureContext.createImageData(intTextureWidth,intTextureHeight);
	for(var i=0;i<intTextureWidth;i++){
		for(var j=0;j<intTextureHeight;j++){
			var index=(j*intTextureWidth+i)*4;
			textureImage.data[index+0]=this.lstVeryOrange[0];
			textureImage.data[index+1]=this.lstVeryOrange[1];
			textureImage.data[index+2]=this.lstVeryOrange[2];
			textureImage.data[index+3]=this.lstVeryOrange[3];
		}
	}
	textureContext.putImageData(textureImage,0,0);
	var textureImage=textureContext.getImageData(0,0,1024,1024);
	var strScreenBuffer=document.getElementById("txtFunFunFun").value;
	this.drawComputerScreenTexture_text(textureCanvas,this.lstScreenBuffer_text);
	var lstReturn=this.drawKeyboard(textureCanvas);
	this.keyboardCanvas=lstReturn[0];
	this.touchpadCanvas=lstReturn[1];
	return textureCanvas;
};
Computer.prototype.createLaptopTexture_lite=function(){
	this.drawComputerScreenTexture_text(null,this.lstScreenBuffer_text);
	var lstReturn=this.drawKeyboard(null);
	this.keyboardCanvas=lstReturn[0];
	this.touchpadCanvas=lstReturn[1];
};
Computer.prototype.changeTexture=function(){
	var textureCanvas=document.createElement("canvas");
	var intTextureWidth,intTextureHeight;
	intTextureWidth=1024;
	intTextureHeight=intTextureWidth;
textureCanvas.width=intTextureWidth;
textureCanvas.height=intTextureHeight;
var textureContext=textureCanvas.getContext("2d");
	var intColorNumber=1;
textureContext.putImageData(this.varietyManifold3D.textureCanvas.getContext("2d").getImageData(0,0,1024,1024),0,0);
	var textureImage=textureContext.getImageData(0,0,1024,1024);
	var strScreen=document.getElementById("txtFunFunFun").value;
var screenCanvas=document.createElement("canvas");
	var intScreenWidth,intScreenHeight;
	intScreenWidth=745-283;
	intScreenHeight=977-616;
screenCanvas.width=intScreenWidth;
screenCanvas.height=intScreenHeight;
var screenContext=screenCanvas.getContext("2d");
	var screenImage=screenContext.createImageData(intScreenWidth,intScreenHeight);
	for(var i=0;i<intScreenWidth;i++){
		for(var j=0;j<intScreenHeight;j++){
			var index=(j*intScreenWidth+i)*4;
			screenImage.data[index+0]=netspace.lstColors[1][0];
			screenImage.data[index+1]=netspace.lstColors[1][1];
			screenImage.data[index+2]=netspace.lstColors[1][2];
			screenImage.data[index+3]=255;
		}
	}
screenContext.putImageData(screenImage,0,0);
	var intLineWidth=this.intScreenWidth_text-1;
	var intLineHeight=this.intScreenHeight_text-1;
	screenContext.font="10px Courier";
	screenContext.fillStyle="rgba("+150+","+150+","+150+","+255+")";
	var strString2="";
	strString2=strScreen;
	var strString3="",jj=0;
	var intI=0;
	var intJ=10;
	var intDJ=10;
	var i=intI,j=intJ;
	for(var ii=0;ii<strString2.length;ii++){
		strString3+=strString2[ii];
		jj++;
		if(jj>intLineWidth){
			screenContext.fillText(strString3,i,j);
			strString3="";
			i=0;j+=intDJ;
			jj=0;
		}
	}
	screenContext.fillText(strString3,i,j);
	screenImage=screenContext.getImageData(0,0,intScreenWidth,intScreenHeight);
	for(var i=283;i<745;i+=1){
	for(var j=616;j<977;j+=1){
			var index0=(j*intTextureWidth+i)*4;
			var index1=((intScreenHeight-(j-616))*intScreenWidth+i-283)*4;
			textureImage.data[index0+0]=screenImage.data[index1+0];
			textureImage.data[index0+1]=screenImage.data[index1+1];
			textureImage.data[index0+2]=screenImage.data[index1+2];
			textureImage.data[index0+3]=screenImage.data[index1+3];
		}
	}
	textureContext.putImageData(textureImage,0,0);
	this.varietyManifold3D.textureCanvas=textureCanvas;
	this.varietyManifold3D.texture=netspace.gl.createTexture();
	netspace.gl.activeTexture(netspace.gl.TEXTURE0);
	netspace.gl.bindTexture(netspace.gl.TEXTURE_2D,this.varietyManifold3D.texture);
	netspace.gl.texParameteri(netspace.gl.TEXTURE_2D,netspace.gl.TEXTURE_MIN_FILTER,netspace.gl.NEAREST);
	netspace.gl.texParameteri(netspace.gl.TEXTURE_2D,netspace.gl.TEXTURE_MAG_FILTER,netspace.gl.NEAREST);
	netspace.gl.texImage2D(netspace.gl.TEXTURE_2D,0,netspace.gl.RGBA,netspace.gl.RGBA,netspace.gl.UNSIGNED_BYTE,textureCanvas);
	if(1==this.varietyManifold3D.intBlnTextureUVmapping){
		this.varietyManifold3D.textureUVbuffer=gl.createBuffer();
		netspace.gl.bindBuffer(netspace.gl.ARRAY_BUFFER,this.varietyManifold3D.textureUVbuffer);
		netspace.gl.bufferData(netspace.gl.ARRAY_BUFFER,this.varietyManifold3D.arrTextureUVs,netspace.gl.STATIC_DRAW);
	}
};
Computer.prototype.installProgram=function(lstProgram){
	this.lstProgramNames.push(lstProgram[0]);
	this.lstPrograms.push(lstProgram[1]);
};
Computer.prototype.programNameInMemoryFromPID=function(intPID){
	if(intPID>=this.lstRunningPrograms.length)return null;
	return this.lstRunningPrograms[intPID][0];
};
Computer.prototype.programObjectInMemoryFromPID=function(intPID){
	if(intPID>=this.lstRunningPrograms.length)return null;
	return this.lstRunningPrograms[intPID][2];
};
Computer.prototype.programInMemory=function(strProgramName){
	for(var jj=this.lstRunningPrograms.length-1;jj>=0;jj--){
		if(strProgramName==this.lstRunningPrograms[jj][0])
			return jj;
	}
	return -1;
};
Computer.prototype._runProgram=function(strString,jj,lstString){
	this.theActualProgram=this.lstRunningPrograms[jj][2];
	this.theActualProgram.base=this;
	if(lstString.length>0)
		this.theActualProgram.strArgs=strString.substring(lstString[0].length+1,strString.length);
	else this.theActualProgram.strArgs="";
	this.theActualProgram.inits();
};
Computer.prototype.startProgram=function(strString){
	var lstString=strString.split(" ");
	var jj=-1;
	for(var ii=0;ii<this.lstProgramNames.length;ii++){
		if(lstString[0]==this.lstProgramNames[ii]){
			this.lstRunningPrograms.push([this.lstProgramNames[ii],this.lstRunningPrograms.length,new this.lstPrograms[ii](this,this)]);
			this._runProgram(strString,this.lstRunningPrograms.length-1,lstString);
			return true;
		}
	}
	return false;
};
Computer.prototype.resumeProgram=function(strString){
	var lstString=strString.split(" ");
	var jj=-1;
	for(var ii=0;ii<this.lstProgramNames.length;ii++){
		if(lstString[0]==this.lstProgramNames[ii]){
			jj=this.programInMemory(lstString[0]);
			if(jj>-1){
				this._runProgram(strString,jj,lstString);
				return true;
			}else{
				return false;
			}
		}
	}
	return false;
};
Computer.prototype.runProgram=function(strString){
	var lstString=strString.split(" ");
	var jj=-1;
	for(var ii=0;ii<this.lstProgramNames.length;ii++){
		if(lstString[0]==this.lstProgramNames[ii]){
			jj=this.programInMemory(lstString[0]);
			if(jj>-1){
				this._runProgram(strString,jj,lstString);
				return true;
			}else{
				this.lstRunningPrograms.push([this.lstProgramNames[ii],this.lstRunningPrograms.length,new this.lstPrograms[ii](this,this)]);
				this._runProgram(strString,this.lstRunningPrograms.length-1,lstString);
				return true;
			}
		}
	}
	return false;
};
Computer.prototype.inits=function(){
	this.installProgram(["snake",Program_SnakeGame]);
	this.installProgram(["startx",Program_startx]);
	this.installProgram(["txtFunFunFun",Program_txtFunFunFun]);
	this.installProgram(["binarysnake",Program_BinarySnakeGame]);
	this.installProgram(["dictionarytraining",Program_DictionaryTraining]);
	this.installProgram(["texteditor",Program_TextEditor]);
};
Computer.prototype.updateScreenMesh=function(){
	//mhdmodiff
	var texture=new THREE.CanvasTexture(this.screenCanvas);
	texture.minFilter = THREE.LinearFilter;
	texture.wrapS = THREE.ClampToEdgeWrapping;
	texture.wrapT = THREE.ClampToEdgeWrapping;
	//this.screen.material.map=texture;
	for(var ii=0;ii<window.mhd.lstComputerScreens.length;ii++){
		window.mhd.lstComputerScreens[ii].material.map=texture;
	}
};
Computer.prototype.loopFunction=function(currentFrameTime){
	if(null!=this.theActualProgram){
		this.theActualProgram.loopFunction(currentFrameTime);
		if(true==this.blnTextMode)
			this.changeComputerScreen_text(this.lstScreenBuffer_text,this.lstForegroundBuffer,this.lstBackgroundBuffer);
		else this.changeComputerScreen_graphics(this.lstScreenBuffer_graphics);
		//mhdmodiff
		this.updateScreenMesh();
	}
};
Computer.prototype.onKeyDown=function(evtEvent){
	if(true==this.chkComputerKeyboardOff.checked)return;
	if("F10"==evtEvent.key){
		netspace.shaderThinkpad.shaderThinkpadManager.blnShowComputerTextScreenText=(true==netspace.shaderThinkpad.shaderThinkpadManager.blnShowComputerTextScreenText)?false:true;
		var ShaderThinkpadManager_chkShowComputerTextScreenText=document.getElementById("ShaderThinkpadManager_chkShowComputerTextScreenText");
		ShaderThinkpadManager_chkShowComputerTextScreenText.checked=netspace.shaderThinkpad.shaderThinkpadManager.blnShowComputerTextScreenText;
	}
	if(null!=this.theActualProgram){
		this.theActualProgram.onKeyDown(evtEvent);
		try{
			if(true==netspace.chkPreventDefaultKeyactions.checked)
				evtEvent.preventDefault();
		}catch(xcp){}
	}
};
Computer.prototype.onKeyUp=function(evtEvent){
	if(true==this.chkComputerKeyboardOff.checked)return;
	if(null!=this.theActualProgram){
		this.theActualProgram.onKeyUp(evtEvent);
		try{
			if(true==netspace.chkPreventDefaultKeyactions.checked)
				evtEvent.preventDefault();
		}catch(xcp){}
	}
};
Computer.prototype.onMouseDown=function(evtEvent){
	if(true==this.chkComputerMouseOff.checked)return;
	if(null!=this.theActualProgram)
		this.theActualProgram.onMouseDown(evtEvent);
};
Computer.prototype.onMouseUp=function(evtEvent){
	if(true==this.chkComputerMouseOff.checked)return;
	if(null!=this.theActualProgram)
		this.theActualProgram.onMouseUp(evtEvent);
};
Computer.prototype.onMouseWheel=function(evtEvent){
	if(true==this.chkComputerMouseOff.checked)return;
	if(null!=this.theActualProgram)
		this.theActualProgram.onMouseWheel(evtEvent);
};
Computer.prototype.onMouseMove=function(evtEvent){
	if(true==this.chkComputerMouseOff.checked)return;
	if(null!=this.theActualProgram)
		this.theActualProgram.onMouseMove(evtEvent);
};
Computer.prototype.getChar_text=function(evtEvent,programPointer){
	return evtEvent.key;
};
Computer.prototype.clearScreen_text=function(){
	this.lstScreenBuffer_text=this.spacesList(this.intScreenWidth_text*this.intScreenHeight_text);
	this.lstForegroundBuffer=netspace.emptyList(this.intScreenWidth_text*this.intScreenHeight_text);
	this.lstBackgroundBuffer=netspace.emptyList(this.intScreenWidth_text*this.intScreenHeight_text);
	var intR,intG,intB,intA;
	intR=this.lstConsoleGray[0];intG=this.lstConsoleGray[1];intB=this.lstConsoleGray[2];intA=this.lstConsoleGray[3];

	for(var ii=0;ii<this.lstForegroundBuffer.length;ii++){
		this.lstForegroundBuffer[ii]=[intR,intG,intB,intA];
		this.lstBackgroundBuffer[ii]=[0,0,0,255];
	}
};
Computer.prototype.clearScreen_graphics=function(){
	this.lstScreenBuffer_graphics=[];
	for(var ii=0;ii<4*this.intScreenWidth_graphics*this.intScreenHeight_graphics;ii++)
		this.lstScreenBuffer_graphics.push(255);
};
Computer.prototype.drawMouse_text=function(programPointer){
	this.lstScreenBuffer_text[this.getScreenIndex_text(Math.round(this.fltMouseX),Math.round(this.fltMouseY))]=String.fromCharCode(73);
};
Computer.prototype.onMouseMove_text=function(evtEvent,programPointer){
	if(true==programPointer.blnMouseBlocked)return;
	if(true==netspace.chk3dMouseMode.checked){
		var diffX,diffY;
		//mhdmodiff--
		//if(null==programPointer.prevMouseX||null==programPointer.prevMouseY){
		if(true==netspace.nonNumber(programPointer.prevMouseX)||true==netspace.nonNumber(programPointer.prevMouseY)){
			programPointer.prevMouseX=evtEvent.offsetX;
			programPointer.prevMouseY=evtEvent.offsetY;
			return;
		}
		diffX=evtEvent.offsetX-programPointer.prevMouseX;
		diffY=evtEvent.offsetY-programPointer.prevMouseY;
		programPointer.prevMouseX=evtEvent.offsetX;
		programPointer.fltMouseX+=programPointer.fltMouseSpeed*diffX;
		programPointer.prevMouseY=evtEvent.offsetY;
		programPointer.fltMouseY+=programPointer.fltMouseSpeed*diffY;
	}else{
		var fltMouseX,fltMouseY;
		fltMouseX=evtEvent.offsetX/this.intFontWidth;
		fltMouseY=evtEvent.offsetY/this.intFontHeight;
		//mhdmodiff--
		//if(null==programPointer.prevMouseX||null==programPointer.prevMouseY){
		if(true==netspace.nonNumber(programPointer.prevMouseX)||true==netspace.nonNumber(programPointer.prevMouseY)){
			programPointer.prevMouseX=fltMouseX;
			programPointer.prevMouseY=fltMouseY;
		}
		programPointer.prevMouseX=fltMouseX;
		programPointer.fltMouseX=fltMouseX;
		programPointer.prevMouseY=fltMouseY;
		programPointer.fltMouseY=fltMouseY;
	}
	if(programPointer.fltMouseX<0)programPointer.fltMouseX=0;
	if(programPointer.fltMouseX>this.intScreenWidth_text-1)programPointer.fltMouseX=this.intScreenWidth_text-1;
	if(programPointer.fltMouseY<0)programPointer.fltMouseY=0;
	if(programPointer.fltMouseY>this.intScreenHeight_text-1)programPointer.fltMouseY=this.intScreenHeight_text-1;
};
var Program_BashConstructor=function(that,computer,base){
		that.computer=computer;
		that.base=base;
		that.computer.clearScreen_text();
		that.lstCommandsHistory=[];
		that.intCommandFromHistory=null;
		that.strPromptNotInHistory=null;
		that.arrScreenContent=[""];
		that.strPromptPrefix="user@computer$";
		that.strPrompt=that.strPromptPrefix+"";
		that.lstCursor=[that.strPromptPrefix.length,0];
		that.intPromptCursor=that.strPromptPrefix.length;
		that.lstShellCommandNames=["clear","echo","fg","new","jobs","interpret","date"];
		that.lstShellCommands=[that.clear,that.echo,that.fg,that.new,that.jobs,that.interpret,that.date];
		that.strArgs="";
};
var Program_BashConstructor_strF=function(that,computer,base){
};
var Program_Bash=function(computer,base){
	Program_BashConstructor(this,computer,base);
	Program_BashConstructor_strF(this,computer,base);
};
Program_Bash.prototype.inits=function(that,strArgs){
	this.clear(this,null);
};
Program_Bash.prototype.clear=function(that,strArgs){
	that.arrScreenContent=[""];
	that.strPrompt=that.strPromptPrefix+"";
	that.lstCursor=[that.strPromptPrefix.length,0];
	that.printPrompt();
};
Program_Bash.prototype.echo=function(that,strArgs){
	that.print(strArgs);
	that.enterEnter(false);
};
Program_Bash.prototype.interpret=function(that,strArgs){
	that.print(strArgs);
	that.enterEnter(false);
	eval(strArgs);
};
Program_Bash.prototype.fg=function(that,strArgs){
	that.enterEnter(false);
	var lstArgs=strArgs.split(" ");
	var strProgramName=null;
	var strProgramArgs=null;
	var intPID=null;
	if(0==strArgs.length){
		if(that.computer.lstRunningPrograms.length>0){
			intPID=that.computer.lstRunningPrograms.length-1;
			strProgramName=that.base.programNameInMemoryFromPID(intPID);
			strProgramArgs=that.base.programObjectInMemoryFromPID(intPID).strArgs;
			if(null!=strProgramName)that.base._runProgram(strProgramName+" "+strProgramArgs,intPID,[strProgramName,strProgramArgs]);
		}
		return;
	}
	intPID=parseInt(lstArgs[0]);
	if(false==netspace.nonNumber(intPID)){
		strProgramName=that.base.programNameInMemoryFromPID(intPID);
		strProgramArgs=that.base.programObjectInMemoryFromPID(intPID).strArgs;
		if(null!=strProgramName)that.base._runProgram(strProgramName+" "+strProgramArgs,intPID,[strProgramName,strProgramArgs]);
	}else that.base.resumeProgram(strArgs);
};
Program_Bash.prototype.new=function(that,strArgs){
	/*that behaviour is different from standard one
	conversely: runProgram by default, new to startProgram*/
	that.enterEnter(false);
	that.base.startProgram(strArgs);
};
Program_Bash.prototype.jobs=function(that,strArgs){
	var strLine="";
	for(var intPID=0;intPID<that.computer.lstRunningPrograms.length;intPID++){
		strLine=intPID+"   "+that.computer.lstRunningPrograms[intPID][0]+","+that.computer.lstRunningPrograms[intPID][1]+","+that.computer.lstRunningPrograms[intPID][2].strArgs;
		that.echo(that,strLine);
	}
};
Program_Bash.prototype.date=function(that,strArgs){
	var nowDate=new Date();
	var strDate="";
	/*strDate=nowDate.toUTCString();*/
        var intSecond=nowDate.getSeconds();
        var intMinute=nowDate.getMinutes();
        var intHour=nowDate.getHours();
        var intMonthDay=nowDate.getDate();
        var intDay=nowDate.getDay();
        var intMonth=nowDate.getMonth();
        var intYear=nowDate.getFullYear();
	var lstStrDays=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];
	var lstStrMonths=["January","February","March","April","May","June","July","August","September","October","November","December"];
	strDate=flush(""+intHour,2)+":"+flush(""+intMinute,2)+":"+flush(""+intSecond,2)+" "+lstStrDays[intDay]+" "+intMonthDay+". "+lstStrMonths[intMonth]+" "+intYear;
	that.echo(that,strDate);
};
Program_Bash.prototype.editPrompt=function(strChar){
	this.strPrompt=this.strPrompt.substring(0,this.intPromptCursor)+strChar+this.strPrompt.substring(this.intPromptCursor,this.strPrompt.length);
	this.intPromptCursor+=strChar.length;
	this.printPrompt();
};
Program_Bash.prototype.interpretString=function(strString){
	for(var ii=0;ii<this.lstShellCommands.length;ii++){
		if(strString.substring(0,this.lstShellCommandNames[ii].length)==this.lstShellCommandNames[ii]){
			this.lstShellCommands[ii](this,strString.substring(this.lstShellCommandNames[ii].length+1,strString.length));
			return;
		}
	}
	if(true==this.base.runProgram(strString)) return;
	if(strString.length>0)
		this.echo(this,strString+": command not found");
};
Program_Bash.prototype.interpretPrompt=function(){
	var strString=this.strPrompt.substring(this.strPromptPrefix.length,this.strPrompt.length);
	if(strString.length>0)
		this.lstCommandsHistory.push(strString);
	this.intCommandFromHistory=null;
	this.interpretString(strString);
};
Program_Bash.prototype.enterEnter=function(blnInterpret){
	this.newline();
	if(true==blnInterpret)
		this.interpretPrompt();
	this.strPrompt=this.strPromptPrefix+"";
	this.intPromptCursor=this.strPrompt.length;
	this.printPrompt();
};
Program_Bash.prototype.flushActualPromptPrev=function(){
	var strPrompt="";
	for(var ii=0;ii<this.lstOnelinePrompts.length;ii++)
		strPrompt+=this.lstOnelinePrompts[ii];
	this.lstOnelinePrompts=[];
	return strPrompt+this.strPrompt;
};
Program_Bash.prototype.onKeyDown=function(evtEvent){
	switch(evtEvent.key){
		case "ArrowUp":
			if(null==this.intCommandFromHistory){
				this.strPromptNotInHistory=this.strPrompt;
				this.intCommandFromHistory=this.lstCommandsHistory.length-1;
				var intActualPromptLines=Math.ceil((this.strPrompt.length)/this.base.intScreenWidth_text);
				for(var ii=intActualPromptLines-1;ii>0;ii--){
					if(this.arrScreenContent.length>1)
						this.arrScreenContent.splice(this.arrScreenContent.length-ii-1,1);
				}
				this.strPrompt=this.strPromptPrefix+this.lstCommandsHistory[this.intCommandFromHistory];
				this.intPromptCursor=this.strPrompt.length;
				this.printPromptCore();
			}else{
				if(this.intCommandFromHistory>0){
					this.intCommandFromHistory--;
				var intActualPromptLines=Math.ceil((this.strPrompt.length)/this.base.intScreenWidth_text);
				for(var ii=intActualPromptLines-1;ii>0;ii--){
					if(this.arrScreenContent.length>1)
						this.arrScreenContent.splice(this.arrScreenContent.length-ii-1,1);
				}
					this.strPrompt=this.strPromptPrefix+this.lstCommandsHistory[this.intCommandFromHistory];
					this.intPromptCursor=this.strPrompt.length;
					this.printPromptCore();
				}
			}
			break;
		case "ArrowRight":
			if(this.intPromptCursor<this.strPrompt.length){this.intPromptCursor++;
				this.printPrompt();
			}
			break;
		case "ArrowDown":
			if(null!=this.intCommandFromHistory){
				if(this.intCommandFromHistory<this.lstCommandsHistory.length-1){
					this.intCommandFromHistory++;
					var intActualPromptLines=Math.ceil((this.strPrompt.length)/this.base.intScreenWidth_text);
					for(var ii=intActualPromptLines-1;ii>0;ii--){
						if(this.arrScreenContent.length>1)
							this.arrScreenContent.splice(this.arrScreenContent.length-ii-1,1);
					}
					this.strPrompt=this.strPromptPrefix+this.lstCommandsHistory[this.intCommandFromHistory];
					this.intPromptCursor=this.strPrompt.length;
					this.printPromptCore();
				}else{
					this.intCommandFromHistory=null;
					var intActualPromptLines=Math.ceil((this.strPrompt.length)/this.base.intScreenWidth_text);
					for(var ii=intActualPromptLines-1;ii>0;ii--){
						if(this.arrScreenContent.length>1)
							this.arrScreenContent.splice(this.arrScreenContent.length-ii-1,1);
					}
					this.strPrompt=this.strPromptNotInHistory;
					this.intPromptCursor=this.strPrompt.length;
					this.printPromptCore();
				}
			}
			break;
		case "ArrowLeft":
			if(this.intPromptCursor>this.strPromptPrefix.length){
				this.intPromptCursor--;
				this.printPrompt();
			}
			break;
		case "Enter":
				this.enterEnter(true);
					break;
		case "Backspace":
			if(this.intPromptCursor>this.strPromptPrefix.length){
				var intActualPromptLines=Math.ceil((this.strPrompt.length)/this.base.intScreenWidth_text);
				for(var ii=intActualPromptLines-1;ii>0;ii--){
					if(this.arrScreenContent.length>1)
						this.arrScreenContent.splice(this.arrScreenContent.length-ii-1,1);
				}
				this.strPrompt=this.strPrompt.substring(0,this.intPromptCursor-1)+this.strPrompt.substring(this.intPromptCursor,this.strPrompt.length);
				this.intPromptCursor--;
				this.printPromptCore();
			}
			break;
		case "Delete":
			if(this.intPromptCursor<this.strPrompt.length){
				var intActualPromptLines=Math.ceil((this.strPrompt.length)/this.base.intScreenWidth_text);
				for(var ii=intActualPromptLines-1;ii>0;ii--){
					if(this.arrScreenContent.length>1)
						this.arrScreenContent.splice(this.arrScreenContent.length-ii-1,1);
				}
				this.strPrompt=this.strPrompt.substring(0,this.intPromptCursor)+this.strPrompt.substring(this.intPromptCursor+1,this.strPrompt.length);
				this.printPromptCore();
			}
			break;
			
			break;
		case "CapsLock":break;
		case "Shift":if(1==evtEvent.location){};break;
		case "Shift":if(2==evtEvent.location){};break;
		default:
		var strChar=this.computer.getChar_text(evtEvent,this);
		if("string"==typeof(strChar)&&1==strChar.length)this.editPrompt(strChar);
		if("string"==typeof(strChar)&&strChar.length>1&&strChar.charCodeAt(0)>255)this.editPrompt(strChar);
			break;
	}
};
Program_Bash.prototype.onKeyUp=function(evtEvent){
};
Program_Bash.prototype.onMouseDown=function(evtEvent){
};
Program_Bash.prototype.onMouseUp=function(evtEvent){
};
Program_Bash.prototype.onMouseWheel=function(evtEvent){
};
Program_Bash.prototype.drawMouse=function(){
	this.base.drawMouse_text(this);
};
Program_Bash.prototype.onMouseMove=function(evtEvent){
	this.base.onMouseMove_text(evtEvent,this);
};
Program_Bash.prototype.drawScreenContent=function(){
	this.base.clearScreen_text();
	var intR,intG,intB,intA;
	intR=this.computer.lstConsoleGray[0];intG=this.computer.lstConsoleGray[1];intB=this.computer.lstConsoleGray[2];intA=this.computer.lstConsoleGray[3];
	this.base.lstBackgroundBuffer[this.base.getScreenIndex_text(this.lstCursor[0],this.lstCursor[1])]=[intR,intG,intB,intA];
	this.base.lstForegroundBuffer[this.base.getScreenIndex_text(this.lstCursor[0],this.lstCursor[1])]=[0,0,0,255];
	for(var i=0;i<this.arrScreenContent.length;i++){
		for(var j=0;j<this.arrScreenContent[i].length;j++){
			this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(j,i)]=this.arrScreenContent[i][j];
		}
	}
};
Program_Bash.prototype.newline=function(){
	this.arrScreenContent.push("");
	if(this.lstCursor[1]<this.base.intScreenHeight_text-1){this.lstCursor[1]++;this.lstCursor[0]=0;
	}else this.lstCursor[0]=0;
	this.updateDimensions();
};
Program_Bash.prototype.updateDimensions=function(){
	if(this.arrScreenContent.length>this.base.intScreenHeight_text){
		var intDifference=this.arrScreenContent.length-this.base.intScreenHeight_text;
		var newArrScreenContent=[];
		for(var ii=intDifference;ii<this.arrScreenContent.length;ii++){
				newArrScreenContent.push(this.arrScreenContent[ii]);
		}
		this.arrScreenContent=newArrScreenContent;
	}
	var intPrevLineY=this.arrScreenContent.length-1;
	var intCursorY=Math.floor(intPrevLineY+this.intPromptCursor/this.base.intScreenWidth_text);
	var intCursorX=this.intPromptCursor%(this.base.intScreenWidth_text);
	this.lstCursor=[intCursorX,intCursorY];
};
Program_Bash.prototype.print=function(strString){
		/*lstScreenBuffer[0] holds strString.length==1*/
		var intEnter=strString.indexOf(String.fromCharCode(10));
		if(-1==intEnter)intEnter=strString.indexOf(String.fromCharCode(13));
		if(-1!=intEnter){
			this.print(strString.substring(0,intEnter));
			this.newline();
			this.print(strString.substring(intEnter+1,strString.length));
		}
		else{
			if(strString.length<=this.base.intScreenWidth_text){
				this.arrScreenContent[this.arrScreenContent.length-1]=strString;
			}
			else{
				this.print(strString.substring(0,this.base.intScreenWidth_text));
				this.newline();
				this.print(strString.substring(this.base.intScreenWidth_text,strString.length));
			}
		}
};
Program_Bash.prototype.printPrompt=function(){
	var intActualPromptLines=Math.ceil((this.strPrompt.length-1)/this.base.intScreenWidth_text);
	for(var ii=intActualPromptLines-1;ii>0;ii--){
		if(this.arrScreenContent.length>1)
			this.arrScreenContent.splice(this.arrScreenContent.length-ii-1,1);
	}
	this.printPromptCore();
};
Program_Bash.prototype.printPromptCore=function(){
	var intActualPromptLines=Math.ceil((this.strPrompt.length)/this.base.intScreenWidth_text);
	var intPrevLineY=this.arrScreenContent.length-1;
	this.print(this.strPrompt);
	var intCursorY=Math.floor(intPrevLineY+this.intPromptCursor/this.base.intScreenWidth_text);
	var intCursorX=this.intPromptCursor%(this.base.intScreenWidth_text);
	this.lstCursor=[intCursorX,intCursorY];
};
Program_Bash.prototype.loopFunction=function(currentFrameTime){
	this.drawScreenContent();
};
Program_Bash.prototype.stopFinalizations=function(strString){
};
Program_Bash.prototype.exitFinalizations=function(strString){
};
var Program_SnakeGameConstructor=function(that,computer,base){
	that.computer=computer;
	that.base=base;
	that.computer.clearScreen_text();
	that.intPoints=0;
	//mhdmodiff--
	//this.intAppleEaten=0;
	that.intAppleEaten=0;
	that.intGameMode=4;
	that.fltMouseSpeed=0.5;
	that.intGameSpeed_ms=250;
	that.prevMouseX=null;
	that.prevMouseY=null;
	that.fltMouseX=0;
	that.fltMouseY=0;
	that.blnMouseBlocked=false;
	that.intMinApple=1;
	that.intMaxApple=2350;
	that.blnScreensaverPlay=false;
	that.blnCancelScreensaverPlay=true;
	that.prevStrArgs=null;
	that.strArgs="";
	that.gameModeGameOver();
};
var Program_SnakeGameConstructor_strF=function(that,computer,base){
};
var Program_SnakeGame=function(computer,base){
	Program_SnakeGameConstructor(this,computer,base);
	Program_SnakeGameConstructor_strF(this,computer,base);
};
Program_SnakeGame.prototype.gameModeGameOver=function(){
	this.base.clearScreen_text();
	var strGameOver="Points: "+this.intPoints+" Game over - press p to play";
	for(var ii=0;ii<strGameOver.length;ii++)
		this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(Math.floor((this.base.intScreenWidth_text-1)/2.-strGameOver.length/2.+ii),Math.floor((this.base.intScreenHeight_text-1)/2.))]=strGameOver[ii];
	this.drawMouse();
};
Program_SnakeGame.prototype.gameModePause=function(){
	this.base.clearScreen_text();
	var strGamePause="Pause - press p to play";
	for(var ii=0;ii<strGamePause.length;ii++)
		this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(Math.floor((this.base.intScreenWidth_text-1)/2.-strGamePause.length/2.+ii),Math.floor((this.base.intScreenHeight_text-1)/2.))]=strGamePause[ii];
	this.drawMouse();
};
Program_SnakeGame.prototype.roundRand=function(min,max){
	return min+Math.round(Math.abs(max-min)*Math.random());
};
Program_SnakeGame.prototype.addRandomApple=function(){
	var x,y;
	var blnGoodApple=false;
	while(false==blnGoodApple){
		x=this.roundRand(1,this.base.intScreenWidth_text-2);
		y=this.roundRand(1,this.base.intScreenHeight_text-2);
		blnGoodApple=true;
		for(var ii=0;ii<this.theSnake.length;ii++)
			if(this.theSnake[ii][0]==x&&this.theSnake[ii][1]==y)
				blnGoodApple=false;
	}
	var value=this.roundRand(this.intMinApple,this.intMaxApple);
	this.theApples.push([x,y,value]);
};
Program_SnakeGame.prototype.eatApple=function(intAppleNumber){
	var x,y,intValue;
	var lstReturn=this.theApples[intAppleNumber];
	x=lstReturn[0];
	y=lstReturn[1];
	intValue=lstReturn[2];
	this.theApples.splice(intAppleNumber,1);
	var newSnake=[];
	switch(this.intMoveDirection){
		case 0:newSnake.push([this.theSnake[0][0],this.theSnake[0][1]-1]);break;
		case 1:newSnake.push([this.theSnake[0][0]+1,this.theSnake[0][1]]);break;
		case 2:newSnake.push([this.theSnake[0][0],this.theSnake[0][1]+1]);break;
		case 3:newSnake.push([this.theSnake[0][0]-1,this.theSnake[0][1]]);break;
	}
	for(var ii=0;ii<this.theSnake.length;ii++)
		newSnake.push(this.theSnake[ii]);
	this.theSnake=newSnake;
	if(true==this.blnScreensaverPlay){
		var newSnakeMoveDirections=[];
		newSnakeMoveDirections.push(this.intMoveDirection);
		for(var ii=0;ii<this.theSnake.length;ii++)
			newSnakeMoveDirections.push(this.theSnakeMoveDirections[ii]);
		this.theSnakeMoveDirections=newSnakeMoveDirections;
	}
	this.intPoints++;
	this.intAppleEaten=intValue;
};
Program_SnakeGame.prototype.checkAppleEaten=function(){
	for(var ii=0;ii<this.theApples.length;ii++)
		if(this.theApples[ii][0]==this.theSnake[0][0]&&this.theApples[ii][1]==this.theSnake[0][1])
			return ii;
	return -1;
};
Program_SnakeGame.prototype.checkCollisions=function(){
	for(var ii=0;ii<this.theSnake.length;ii++){
		for(var jj=0;jj<this.theSnake.length;jj++){
			if(ii!=jj&&this.theSnake[ii][0]==this.theSnake[jj][0]&&this.theSnake[ii][1]==this.theSnake[jj][1])
			return true;
		}
	}
	if(0==this.theSnake[0][0])
		return true;
	if(0==this.theSnake[0][1])
		return true;
	if(this.base.intScreenWidth_text-1==this.theSnake[0][0])
		return true;
	if(this.base.intScreenHeight_text-1==this.theSnake[0][1])
		return true;
	return false;
};
Program_SnakeGame.prototype.checkPotentialCollisions=function(intMoveDirection){
	var newSnake=[];
	var newSnakeMoveDirections=[];
	switch(intMoveDirection){
		case 0:newSnake.push([this.theSnake[0][0],this.theSnake[0][1]-1]);break;
		case 1:newSnake.push([this.theSnake[0][0]+1,this.theSnake[0][1]]);break;
		case 2:newSnake.push([this.theSnake[0][0],this.theSnake[0][1]+1]);break;
		case 3:newSnake.push([this.theSnake[0][0]-1,this.theSnake[0][1]]);break;
	}
	newSnakeMoveDirections.push(intMoveDirection);
	for(var ii=0;ii<this.theSnake.length;ii++){
		newSnake.push(this.theSnake[ii]);
		newSnakeMoveDirections.push(this.theSnakeMoveDirections[ii]);
	}
	for(var ii=0;ii<newSnake.length;ii++){
		for(var jj=0;jj<newSnake.length;jj++){
			if(ii!=jj&&newSnake[ii][0]==newSnake[jj][0]&&newSnake[ii][1]==newSnake[jj][1])
			return true;
		}
	}
	if(0==newSnake[0][0])
		return true;
	if(0==newSnake[0][1])
		return true;
	if(this.base.intScreenWidth_text-1==newSnake[0][0])
		return true;
	if(this.base.intScreenHeight_text-1==newSnake[0][1])
		return true;
	for(var ii=2;ii<newSnake.length;ii++){
		if(newSnake[ii][0]==newSnake[0][0]-1&&newSnake[ii][1]==newSnake[0][1]&&newSnakeMoveDirections[ii]==newSnakeMoveDirections[0])
			return true;
		if(newSnake[ii][0]==newSnake[0][0]+1&&newSnake[ii][1]==newSnake[0][1]&&newSnakeMoveDirections[ii]==newSnakeMoveDirections[0])
			return true;
		if(newSnake[ii][0]==newSnake[0][0]&&newSnake[ii][1]==newSnake[0][1]-1&&newSnakeMoveDirections[ii]==newSnakeMoveDirections[0])
			return true;
		if(newSnake[ii][0]==newSnake[0][0]&&newSnake[ii][1]==newSnake[0][1]+1&&newSnakeMoveDirections[ii]==newSnakeMoveDirections[0])
			return true;
	}
	return false;
};
Program_SnakeGame.prototype.screensaverMovement=function(){
	if(true==this.blnCancelScreensaverPlay){
		this.blnCancelScreensaverPlay=false;
		return;
	}
	if(false==this.checkPotentialCollisions(this.intMoveDirection)){
		if(this.theSnake[0][0]==this.theApples[0][0]&&this.theSnake[0][1]==this.theApples[0][1])
			return;
	}else{

			if(0==this.intMoveDirection)
				if(this.theSnake[0][0]>=this.theApples[0][0]){
					if(false==this.checkPotentialCollisions(3)){
						this.intMoveDirection=3;
						return;
					}else{
						if(false==this.checkPotentialCollisions(1)){
							this.intMoveDirection=1;
							return;
						}
					}
				}else{
					if(false==this.checkPotentialCollisions(1)){
						this.intMoveDirection=1;
						return;
					}else{
						if(false==this.checkPotentialCollisions(3)){
							this.intMoveDirection=3;
							return;
						}

					}
				}
			if(3==this.intMoveDirection)
				if(this.theSnake[0][1]>=this.theApples[0][1]){
					if(false==this.checkPotentialCollisions(0)){
						this.intMoveDirection=0;
						return;
					}else{
						if(false==this.checkPotentialCollisions(2)){
							this.intMoveDirection=2;
							return;
						}
					}
				}else{
					if(false==this.checkPotentialCollisions(2)){
						this.intMoveDirection=2;
						return;
					}else{
						if(false==this.checkPotentialCollisions(0)){
							this.intMoveDirection=0;
							return;
						}
					}
				}
			if(2==this.intMoveDirection)
				if(this.theSnake[0][0]>=this.theApples[0][0]){
					if(false==this.checkPotentialCollisions(3)){
						this.intMoveDirection=3;
						return;
					}else{
						if(false==this.checkPotentialCollisions(1)){
							this.intMoveDirection=1;
							return;
						}
					}
				}else{
					if(false==this.checkPotentialCollisions(1)){
						this.intMoveDirection=1;
						return;
					}else{
						if(false==this.checkPotentialCollisions(3)){
							this.intMoveDirection=3;
							return;
						}
					}
				}
			if(1==this.intMoveDirection)
				if(this.theSnake[0][1]>=this.theApples[0][1]){
					if(false==this.checkPotentialCollisions(0)){
						this.intMoveDirection=0;
						return;
					}else{
						if(false==this.checkPotentialCollisions(2)){
							this.intMoveDirection=2;
							return;
						}
					}
				}else{
					if(false==this.checkPotentialCollisions(2)){
						this.intMoveDirection=2;
						return;
					}else{
						if(false==this.checkPotentialCollisions(0)){
							this.intMoveDirection=0;
							return;
						}
					}
				}



	}

	if(0==this.intMoveDirection&&this.theSnake[0][1]-1<this.theApples[0][1])
		if(this.theSnake[0][0]>=this.theApples[0][0]){
			if(false==this.checkPotentialCollisions(3)){
				this.intMoveDirection=3;
				return;
			}else{
				if(false==this.checkPotentialCollisions(1)){
					this.intMoveDirection=1;
					return;
				}
			}
		}else{
			if(false==this.checkPotentialCollisions(1)){
				this.intMoveDirection=1;
				return;
			}else{
				if(false==this.checkPotentialCollisions(3)){
					this.intMoveDirection=3;
					return;
				}

			}
		}
	if(3==this.intMoveDirection&&this.theSnake[0][0]-1<this.theApples[0][0])
		if(this.theSnake[0][1]>=this.theApples[0][1]){
			if(false==this.checkPotentialCollisions(0)){
				this.intMoveDirection=0;
				return;
			}else{
				if(false==this.checkPotentialCollisions(2)){
					this.intMoveDirection=2;
					return;
				}
			}
		}else{
			if(false==this.checkPotentialCollisions(2)){
				this.intMoveDirection=2;
				return;
			}else{
				if(false==this.checkPotentialCollisions(0)){
					this.intMoveDirection=0;
					return;
				}
			}
		}
	if(2==this.intMoveDirection&&this.theSnake[0][1]+1>this.theApples[0][1])
		if(this.theSnake[0][0]>=this.theApples[0][0]){
			if(false==this.checkPotentialCollisions(3)){
				this.intMoveDirection=3;
				return;
			}else{
				if(false==this.checkPotentialCollisions(1)){
					this.intMoveDirection=1;
					return;
				}
			}
		}else{
			if(false==this.checkPotentialCollisions(1)){
				this.intMoveDirection=1;
				return;
			}else{
				if(false==this.checkPotentialCollisions(3)){
					this.intMoveDirection=3;
					return;
				}
			}
		}
	if(1==this.intMoveDirection&&this.theSnake[0][0]+1>this.theApples[0][0])
		if(this.theSnake[0][1]>=this.theApples[0][1]){
			if(false==this.checkPotentialCollisions(0)){
				this.intMoveDirection=0;
				return;
			}else{
				if(false==this.checkPotentialCollisions(2)){
					this.intMoveDirection=2;
					return;
				}
			}
		}else{
			if(false==this.checkPotentialCollisions(2)){
				this.intMoveDirection=2;
				return;
			}else{
				if(false==this.checkPotentialCollisions(0)){
					this.intMoveDirection=0;
					return;
				}
			}
		}
};
Program_SnakeGame.prototype.updateGame=function(){
	if(true==this.checkCollisions()){
		this.intGameMode=4;
		return;
	}
	if(true==this.blnScreensaverPlay){
		this.screensaverMovement();
	}
	var intAppleNumber=this.checkAppleEaten();
	if(-1!=intAppleNumber){
		this.eatApple(intAppleNumber);
		this.addRandomApple();
	}else this.moveSnake();
};
Program_SnakeGame.prototype.moveSnake=function(){
	for(var ii=this.theSnake.length-2;ii>=0;ii--){
		this.theSnake[ii+1][0]=this.theSnake[ii][0];
		this.theSnake[ii+1][1]=this.theSnake[ii][1];
	}
	switch(this.intMoveDirection){
		case 0:this.theSnake[0][1]--;break;
		case 1:this.theSnake[0][0]++;break;
		case 2:this.theSnake[0][1]++;break;
		case 3:this.theSnake[0][0]--;break;
	}
	if(true==this.blnScreensaverPlay){
		for(var ii=this.theSnakeMoveDirections.length-2;ii>=0;ii--){
			this.theSnakeMoveDirections[ii+1]=this.theSnakeMoveDirections[ii];
		}
		this.theSnakeMoveDirections[0]=this.intMoveDirection;
	}
};
Program_SnakeGame.prototype.drawWalls=function(){
	for(var i=0;i<=this.base.intScreenWidth_text-1;i++){
		this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(i,0)]="=";
		this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(i,this.base.intScreenHeight_text-1)]="=";
	}
	for(var j=1;j<=this.base.intScreenHeight_text;j++){
		this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(0,j)]="|";
		this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(this.base.intScreenWidth_text-1,j)]="|";
	}
};
Program_SnakeGame.prototype.drawSnake=function(){
	var i,j;
	var lstReturn=this.theSnake[0];
	i=lstReturn[0];
	j=lstReturn[1];
	this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(i,j)]="@";
	for(var ii=1;ii<this.theSnake.length;ii++){
		lstReturn=this.theSnake[ii];
		i=lstReturn[0];
		j=lstReturn[1];
		this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(i,j)]="#";
	}
};
Program_SnakeGame.prototype.intAppleOnList=function(lstExceptions,intAppleNumber){
	var intNumber=-1;
	for(var ii=0;ii<lstExceptions.length;ii++)
		if(lstExceptions[ii][0]==intAppleNumber)
			intNumber=ii;
	return intNumber;
};
Program_SnakeGame.prototype.emptyByteChar=function(intAppleNumber){
	if(intAppleNumber<=31)return true;	
	if(intAppleNumber>=127&&intAppleNumber<=160)return true;	
	return false;
};
Program_SnakeGame.prototype.drawApples=function(){
	var i,j,intValue;
	var lstExceptions=[[0,"zero"],[173,"173"],[32,"space"],[27,"esc"],[127,"del"]];
	var intException=-1;
	var lstReturn;
	lstReturn=this.computer.lstVeryOrange;
	var intR,intG,intB,intA;
	//mhdmodiff--
	var strValue;
	intR=lstReturn[0];
	intG=lstReturn[1];
	intB=lstReturn[2];
	intA=lstReturn[3];
	for(var ii=0;ii<this.theApples.length;ii++){
		lstReturn=this.theApples[ii];
		i=lstReturn[0];
		j=lstReturn[1];
		intValue=lstReturn[2];
		intException=this.intAppleOnList(lstExceptions,intValue);	
		if(-1==intException)
			if(false==this.emptyByteChar(intValue))
				strValue=String.fromCharCode(intValue);
			else strValue=""+intValue;
		else strValue=""+lstExceptions[intException][1];
		for(var jj=0;jj<strValue.length;jj++)
			this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(i+jj,j)]=strValue[jj];
	};
};
Program_SnakeGame.prototype.drawPoints=function(){
	var strPoints="Snake: "+this.intPoints+" : "+this.intAppleEaten;
	document.title=strPoints;
	var x=Math.round((this.base.intScreenWidth_text-1)/2.-strPoints.length/2.);
	for(var ii=0;ii<strPoints.length;ii++)
		this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(x+ii,0)]=strPoints[ii];
};
Program_SnakeGame.prototype.drawMouse=function(){
	this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(Math.round(this.fltMouseX),Math.round(this.fltMouseY))]=String.fromCharCode(73);
};
Program_SnakeGame.prototype.updateDimensions=function(){
};
Program_SnakeGame.prototype.inits=function(){
	this.base.blnTextMode=true;
	if(this.strArgs!=this.prevStrArgs)
		this.reloadStrArgs();
};
Program_SnakeGame.prototype.stopFinalizations=function(strString){
	this.prevStrArgs=this.strArgs;
};
Program_SnakeGame.prototype.exitFinalizations=function(strString){
	this.prevStrArgs=this.strArgs;
};
Program_SnakeGame.prototype.onKeyDown=function(evtEvent){
	switch(evtEvent.key){
		case "F4":/*Alt+F4 would close the browser*/this.base.exitProgram(this,"Snake program exited.");break;
		case "c":
			if(true==evtEvent.ctrlKey)this.base.exitProgram(this,"Snake program exited.");
			else if(2==this.intMoveDirection)this.prevGameTime=null;if(0!=this.intMoveDirection){this.intMoveDirection=2;this.blnCancelScreensaverPlay=true;};
			break;
		case "z":
			if(true==evtEvent.ctrlKey) this.base.stopProgram(this,"Snake program stopped. If you run it again with the same arguments, previous game state will be reloaded."+String.fromCharCode(10)+"Program call: snake intMinApple intMaxApple intGameSpeed_ms"+String.fromCharCode(10)+"snake==snake 1 2359 250");
			else if(2==this.intMoveDirection)this.prevGameTime=null;if(0!=this.intMoveDirection){this.intMoveDirection=2;this.blnCancelScreensaverPlay=true;};
			break;
		/*for not precise tiny onscreen keyboards*/
		case "W":
		case "w":
		case "Q":
		case "q":
		case "E":
		case "e":
		case "R":
		case "r":
		case "ArrowUp":if(0==this.intMoveDirection)this.prevGameTime=null;if(2!=this.intMoveDirection){this.intMoveDirection=0;this.blnCancelScreensaverPlay=true;};
			break;
		case "D":
		case "d":
		case "F":
		case "f":
		case "G":
		case "g":
		case "ArrowRight":if(1==this.intMoveDirection)this.prevGameTime=null;if(3!=this.intMoveDirection){this.intMoveDirection=1;this.blnCancelScreensaverPlay=true;};
			break;
		case "S":
		case "s":
		case "Z":
		case "z":
		case "X":
		case "x":
		case "C":
		case "c":
		case "ArrowDown":if(2==this.intMoveDirection)this.prevGameTime=null;if(0!=this.intMoveDirection){this.intMoveDirection=2;this.blnCancelScreensaverPlay=true;};
			break;
		case "A":
		case "a":
		case "ArrowLeft":if(3==this.intMoveDirection)this.prevGameTime=null;if(1!=this.intMoveDirection){this.intMoveDirection=3;this.blnCancelScreensaverPlay=true;};
			break;
		case "p":
			if(4==this.intGameMode){this.newGameModeGame();break;}if(0==this.intGameMode){this.intGameMode=1;break;}if(1==this.intGameMode){this.intGameMode=0;break;};break;
		case "Alt":if(1==evtEvent.location){if(false==this.blnMouseBlocked){this.blnMouseBlocked=true;this.prevMouseX=null;this.prevMouseY=null;}else this.blnMouseBlocked=false;}break;
	}
};
Program_SnakeGame.prototype.onKeyUp=function(evtEvent){
};
Program_SnakeGame.prototype.onMouseDown=function(evtEvent){
};
Program_SnakeGame.prototype.onMouseUp=function(evtEvent){
};
Program_SnakeGame.prototype.onMouseWheel=function(evtEvent){
};
Program_SnakeGame.prototype.onMouseMove=function(evtEvent){
	this.base.onMouseMove_text(evtEvent,this);
	return;
	if(true==this.blnMouseBlocked)return;
	var diffX,diffY;
	//mhdmodiff--
	//if(null==this.prevMouseX||null==this.prevMouseY){
	if(true==netspace.nonNumber(this.prevMouseX)||true==netspace.nonNumber(this.prevMouseY)){
		this.prevMouseX=evtEvent.offsetX;
		this.prevMouseY=evtEvent.offsetY;
		return;
	}
	diffX=evtEvent.offsetX-this.prevMouseX;
	diffY=evtEvent.offsetY-this.prevMouseY;
	this.prevMouseX=evtEvent.offsetX;
	this.fltMouseX+=this.fltMouseSpeed*diffX;
	this.prevMouseY=evtEvent.offsetY;
	this.fltMouseY+=this.fltMouseSpeed*diffY;
	if(this.fltMouseX<0)this.fltMouseX=0;
	if(this.fltMouseX>this.base.intScreenWidth_text-1)this.fltMouseX=this.base.intScreenWidth_text-1;
	if(this.fltMouseY<0)this.fltMouseY=0;
	if(this.fltMouseY>this.base.intScreenHeight_text-1)this.fltMouseY=this.base.intScreenHeight_text-1;
};
Program_SnakeGame.prototype.newGameModeGame=function(){
	this.fltMouseX=Math.round((this.base.intScreenWidth_text-1)/2.);
	this.fltMouseY=Math.round((this.base.intScreenHeight_text-1)/2.);
	this.intMoveDirection=0;/*[up,right,down,left]*/
	this.gameSpeed=0.001*this.intGameSpeed_ms;
	this.prevGameTime=null;
	var i,j;
	i=Math.round(this.base.intScreenWidth_text/2.);
	j=Math.round(this.base.intScreenHeight_text/2.);
	this.theSnake=[[i,j],[i+1,j]];
	this.theSnakeMoveDirections=[0,0];
	this.intGameMode=0;
	this.base.clearScreen_text();
	this.theApples=[];
	this.addRandomApple();
	this.intPoints=0;
	this.intAppleEaten=0;
};
Program_SnakeGame.prototype.gameModeGame=function(currentFrameTime){
	var now=performance.now();
	this.base.clearScreen_text();
	this.drawWalls();
	this.drawSnake();
	this.drawApples();
	this.drawPoints();
	this.drawMouse();
	if(null==this.prevGameTime){
		this.prevGameTime=now;
		this.updateGame();
	}
	if(Math.abs(this.prevGameTime-currentFrameTime)>this.gameSpeed*1000){
		this.updateGame();
		this.prevGameTime=now;
	}
};
Program_SnakeGame.prototype.reloadStrArgs=function(){
	var lstArgs=this.strArgs.split(" ");
	var intMin,intMax,intGameSpeed_ms;
	var strScreensaverPlay;
	this.blnScreensaverPlay=false;
	for(var ii=0;ii<lstArgs.length;ii++){
		if("scrsvr"==lstArgs[ii].substring(0,6)){
			this.blnScreensaverPlay=true;
		}
		
	}
	if(2==lstArgs.length){
		intMin=parseInt(eval(lstArgs[0]));
		intMax=parseInt(eval(lstArgs[1]));
		if(false==netspace.nonNumber(intMin)&&false==netspace.nonNumber(intMax)){
			this.intMinApple=intMin;
			this.intMaxApple=intMax;
			this.intGameSpeed_ms=250;
		}
	}
	if(4==lstArgs.length){
		intMin=parseInt(eval(lstArgs[0]));
		intMax=parseInt(eval(lstArgs[1]));
		intGameSpeed_ms=parseInt(eval(lstArgs[2]));
		strScreensaverPlay=lstArgs[3];
		if(false==netspace.nonNumber(intMin)&&false==netspace.nonNumber(intMax)&&false==netspace.nonNumber(intGameSpeed_ms)){
			this.intMinApple=intMin;
			this.intMaxApple=intMax;
			this.intGameSpeed_ms=intGameSpeed_ms;
		}
	}
	if(3==lstArgs.length){
		intMin=parseInt(eval(lstArgs[0]));
		intMax=parseInt(eval(lstArgs[1]));
		intGameSpeed_ms=parseInt(eval(lstArgs[2]));
		if(false==netspace.nonNumber(intMin)&&false==netspace.nonNumber(intMax)&&false==netspace.nonNumber(intGameSpeed_ms)){
			this.intMinApple=intMin;
			this.intMaxApple=intMax;
			this.intGameSpeed_ms=intGameSpeed_ms;
		}
	}
	if(0==lstArgs.length){
		this.intMinApple=1;
		this.intMaxApple=2359;
		this.intGameSpeed_ms=250;
	}
	this.prevStrArgs=this.strArgs;
	this.intGameMode=4;
};
Program_SnakeGame.prototype.loopFunction=function(currentFrameTime){
	switch(this.intGameMode){
		case 0:this.gameModeGame(currentFrameTime);break;
		case 1:this.gameModePause(currentFrameTime);break;
		case 4:this.gameModeGameOver(currentFrameTime);break;
	}
};
var Program_BinarySnakeGameConstructor=function(that,computer,base){
	that.computer=computer;
	that.base=base;
	that.computer.clearScreen_text();
	that.intPoints=0;
	//mhdmodiff--
	//this.intAppleEaten=0;
	that.intAppleEaten=0;
	that.intGameMode=4;
	that.fltMouseSpeed=0.5;
	that.intGameSpeed_ms=250;
	that.prevMouseX=null;
	that.prevMouseY=null;
	that.fltMouseX=0;
	that.fltMouseY=0;
	that.blnMouseBlocked=false;
	that.intMinApple=1;
	that.intMaxApple=255;
	that.blnScreensaverPlay=false;
	that.prevStrArgs=null;
	that.strArgs="";
	that.lstMorseCodes=["A","01","B","1000","C","1010","D","100","E","0","F","0010","G","110","H","0000","I","00","J","0111","K","101","L","0100","M","11","N","10","O","111","P","0110","Q","1101","R","010","S","000","T","1","U","001","V","0001","W","011","X","1001","Y","1011","Z","1100","0","11111","1","01111","2","00111","3","00011","4","00001","5","00000","6","10000","7","11000","8","11100","9","11110"];
	that.gameModeGameOver();
};
var Program_BinarySnakeGameConstructor_strF=function(that,computer,base){
};
var Program_BinarySnakeGame=function(computer,base){
	Program_BinarySnakeGameConstructor(this,computer,base);
	Program_BinarySnakeGameConstructor_strF(this,computer,base);
};
Program_BinarySnakeGame.prototype.drawMorseCodes=function(){
	var strSymbol,strDigits;
	var intColumn=0;
	var intColumnWidth=11;
	var intRow=0;
	for(var ii=0;ii<26;ii++){
			if(intRow>=this.base.intScreenHeight_text){
				intColumn++;
				intRow=0;
			}
			strSymbol=this.lstMorseCodes[2*ii];
			strDigits=this.lstMorseCodes[2*ii+1];
			for(var jj=0;jj<strSymbol.length;jj++)
				this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(intColumnWidth*intColumn+jj,intRow)]=strSymbol[jj];
			for(var jj=0;jj<strDigits.length;jj++)
				this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(intColumnWidth*intColumn+3+jj,intRow)]=strDigits[jj];
			intRow++;
	}
	intRow=0;
	intColumn=0;
	var intColumns=Math.ceil(10/this.base.intScreenHeight_text)-1;
	for(var ii=26;ii<36;ii++){
			if(intRow>=this.base.intScreenHeight_text){
				intColumn++;
				intRow=0;
			}
			strSymbol=this.lstMorseCodes[2*ii];
			strDigits=this.lstMorseCodes[2*ii+1];
			for(var jj=0;jj<strSymbol.length;jj++)
				this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(this.base.intScreenWidth_text-8-intColumnWidth*intColumns+intColumnWidth*intColumn+jj,intRow)]=strSymbol[jj];
			for(var jj=0;jj<strDigits.length;jj++)
				this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(this.base.intScreenWidth_text-8-intColumnWidth*intColumns+intColumnWidth*intColumn+3+jj,intRow)]=strDigits[jj];
			intRow++;
	}
};
Program_BinarySnakeGame.prototype.gameModeGameOver=function(){
	this.base.clearScreen_text();
	var strGameOver="Points: "+this.intPoints+" Game over - press p to play";
	for(var ii=0;ii<strGameOver.length;ii++)
		this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(Math.floor((this.base.intScreenWidth_text-1)/2.-strGameOver.length/2.+ii),Math.floor((this.base.intScreenHeight_text-1)/2.))]=strGameOver[ii];
	this.drawMorseCodes();
	this.drawMouse();
};
Program_BinarySnakeGame.prototype.gameModePause=function(){
	this.base.clearScreen_text();
	var strGamePause="Pause - press p to play";
	for(var ii=0;ii<strGamePause.length;ii++)
		this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(Math.floor((this.base.intScreenWidth_text-1)/2.-strGamePause.length/2.+ii),Math.floor((this.base.intScreenHeight_text-1)/2.))]=strGamePause[ii];
	this.drawMorseCodes();
	this.drawMouse();
};
Program_BinarySnakeGame.prototype.roundRand=function(min,max){
	return min+Math.round(Math.abs(max-min)*Math.random());
};
var flattenConcat=function(mat){
	return [].concat.apply([],mat);
};
function roundRand(min,max){return min+Math.round(Math.abs(max-min)*Math.random());}
Program_BinarySnakeGame.prototype.addRandomApple=function(){
	var x,y;
	var blnGoodApple=false;
	while(false==blnGoodApple){
		x=this.roundRand(1,this.base.intScreenWidth_text-2);
		y=this.roundRand(1,this.base.intScreenHeight_text-2);
		blnGoodApple=true;
		for(var ii=0;ii<this.theSnake.length;ii++)
			if(this.theSnake[ii][0]==x&&this.theSnake[ii][1]==y)
				blnGoodApple=false;
	}
	var value=this.roundRand(this.intMinApple,this.intMaxApple);
	this.theApples.push([x,y,value]);
};
Program_BinarySnakeGame.prototype.eatApple=function(intAppleNumber){
	var x,y,intValue;
	var lstReturn=this.theApples[intAppleNumber];
	x=lstReturn[0];
	y=lstReturn[1];
	intValue=lstReturn[2];
	this.theApples.splice(intAppleNumber,1);
	var newSnake=[];
	switch(this.intMoveDirection){
		case 0:newSnake.push([this.theSnake[0][0],this.theSnake[0][1]-1]);break;
		case 1:newSnake.push([this.theSnake[0][0]+1,this.theSnake[0][1]]);break;
		case 2:newSnake.push([this.theSnake[0][0],this.theSnake[0][1]+1]);break;
		case 3:newSnake.push([this.theSnake[0][0]-1,this.theSnake[0][1]]);break;
	}
	for(var ii=0;ii<this.theSnake.length;ii++)
		newSnake.push(this.theSnake[ii]);
	this.theSnake=newSnake;
	if(true==this.blnScreensaverPlay){
		var newSnakeMoveDirections=[];
		newSnakeMoveDirections.push(this.intMoveDirection);
		for(var ii=0;ii<this.theSnake.length;ii++)
			newSnakeMoveDirections.push(this.theSnakeMoveDirections[ii]);
		this.theSnakeMoveDirections=newSnakeMoveDirections;
	}
	this.intPoints++;
	this.intAppleEaten=intValue;
	if(0==this.intAppleEaten%2)this.strSnakeBinaryBody+="0";
	else this.strSnakeBinaryBody+="1";
};
Program_BinarySnakeGame.prototype.checkAppleEaten=function(){
	for(var ii=0;ii<this.theApples.length;ii++)
		if(this.theApples[ii][0]==this.theSnake[0][0]&&this.theApples[ii][1]==this.theSnake[0][1])
			return ii;
	return -1;
};
Program_BinarySnakeGame.prototype.checkCollisions=function(){
	for(var ii=0;ii<this.theSnake.length;ii++){
		for(var jj=0;jj<this.theSnake.length;jj++){
			if(ii!=jj&&this.theSnake[ii][0]==this.theSnake[jj][0]&&this.theSnake[ii][1]==this.theSnake[jj][1])
			return true;
		}
	}
	if(0==this.theSnake[0][0])
		return true;
	if(0==this.theSnake[0][1])
		return true;
	if(this.base.intScreenWidth_text-1==this.theSnake[0][0])
		return true;
	if(this.base.intScreenHeight_text-1==this.theSnake[0][1])
		return true;
	return false;
};
Program_BinarySnakeGame.prototype.checkPotentialCollisions=function(intMoveDirection){
	var newSnake=[];
	var newSnakeMoveDirections=[];
	switch(intMoveDirection){
		case 0:newSnake.push([this.theSnake[0][0],this.theSnake[0][1]-1]);break;
		case 1:newSnake.push([this.theSnake[0][0]+1,this.theSnake[0][1]]);break;
		case 2:newSnake.push([this.theSnake[0][0],this.theSnake[0][1]+1]);break;
		case 3:newSnake.push([this.theSnake[0][0]-1,this.theSnake[0][1]]);break;
	}
	newSnakeMoveDirections.push(intMoveDirection);
	for(var ii=0;ii<this.theSnake.length;ii++){
		newSnake.push(this.theSnake[ii]);
		newSnakeMoveDirections.push(this.theSnakeMoveDirections[ii]);
	}
	for(var ii=0;ii<newSnake.length;ii++){
		for(var jj=0;jj<newSnake.length;jj++){
			if(ii!=jj&&newSnake[ii][0]==newSnake[jj][0]&&newSnake[ii][1]==newSnake[jj][1])
			return true;
		}
	}
	if(0==newSnake[0][0])
		return true;
	if(0==newSnake[0][1])
		return true;
	if(this.base.intScreenWidth_text-1==newSnake[0][0])
		return true;
	if(this.base.intScreenHeight_text-1==newSnake[0][1])
		return true;
	for(var ii=2;ii<newSnake.length;ii++){
		if(newSnake[ii][0]==newSnake[0][0]-1&&newSnake[ii][1]==newSnake[0][1]&&newSnakeMoveDirections[ii]==newSnakeMoveDirections[0])
			return true;
		if(newSnake[ii][0]==newSnake[0][0]+1&&newSnake[ii][1]==newSnake[0][1]&&newSnakeMoveDirections[ii]==newSnakeMoveDirections[0])
			return true;
		if(newSnake[ii][0]==newSnake[0][0]&&newSnake[ii][1]==newSnake[0][1]-1&&newSnakeMoveDirections[ii]==newSnakeMoveDirections[0])
			return true;
		if(newSnake[ii][0]==newSnake[0][0]&&newSnake[ii][1]==newSnake[0][1]+1&&newSnakeMoveDirections[ii]==newSnakeMoveDirections[0])
			return true;
	}
	return false;
};
Program_BinarySnakeGame.prototype.screensaverMovement=function(){
	if(true==this.blnCancelScreensaverPlay){
		this.blnCancelScreensaverPlay=false;
		return;
	}
	if(false==this.checkPotentialCollisions(this.intMoveDirection)){
		if(this.theSnake[0][0]==this.theApples[0][0]&&this.theSnake[0][1]==this.theApples[0][1])
			return;
	}else{

			if(0==this.intMoveDirection)
				if(this.theSnake[0][0]>=this.theApples[0][0]){
					if(false==this.checkPotentialCollisions(3)){
						this.intMoveDirection=3;
						return;
					}else{
						if(false==this.checkPotentialCollisions(1)){
							this.intMoveDirection=1;
							return;
						}
					}
				}else{
					if(false==this.checkPotentialCollisions(1)){
						this.intMoveDirection=1;
						return;
					}else{
						if(false==this.checkPotentialCollisions(3)){
							this.intMoveDirection=3;
							return;
						}

					}
				}
			if(3==this.intMoveDirection)
				if(this.theSnake[0][1]>=this.theApples[0][1]){
					if(false==this.checkPotentialCollisions(0)){
						this.intMoveDirection=0;
						return;
					}else{
						if(false==this.checkPotentialCollisions(2)){
							this.intMoveDirection=2;
							return;
						}
					}
				}else{
					if(false==this.checkPotentialCollisions(2)){
						this.intMoveDirection=2;
						return;
					}else{
						if(false==this.checkPotentialCollisions(0)){
							this.intMoveDirection=0;
							return;
						}
					}
				}
			if(2==this.intMoveDirection)
				if(this.theSnake[0][0]>=this.theApples[0][0]){
					if(false==this.checkPotentialCollisions(3)){
						this.intMoveDirection=3;
						return;
					}else{
						if(false==this.checkPotentialCollisions(1)){
							this.intMoveDirection=1;
							return;
						}
					}
				}else{
					if(false==this.checkPotentialCollisions(1)){
						this.intMoveDirection=1;
						return;
					}else{
						if(false==this.checkPotentialCollisions(3)){
							this.intMoveDirection=3;
							return;
						}
					}
				}
			if(1==this.intMoveDirection)
				if(this.theSnake[0][1]>=this.theApples[0][1]){
					if(false==this.checkPotentialCollisions(0)){
						this.intMoveDirection=0;
						return;
					}else{
						if(false==this.checkPotentialCollisions(2)){
							this.intMoveDirection=2;
							return;
						}
					}
				}else{
					if(false==this.checkPotentialCollisions(2)){
						this.intMoveDirection=2;
						return;
					}else{
						if(false==this.checkPotentialCollisions(0)){
							this.intMoveDirection=0;
							return;
						}
					}
				}



	}

	if(0==this.intMoveDirection&&this.theSnake[0][1]-1<this.theApples[0][1])
		if(this.theSnake[0][0]>=this.theApples[0][0]){
			if(false==this.checkPotentialCollisions(3)){
				this.intMoveDirection=3;
				return;
			}else{
				if(false==this.checkPotentialCollisions(1)){
					this.intMoveDirection=1;
					return;
				}
			}
		}else{
			if(false==this.checkPotentialCollisions(1)){
				this.intMoveDirection=1;
				return;
			}else{
				if(false==this.checkPotentialCollisions(3)){
					this.intMoveDirection=3;
					return;
				}

			}
		}
	if(3==this.intMoveDirection&&this.theSnake[0][0]-1<this.theApples[0][0])
		if(this.theSnake[0][1]>=this.theApples[0][1]){
			if(false==this.checkPotentialCollisions(0)){
				this.intMoveDirection=0;
				return;
			}else{
				if(false==this.checkPotentialCollisions(2)){
					this.intMoveDirection=2;
					return;
				}
			}
		}else{
			if(false==this.checkPotentialCollisions(2)){
				this.intMoveDirection=2;
				return;
			}else{
				if(false==this.checkPotentialCollisions(0)){
					this.intMoveDirection=0;
					return;
				}
			}
		}
	if(2==this.intMoveDirection&&this.theSnake[0][1]+1>this.theApples[0][1])
		if(this.theSnake[0][0]>=this.theApples[0][0]){
			if(false==this.checkPotentialCollisions(3)){
				this.intMoveDirection=3;
				return;
			}else{
				if(false==this.checkPotentialCollisions(1)){
					this.intMoveDirection=1;
					return;
				}
			}
		}else{
			if(false==this.checkPotentialCollisions(1)){
				this.intMoveDirection=1;
				return;
			}else{
				if(false==this.checkPotentialCollisions(3)){
					this.intMoveDirection=3;
					return;
				}
			}
		}
	if(1==this.intMoveDirection&&this.theSnake[0][0]+1>this.theApples[0][0])
		if(this.theSnake[0][1]>=this.theApples[0][1]){
			if(false==this.checkPotentialCollisions(0)){
				this.intMoveDirection=0;
				return;
			}else{
				if(false==this.checkPotentialCollisions(2)){
					this.intMoveDirection=2;
					return;
				}
			}
		}else{
			if(false==this.checkPotentialCollisions(2)){
				this.intMoveDirection=2;
				return;
			}else{
				if(false==this.checkPotentialCollisions(0)){
					this.intMoveDirection=0;
					return;
				}
			}
		}
};
Program_BinarySnakeGame.prototype.updateGame=function(){
	if(true==this.checkCollisions()){
		this.intGameMode=4;
		return;
	}
	if(true==this.blnScreensaverPlay){
		this.screensaverMovement();
	}
	var intAppleNumber=this.checkAppleEaten();
	if(-1!=intAppleNumber){
		this.eatApple(intAppleNumber);
		this.addRandomApple();
	}else this.moveSnake();
};
Program_BinarySnakeGame.prototype.moveSnake=function(){
	for(var ii=this.theSnake.length-2;ii>=0;ii--){
		this.theSnake[ii+1][0]=this.theSnake[ii][0];
		this.theSnake[ii+1][1]=this.theSnake[ii][1];
	}
	switch(this.intMoveDirection){
		case 0:this.theSnake[0][1]--;break;
		case 1:this.theSnake[0][0]++;break;
		case 2:this.theSnake[0][1]++;break;
		case 3:this.theSnake[0][0]--;break;
	}
	if(true==this.blnScreensaverPlay){
		for(var ii=this.theSnakeMoveDirections.length-2;ii>=0;ii--){
			this.theSnakeMoveDirections[ii+1]=this.theSnakeMoveDirections[ii];
		}
		this.theSnakeMoveDirections[0]=this.intMoveDirection;
	}
};
Program_BinarySnakeGame.prototype.drawWalls=function(){
	for(var i=0;i<=this.base.intScreenWidth_text-1;i++){
		this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(i,0)]="=";
		this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(i,this.base.intScreenHeight_text-1)]="=";
	}
	for(var j=1;j<=this.base.intScreenHeight_text;j++){
		this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(0,j)]="|";
		this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(this.base.intScreenWidth_text-1,j)]="|";
	}
};
Program_BinarySnakeGame.prototype.drawSnake=function(){
	var i,j;
	var lstReturn=this.theSnake[0];
	i=lstReturn[0];
	j=lstReturn[1];
	this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(i,j)]="@";
	for(var ii=1;ii<this.theSnake.length;ii++){
		lstReturn=this.theSnake[ii];
		i=lstReturn[0];
		j=lstReturn[1];
		this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(i,j)]=this.strSnakeBinaryBody[ii-1];
	}
};
Program_BinarySnakeGame.prototype.intAppleOnList=function(lstExceptions,intAppleNumber){
	var intNumber=-1;
	for(var ii=0;ii<lstExceptions.length;ii++)
		if(lstExceptions[ii][0]==intAppleNumber)
			intNumber=ii;
	return intNumber;
};
Program_BinarySnakeGame.prototype.emptyByteChar=function(intAppleNumber){
	if(intAppleNumber<=31)return true;	
	if(intAppleNumber>=127&&intAppleNumber<=160)return true;	
	return false;
};
Program_BinarySnakeGame.prototype.drawApples=function(){
	var i,j,intValue;
	var strValue;
	var lstExceptions=[[0,"zero"],[173,"173"],[32,"space"],[27,"esc"],[127,"del"]];
	var intException=-1;
	var lstReturn;
	for(var ii=0;ii<this.theApples.length;ii++){
		lstReturn=this.theApples[ii];
		i=lstReturn[0];
		j=lstReturn[1];
		intValue=lstReturn[2];
		intException=this.intAppleOnList(lstExceptions,intValue);	
		if(-1==intException)
			if(false==this.emptyByteChar(intValue))
				strValue=String.fromCharCode(intValue);
			else strValue=""+intValue;
		else strValue=""+lstExceptions[intException][1];
		for(var jj=0;jj<strValue.length;jj++)
			this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(i+jj,j)]=strValue[jj];
	};
};
Program_BinarySnakeGame.prototype.drawPoints=function(){
	var strPoints="";
	if((this.intAppleEaten)<this.lstDictionary.length)
		strPoints="Snake: "+this.intPoints+" : [["+this.intAppleEaten+"],["+String.fromCharCode(this.intAppleEaten)+"],["+this.lstDictionary[this.intAppleEaten]+"]]";
	else strPoints="Snake: "+this.intPoints+" : [["+this.intAppleEaten+"],["+String.fromCharCode(this.intAppleEaten)+"],[]";

	var strBinary=tenderInt(this.intAppleEaten);
	document.title=strPoints;
	var x=Math.round((this.base.intScreenWidth_text-1)/2.-strPoints.length/2.);
	for(var ii=0;ii<strPoints.length;ii++)
		this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(x+ii,0)]=strPoints[ii];
	x=Math.round((this.base.intScreenWidth_text-1)/2.-strBinary.length/2.);
	for(var ii=0;ii<strBinary.length;ii++)
		this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(x+ii,this.base.intScreenHeight_text-1)]=strBinary[ii];
};
Program_BinarySnakeGame.prototype.drawMouse=function(){
	this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(Math.round(this.fltMouseX),Math.round(this.fltMouseY))]=String.fromCharCode("1");
};
Program_BinarySnakeGame.prototype.updateDimensions=function(){
};
Program_BinarySnakeGame.prototype.inits=function(){
	this.base.blnTextMode=true;
	if(this.strArgs!=this.prevStrArgs)
		this.reloadStrArgs();
};
Program_BinarySnakeGame.prototype.stopFinalizations=function(strString){
	this.prevStrArgs=this.strArgs;
};
Program_BinarySnakeGame.prototype.exitFinalizations=function(strString){
	this.prevStrArgs=this.strArgs;
};
Program_BinarySnakeGame.prototype.onKeyDown=function(evtEvent){
	switch(evtEvent.key){
		case "F4":/*Alt+F4 would close the browser*/this.base.exitProgram(this,"Snake program exited.");break;
		case "c":
			if(true==evtEvent.ctrlKey)this.base.exitProgram(this,"Snake program exited.");
			else if(2==this.intMoveDirection)this.prevGameTime=null;if(0!=this.intMoveDirection)this.intMoveDirection=2;
			break;
		case "z":
			if(true==evtEvent.ctrlKey) this.base.stopProgram(this,"Snake program stopped. If you run it again with the same arguments, previous game state will be reloaded."+String.fromCharCode(10)+"Program call: snake intMinApple intMaxApple intGameSpeed_ms"+String.fromCharCode(10)+"snake==snake 1 255");
			else if(2==this.intMoveDirection)this.prevGameTime=null;if(0!=this.intMoveDirection)this.intMoveDirection=2;
			break;
		case "W":
		case "w":
		case "Q":
		case "q":
		case "E":
		case "e":
		case "R":
		case "r":
		case "ArrowUp":if(0==this.intMoveDirection)this.prevGameTime=null;if(2!=this.intMoveDirection)this.intMoveDirection=0;break;
		case "D":
		case "d":
		case "F":
		case "f":
		case "G":
		case "g":
		case "ArrowRight":if(1==this.intMoveDirection)this.prevGameTime=null;if(3!=this.intMoveDirection)this.intMoveDirection=1;break;
		case "S":
		case "s":
		case "Z":
		case "z":
		case "X":
		case "x":
		case "C":
		case "c":
		case "ArrowDown":if(2==this.intMoveDirection)this.prevGameTime=null;if(0!=this.intMoveDirection)this.intMoveDirection=2;break;
		case "A":
		case "a":
		case "ArrowLeft":if(3==this.intMoveDirection)this.prevGameTime=null;if(1!=this.intMoveDirection)this.intMoveDirection=3;break;
		case "p":
			if(4==this.intGameMode){this.newGameModeGame();break;}if(0==this.intGameMode){this.intGameMode=1;break;}if(1==this.intGameMode){this.intGameMode=0;break;};break;
		case "Alt":
			if(1==evtEvent.location){if(false==this.blnMouseBlocked){this.blnMouseBlocked=true;this.prevMouseX=null;this.prevMouseY=null;}else this.blnMouseBlocked=false;}break;
	}
};
Program_BinarySnakeGame.prototype.onKeyUp=function(evtEvent){
};
Program_BinarySnakeGame.prototype.onMouseDown=function(evtEvent){
};
Program_BinarySnakeGame.prototype.onMouseUp=function(evtEvent){
};
Program_BinarySnakeGame.prototype.onMouseWheel=function(evtEvent){
};
Program_BinarySnakeGame.prototype.onMouseMove=function(evtEvent){
	this.base.onMouseMove_text(evtEvent,this);
	return;
	if(true==this.blnMouseBlocked)return;
	var diffX,diffY;
	//mhdmodiff--
	//if(null==this.prevMouseX||null==this.prevMouseY){
	if(true==netspace.nonNumber(this.prevMouseX)||true==netspace.nonNumber(this.prevMouseY)){
		this.prevMouseX=evtEvent.offsetX;
		this.prevMouseY=evtEvent.offsetY;
		return;
	}
	diffX=evtEvent.offsetX-this.prevMouseX;
	diffY=evtEvent.offsetY-this.prevMouseY;
	this.prevMouseX=evtEvent.offsetX;
	this.fltMouseX+=this.fltMouseSpeed*diffX;
	this.prevMouseY=evtEvent.offsetY;
	this.fltMouseY+=this.fltMouseSpeed*diffY;
	if(this.fltMouseX<0)this.fltMouseX=0;
	if(this.fltMouseX>this.base.intScreenWidth_text-1)this.fltMouseX=this.base.intScreenWidth_text-1;
	if(this.fltMouseY<0)this.fltMouseY=0;
	if(this.fltMouseY>this.base.intScreenHeight_text-1)this.fltMouseY=this.base.intScreenHeight_text-1;
};
Program_BinarySnakeGame.prototype.constructDictionary=function(){
	if(undefined!=this.strContent)
		this.lstDictionary=this.strContent.split(";");
	else{
		alert("No dictionary");
		this.lstDictionary=[];
	}
};
Program_BinarySnakeGame.prototype.newGameModeGame=function(){
	this.fltMouseX=Math.round((this.base.intScreenWidth_text-1)/2.);
	this.fltMouseY=Math.round((this.base.intScreenHeight_text-1)/2.);
	this.intMoveDirection=0;/*[up,right,down,left]*/
	this.gameSpeed=0.001*this.intGameSpeed_ms;
	this.prevGameTime=null;
	var i,j;
	i=Math.round(this.base.intScreenWidth_text/2.);
	j=Math.round(this.base.intScreenHeight_text/2.);
	this.theSnake=[[i,j],[i+1,j]];
	this.theSnakeMoveDirections=[0,0];
	this.strSnakeBinaryBody=""+((this.roundRand(0,255)>=128)?1:0);
	this.intGameMode=0;
	this.base.clearScreen_text();
	this.theApples=[];
	this.addRandomApple();
	this.intPoints=0;
	this.intAppleEaten=0;
	this.constructDictionary();
};
Program_BinarySnakeGame.prototype.gameModeGame=function(currentFrameTime){
	var now=performance.now();
	this.base.clearScreen_text();
	this.drawWalls();
	this.drawSnake();
	this.drawApples();
	this.drawPoints();
	this.drawMouse();
	if(null==this.prevGameTime){
		this.prevGameTime=now;
		this.updateGame();
	}
	if(Math.abs(this.prevGameTime-currentFrameTime)>this.gameSpeed*1000){
		this.updateGame();
		this.prevGameTime=now;
	}
};
Program_BinarySnakeGame.prototype.reloadStrArgsCallback=function(strContent){
	this.intGameMode=4;
	this.strContent=strContent;
};
Program_BinarySnakeGame.prototype.reloadStrArgs=function(){
	alert("Load the Binary-Morse dictionary text file");
	var lstArgs=this.strArgs.split(" ");
	var intMin,intMax,intGameSpeed_ms;
	var strScreensaverPlay;
	this.blnScreensaverPlay=false;
	for(var ii=0;ii<lstArgs.length;ii++){
		if("scrsvr"==lstArgs[ii].substring(0,6)){
			this.blnScreensaverPlay=true;
		}
		
	}
	if(2==lstArgs.length){
		intMin=parseInt(eval(lstArgs[0]));
		intMax=parseInt(eval(lstArgs[1]));
		if(false==netspace.nonNumber(intMin)&&false==netspace.nonNumber(intMax)){
			this.intMinApple=intMin;
			this.intMaxApple=intMax;
			this.intGameSpeed_ms=250;
		}
	}
	if(3==lstArgs.length){
		intMin=parseInt(eval(lstArgs[0]));
		intMax=parseInt(eval(lstArgs[1]));
		intGameSpeed_ms=parseInt(eval(lstArgs[2]));
		if(false==netspace.nonNumber(intMin)&&false==netspace.nonNumber(intMax)&&false==netspace.nonNumber(intGameSpeed_ms)){
			this.intMinApple=intMin;
			this.intMaxApple=intMax;
			this.intGameSpeed_ms=intGameSpeed_ms;
		}
	}
	if(4==lstArgs.length){
		intMin=parseInt(eval(lstArgs[0]));
		intMax=parseInt(eval(lstArgs[1]));
		intGameSpeed_ms=parseInt(eval(lstArgs[2]));
		strScreensaverPlay=lstArgs[3];
		if(false==netspace.nonNumber(intMin)&&false==netspace.nonNumber(intMax)&&false==netspace.nonNumber(intGameSpeed_ms)){
			this.intMinApple=intMin;
			this.intMaxApple=intMax;
			this.intGameSpeed_ms=intGameSpeed_ms;
		}
	}
	if(0==lstArgs.length){
		this.intMinApple=1;
		this.intMaxApple=255;
		this.intGameSpeed_ms=250;
	}
	this.prevStrArgs=this.strArgs;
	this.intGameMode=4;

	var objArgs={};
	objArgs.varCols=null;
	objArgs.varRows=null;
	var that=this;
	//mhdmodiff
	netspace.openFile(function(strContent){that.reloadStrArgsCallback(strContent);},objArgs);
};
Program_BinarySnakeGame.prototype.loopFunction=function(currentFrameTime){
	switch(this.intGameMode){
		case 0:this.gameModeGame(currentFrameTime);break;
		case 1:this.gameModePause(currentFrameTime);break;
		case 4:this.gameModeGameOver(currentFrameTime);break;
	}
};
var Program_DictionaryTrainingConstructor=function(that,computer,base){
	that.computer=computer;
	that.base=base;
	that.computer.clearScreen_text();
	that.intPoints=0;
	//mhdmodiff
	//this.intAppleEaten=0;
	that.intAppleEaten=0;
	that.intGameMode=4;
	that.fltMouseSpeed=0.5;
	that.intGameSpeed_ms=250;
	that.prevMouseX=null;
	that.prevMouseY=null;
	that.fltMouseX=0;
	that.fltMouseY=0;
	that.blnMouseBlocked=false;
	that.intMinApple=1;
	that.intMaxApple=2350;
	that.blnScreensaverPlay=false;
	that.blnCancelScreensaverPlay=true;
	that.prevStrArgs=null;
	that.strArgs="";
	/*that.strGameMode="normal";*/
	/*that.strGameMode="inches";*/
	that.strGameMode="dictionary";
	that.gameModeGameOver();
};
var Program_DictionaryTrainingConstructor_strF=function(that,computer,base){
};
var Program_DictionaryTraining=function(computer,base){
	Program_DictionaryTrainingConstructor(this,computer,base);
	Program_DictionaryTrainingConstructor_strF(this,computer,base);
};
Program_DictionaryTraining.prototype.gameModeGameOver=function(){
	this.base.clearScreen_text();
	var strGameOver="Points: "+this.intPoints+" Game over - press p to play";
	for(var ii=0;ii<strGameOver.length;ii++)
		this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(Math.floor((this.base.intScreenWidth_text-1)/2.-strGameOver.length/2.+ii),Math.floor((this.base.intScreenHeight_text-1)/2.))]=strGameOver[ii];
	this.drawMouse();
};
Program_DictionaryTraining.prototype.gameModePause=function(){
	this.base.clearScreen_text();
	var strGamePause="Pause - press p to play";
	for(var ii=0;ii<strGamePause.length;ii++)
		this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(Math.floor((this.base.intScreenWidth_text-1)/2.-strGamePause.length/2.+ii),Math.floor((this.base.intScreenHeight_text-1)/2.))]=strGamePause[ii];
	this.drawMouse();
};
Program_DictionaryTraining.prototype.roundRand=function(min,max){
	return min+Math.round(Math.abs(max-min)*Math.random());
};
Program_DictionaryTraining.prototype.addRandomApple=function(){
	var x,y;
	var blnGoodApple=false;
	while(false==blnGoodApple){
		x=this.roundRand(1,this.base.intScreenWidth_text-2);
		y=this.roundRand(1,this.base.intScreenHeight_text-2);
		blnGoodApple=true;
		for(var ii=0;ii<this.theSnake.length;ii++)
			if(this.theSnake[ii][0]==x&&this.theSnake[ii][1]==y)
				blnGoodApple=false;
	}
	if("normal"==this.strGameMode){
		var value=this.roundRand(this.intMinApple,this.intMaxApple);
		/*var value=roundRand(1,255);*/
		/*var value=roundRand(0,65535);*/
		this.theApples.push([x,y,value]);
	}
	if("inches"==this.strGameMode||"dictionary"==this.strGameMode){
		var intLength=this.lstDictionary.length;
		var intDictionary=roundRand(0,intLength);
		if(intDictionary>=intLength)intDictionary=intLength-1;
		this.theApples.push([x,y,intDictionary]);
	}
};
Program_DictionaryTraining.prototype.eatApple=function(intAppleNumber){
	var x,y,intValue;
	var lstReturn=this.theApples[intAppleNumber];
	x=lstReturn[0];
	y=lstReturn[1];
	intValue=lstReturn[2];
	this.theApples.splice(intAppleNumber,1);
	var newSnake=[];
	switch(this.intMoveDirection){
		case 0:newSnake.push([this.theSnake[0][0],this.theSnake[0][1]-1]);break;
		case 1:newSnake.push([this.theSnake[0][0]+1,this.theSnake[0][1]]);break;
		case 2:newSnake.push([this.theSnake[0][0],this.theSnake[0][1]+1]);break;
		case 3:newSnake.push([this.theSnake[0][0]-1,this.theSnake[0][1]]);break;
	}
	for(var ii=0;ii<this.theSnake.length;ii++)
		newSnake.push(this.theSnake[ii]);
	this.theSnake=newSnake;
	if(true==this.blnScreensaverPlay){
		var newSnakeMoveDirections=[];
		newSnakeMoveDirections.push(this.intMoveDirection);
		for(var ii=0;ii<this.theSnake.length;ii++)
			newSnakeMoveDirections.push(this.theSnakeMoveDirections[ii]);
		this.theSnakeMoveDirections=newSnakeMoveDirections;
	}
	this.intPoints++;
	this.intAppleEaten=intValue;

     	/*console.log(this.lstDictionary[this.intAppleEaten]);*/
     	var strAppleEaten="";
	if("normal"==this.strGameMode)
		strAppleEaten=String.fromCharCode(this.intAppleEaten)+" "+this.intAppleEaten+String.fromCharCode(10);
	if("inches"==this.strGameMode)
		strAppleEaten=this.lstDictionary[this.intAppleEaten][0]+" "+this.lstDictionary[this.intAppleEaten][1]+String.fromCharCode(10);
	if("dictionary"==this.strGameMode){
		var strMeanings,strMeanings0,strMeanings1,strMeanings2;
		strMeanings0=this.lstDictionary[this.intAppleEaten][2][0];
		strMeanings1=this.lstDictionary[this.intAppleEaten][3][0];
		strMeanings2=this.lstDictionary[this.intAppleEaten][4][0];
		strMeanings="";
		if(undefined!=strMeanings0)strMeanings+=strMeanings0+" ";
		if(undefined!=strMeanings1)strMeanings+=strMeanings1+" ";
		if(undefined!=strMeanings2)strMeanings+=strMeanings2+" ";
		strAppleEaten=this.lstDictionary[this.intAppleEaten][0]+" "+this.lstDictionary[this.intAppleEaten][1]+" "+strMeanings+String.fromCharCode(10);
	}
	var txtFunFunFun=document.getElementById("txtFunFunFun");
	txtFunFunFun.value+=strAppleEaten;
	/*console.log(txtFunFunFun.value);*/
};
Program_DictionaryTraining.prototype.checkAppleEaten=function(){
	for(var ii=0;ii<this.theApples.length;ii++)
		if(this.theApples[ii][0]==this.theSnake[0][0]&&this.theApples[ii][1]==this.theSnake[0][1])
			return ii;
	return -1;
};
Program_DictionaryTraining.prototype.checkCollisions=function(){
	for(var ii=0;ii<this.theSnake.length;ii++){
		for(var jj=0;jj<this.theSnake.length;jj++){
			if(ii!=jj&&this.theSnake[ii][0]==this.theSnake[jj][0]&&this.theSnake[ii][1]==this.theSnake[jj][1])
			return true;
		}
	}
	if(0==this.theSnake[0][0])
		return true;
	if(0==this.theSnake[0][1])
		return true;
	if(this.base.intScreenWidth_text-1==this.theSnake[0][0])
		return true;
	if(this.base.intScreenHeight_text-1==this.theSnake[0][1])
		return true;
	return false;
};
Program_DictionaryTraining.prototype.checkPotentialCollisions=function(intMoveDirection){
	var newSnake=[];
	var newSnakeMoveDirections=[];
	switch(intMoveDirection){
		case 0:newSnake.push([this.theSnake[0][0],this.theSnake[0][1]-1]);break;
		case 1:newSnake.push([this.theSnake[0][0]+1,this.theSnake[0][1]]);break;
		case 2:newSnake.push([this.theSnake[0][0],this.theSnake[0][1]+1]);break;
		case 3:newSnake.push([this.theSnake[0][0]-1,this.theSnake[0][1]]);break;
	}
	newSnakeMoveDirections.push(intMoveDirection);
	for(var ii=0;ii<this.theSnake.length;ii++){
		newSnake.push(this.theSnake[ii]);
		newSnakeMoveDirections.push(this.theSnakeMoveDirections[ii]);
	}
	for(var ii=0;ii<newSnake.length;ii++){
		for(var jj=0;jj<newSnake.length;jj++){
			if(ii!=jj&&newSnake[ii][0]==newSnake[jj][0]&&newSnake[ii][1]==newSnake[jj][1])
			return true;
		}
	}
	if(0==newSnake[0][0])
		return true;
	if(0==newSnake[0][1])
		return true;
	if(this.base.intScreenWidth_text-1==newSnake[0][0])
		return true;
	if(this.base.intScreenHeight_text-1==newSnake[0][1])
		return true;
	for(var ii=2;ii<newSnake.length;ii++){
		if(newSnake[ii][0]==newSnake[0][0]-1&&newSnake[ii][1]==newSnake[0][1]&&newSnakeMoveDirections[ii]==newSnakeMoveDirections[0])
			return true;
		if(newSnake[ii][0]==newSnake[0][0]+1&&newSnake[ii][1]==newSnake[0][1]&&newSnakeMoveDirections[ii]==newSnakeMoveDirections[0])
			return true;
		if(newSnake[ii][0]==newSnake[0][0]&&newSnake[ii][1]==newSnake[0][1]-1&&newSnakeMoveDirections[ii]==newSnakeMoveDirections[0])
			return true;
		if(newSnake[ii][0]==newSnake[0][0]&&newSnake[ii][1]==newSnake[0][1]+1&&newSnakeMoveDirections[ii]==newSnakeMoveDirections[0])
			return true;
	}
	return false;
};
Program_DictionaryTraining.prototype.screensaverMovement=function(){
	if(true==this.blnCancelScreensaverPlay){
		this.blnCancelScreensaverPlay=false;
		return;
	}
	if(false==this.checkPotentialCollisions(this.intMoveDirection)){
		if(this.theSnake[0][0]==this.theApples[0][0]&&this.theSnake[0][1]==this.theApples[0][1])
			return;
	}else{

			if(0==this.intMoveDirection)
				if(this.theSnake[0][0]>=this.theApples[0][0]){
					if(false==this.checkPotentialCollisions(3)){
						this.intMoveDirection=3;
						return;
					}else{
						if(false==this.checkPotentialCollisions(1)){
							this.intMoveDirection=1;
							return;
						}
					}
				}else{
					if(false==this.checkPotentialCollisions(1)){
						this.intMoveDirection=1;
						return;
					}else{
						if(false==this.checkPotentialCollisions(3)){
							this.intMoveDirection=3;
							return;
						}

					}
				}
			if(3==this.intMoveDirection)
				if(this.theSnake[0][1]>=this.theApples[0][1]){
					if(false==this.checkPotentialCollisions(0)){
						this.intMoveDirection=0;
						return;
					}else{
						if(false==this.checkPotentialCollisions(2)){
							this.intMoveDirection=2;
							return;
						}
					}
				}else{
					if(false==this.checkPotentialCollisions(2)){
						this.intMoveDirection=2;
						return;
					}else{
						if(false==this.checkPotentialCollisions(0)){
							this.intMoveDirection=0;
							return;
						}
					}
				}
			if(2==this.intMoveDirection)
				if(this.theSnake[0][0]>=this.theApples[0][0]){
					if(false==this.checkPotentialCollisions(3)){
						this.intMoveDirection=3;
						return;
					}else{
						if(false==this.checkPotentialCollisions(1)){
							this.intMoveDirection=1;
							return;
						}
					}
				}else{
					if(false==this.checkPotentialCollisions(1)){
						this.intMoveDirection=1;
						return;
					}else{
						if(false==this.checkPotentialCollisions(3)){
							this.intMoveDirection=3;
							return;
						}
					}
				}
			if(1==this.intMoveDirection)
				if(this.theSnake[0][1]>=this.theApples[0][1]){
					if(false==this.checkPotentialCollisions(0)){
						this.intMoveDirection=0;
						return;
					}else{
						if(false==this.checkPotentialCollisions(2)){
							this.intMoveDirection=2;
							return;
						}
					}
				}else{
					if(false==this.checkPotentialCollisions(2)){
						this.intMoveDirection=2;
						return;
					}else{
						if(false==this.checkPotentialCollisions(0)){
							this.intMoveDirection=0;
							return;
						}
					}
				}



	}

	if(0==this.intMoveDirection&&this.theSnake[0][1]-1<this.theApples[0][1])
		if(this.theSnake[0][0]>=this.theApples[0][0]){
			if(false==this.checkPotentialCollisions(3)){
				this.intMoveDirection=3;
				return;
			}else{
				if(false==this.checkPotentialCollisions(1)){
					this.intMoveDirection=1;
					return;
				}
			}
		}else{
			if(false==this.checkPotentialCollisions(1)){
				this.intMoveDirection=1;
				return;
			}else{
				if(false==this.checkPotentialCollisions(3)){
					this.intMoveDirection=3;
					return;
				}

			}
		}
	if(3==this.intMoveDirection&&this.theSnake[0][0]-1<this.theApples[0][0])
		if(this.theSnake[0][1]>=this.theApples[0][1]){
			if(false==this.checkPotentialCollisions(0)){
				this.intMoveDirection=0;
				return;
			}else{
				if(false==this.checkPotentialCollisions(2)){
					this.intMoveDirection=2;
					return;
				}
			}
		}else{
			if(false==this.checkPotentialCollisions(2)){
				this.intMoveDirection=2;
				return;
			}else{
				if(false==this.checkPotentialCollisions(0)){
					this.intMoveDirection=0;
					return;
				}
			}
		}
	if(2==this.intMoveDirection&&this.theSnake[0][1]+1>this.theApples[0][1])
		if(this.theSnake[0][0]>=this.theApples[0][0]){
			if(false==this.checkPotentialCollisions(3)){
				this.intMoveDirection=3;
				return;
			}else{
				if(false==this.checkPotentialCollisions(1)){
					this.intMoveDirection=1;
					return;
				}
			}
		}else{
			if(false==this.checkPotentialCollisions(1)){
				this.intMoveDirection=1;
				return;
			}else{
				if(false==this.checkPotentialCollisions(3)){
					this.intMoveDirection=3;
					return;
				}
			}
		}
	if(1==this.intMoveDirection&&this.theSnake[0][0]+1>this.theApples[0][0])
		if(this.theSnake[0][1]>=this.theApples[0][1]){
			if(false==this.checkPotentialCollisions(0)){
				this.intMoveDirection=0;
				return;
			}else{
				if(false==this.checkPotentialCollisions(2)){
					this.intMoveDirection=2;
					return;
				}
			}
		}else{
			if(false==this.checkPotentialCollisions(2)){
				this.intMoveDirection=2;
				return;
			}else{
				if(false==this.checkPotentialCollisions(0)){
					this.intMoveDirection=0;
					return;
				}
			}
		}
};
Program_DictionaryTraining.prototype.updateGame=function(){
	if(true==this.checkCollisions()){
		this.intGameMode=4;
		return;
	}
	if(true==this.blnScreensaverPlay){
		this.screensaverMovement();
	}
	var intAppleNumber=this.checkAppleEaten();
	if(-1!=intAppleNumber){
		this.eatApple(intAppleNumber);
		this.addRandomApple();
	}else this.moveSnake();
};
Program_DictionaryTraining.prototype.moveSnake=function(){
	for(var ii=this.theSnake.length-2;ii>=0;ii--){
		this.theSnake[ii+1][0]=this.theSnake[ii][0];
		this.theSnake[ii+1][1]=this.theSnake[ii][1];
	}
	switch(this.intMoveDirection){
		case 0:this.theSnake[0][1]--;break;
		case 1:this.theSnake[0][0]++;break;
		case 2:this.theSnake[0][1]++;break;
		case 3:this.theSnake[0][0]--;break;
	}
	if(true==this.blnScreensaverPlay){
		for(var ii=this.theSnakeMoveDirections.length-2;ii>=0;ii--){
			this.theSnakeMoveDirections[ii+1]=this.theSnakeMoveDirections[ii];
		}
		this.theSnakeMoveDirections[0]=this.intMoveDirection;
	}
};
Program_DictionaryTraining.prototype.drawWalls=function(){
	for(var i=0;i<=this.base.intScreenWidth_text-1;i++){
		this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(i,0)]="=";
		this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(i,this.base.intScreenHeight_text-1)]="=";
	}
	for(var j=1;j<=this.base.intScreenHeight_text;j++){
		this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(0,j)]="|";
		this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(this.base.intScreenWidth_text-1,j)]="|";
	}
};
Program_DictionaryTraining.prototype.drawSnake=function(){
	var i,j;
	var lstReturn=this.theSnake[0];
	i=lstReturn[0];
	j=lstReturn[1];
	this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(i,j)]="@";
	for(var ii=1;ii<this.theSnake.length;ii++){
		lstReturn=this.theSnake[ii];
		i=lstReturn[0];
		j=lstReturn[1];
		this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(i,j)]="#";
	}
};
Program_DictionaryTraining.prototype.intAppleOnList=function(lstExceptions,intAppleNumber){
	var intNumber=-1;
	for(var ii=0;ii<lstExceptions.length;ii++)
		if(lstExceptions[ii][0]==intAppleNumber)
			intNumber=ii;
	return intNumber;
};
Program_DictionaryTraining.prototype.emptyByteChar=function(intAppleNumber){
	if(intAppleNumber<=31)return true;	
	if(intAppleNumber>=127&&intAppleNumber<=160)return true;	
	return false;
};
Program_DictionaryTraining.prototype.drawApples=function(){
	var i,j,intValue;
	var lstExceptions=[[0,"zero"],[173,"173"],[32,"space"],[27,"esc"],[127,"del"]];
	var intException=-1;
	var lstReturn;
	lstReturn=this.computer.lstVeryOrange;
	var intR,intG,intB,intA;
	//mhdmodiff--
	var strValue;
	intR=lstReturn[0];
	intG=lstReturn[1];
	intB=lstReturn[2];
	intA=lstReturn[3];
	for(var ii=0;ii<this.theApples.length;ii++){
		lstReturn=this.theApples[ii];
		i=lstReturn[0];
		j=lstReturn[1];
		intValue=lstReturn[2];
		if("normal"==this.strGameMode){
			intException=this.intAppleOnList(lstExceptions,intValue);	
			if(-1==intException)
				if(false==this.emptyByteChar(intValue))
					strValue=String.fromCharCode(intValue);
				else strValue=""+intValue;
			else strValue=""+lstExceptions[intException][1];
			for(var jj=0;jj<strValue.length;jj++)
					this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(i+jj,j)]=strValue[jj];

		}
		if("inches"==this.strGameMode||"dictionary"==this.strGameMode){
			strValue=this.lstDictionary[intValue][0];
			for(var jj=0;jj<strValue.length;jj++)
				this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(i+jj,j)]=strValue[jj];
			}
	};
};
Program_DictionaryTraining.prototype.drawPoints=function(){
	var strPoints,strPoints0,strPoints1;
	if("normal"==this.strGameMode)
		strPoints="Snake: "+this.intPoints+" : "+this.intAppleEaten;
	if("inches"==this.strGameMode)
		strPoints=""+this.intPoints+" : "+this.lstDictionary[this.intAppleEaten]+" "+this.lstDictionary[this.intAppleEaten][0].charCodeAt(0);
	if("dictionary"==this.strGameMode){
		strPoints0=""+this.intPoints+" : "+this.lstDictionary[this.intAppleEaten][0]+" "+this.lstDictionary[this.intAppleEaten][1];
		var strMeanings0,strMeanings1,strMeanings2;
		strMeanings0=this.lstDictionary[this.intAppleEaten][2][0];
		strMeanings1=this.lstDictionary[this.intAppleEaten][3][0];
		strMeanings2=this.lstDictionary[this.intAppleEaten][4][0];
		strPoints1="";
		if(undefined!=strMeanings0)strPoints1+=strMeanings0+" ";
		if(undefined!=strMeanings1)strPoints1+=strMeanings1+" ";
		if(undefined!=strMeanings2)strPoints1+=strMeanings2+" ";
	}
	if("normal"==this.strGameMode||"inches"==this.strGameMode){
		document.title=strPoints;
		var x=Math.round((this.base.intScreenWidth_text-1)/2.-strPoints.length/2.);
		for(var ii=0;ii<strPoints.length;ii++)
			this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(x+ii,0)]=strPoints[ii];
	}
	if("dictionary"==this.strGameMode){
		document.title=strPoints0;
		var x=Math.round((this.base.intScreenWidth_text-1)/2.-strPoints0.length/2.);
		for(var ii=0;ii<strPoints0.length;ii++)
			this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(x+ii,0)]=strPoints0[ii];
		x=Math.round((this.base.intScreenWidth_text-1)/2.-strPoints1.length/2.);
		for(var ii=0;ii<strPoints1.length;ii++)
			this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(x+ii,this.base.intScreenHeight_text-1)]=strPoints1[ii];

	}
};
Program_DictionaryTraining.prototype.drawMouse=function(){
	this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(Math.round(this.fltMouseX),Math.round(this.fltMouseY))]=String.fromCharCode(73);
};
Program_DictionaryTraining.prototype.updateDimensions=function(){
};
Program_DictionaryTraining.prototype.inits=function(){
	var txtFunFunFun=document.getElementById("txtFunFunFun");
	/*txtFunFunFun.value="";*/
	this.base.blnTextMode=true;
	if(this.strArgs!=this.prevStrArgs)
		this.reloadStrArgs();

	var objArgs={};
	objArgs.varCols=null;
	objArgs.varRows=null;
     	/*
     	if(null==netspace.computer.inchesKeyboard||null==netspace.computer.inchesKeyboard.varDictionary)
		//mhdmodiff
		netspace.openFile(function(content){netspace.computer.theActualProgram.inits2(content);},objArgs);
     	this.inits2(0);
     	*/
	if("inches"==this.strGameMode||"dictionary"==this.strGameMode)
     		if(undefined==this.lstDictionary)
			if("inches"==this.strGameMode)
				//mhdmodiff
				netspace.openFile(function(content){netspace.computer.theActualProgram.inits2_inches(content);},objArgs);
			if("dictionary"==this.strGameMode)
				//mhdmodiff
				netspace.openFile(function(content){netspace.computer.theActualProgram.inits2_dictionary(content);},objArgs);
};
Program_DictionaryTraining.prototype.inits2_inches=function(strContent){
	/*var objDictionary=JSON.parse(strContent);*/
     	var inchesKeyboard=null;
	var objDictionary=null;
     	if(0!=strContent){
     		inchesKeyboard=new InchesKeyboard();
		var intFirst123=strContent.indexOf("{");
		var intSecond123=strContent.substring(intFirst123+1).indexOf("{");
		if(-1!=intSecond123)strContent=strContent.substring(intFirst123,intSecond123);
		objDictionary=inchesKeyboard.parseContents(strContent);
     	}else{
     		inchesKeyboard=netspace.computer.inchesKeyboard;
		objDictionary=netspace.computer.inchesKeyboard.varDictionary;
     	}
	/*console.log(objDictionary);*/
	this.objDictionary=objDictionary;
	this.lstDictionary=[];
	//mhdmodiff--
	//for(x in this.objDictionary)
	for(var x in this.objDictionary)
		this.lstDictionary.push(this.objDictionary[x]);
	this.lstDictionary=flattenConcat(this.lstDictionary);
	/*console.log(this.lstDictionary);*/
};
Program_DictionaryTraining.prototype.inits2_dictionary=function(strContent){
	/*var objDictionary=JSON.parse(strContent);*/
     	var inchesKeyboard=null;
	var objDictionary=null;
     	if(0!=strContent){
     		inchesKeyboard=new InchesKeyboard();
		/*objDictionary=inchesKeyboard.parseSlownikContents(strContent);*/
		var intFirst123=strContent.indexOf("{");
		var intSecond123=strContent.substring(intFirst123+1).indexOf("{");
		if(-1!=intSecond123)strContent=strContent.substring(intSecond123);
		objDictionary=JSON.parse(strContent);
     	}else{
     		inchesKeyboard=netspace.computer.inchesKeyboard;
		objDictionary=netspace.computer.inchesKeyboard.varSlownik;
     	}
	/*console.log(objDictionary);*/
	this.objDictionary=objDictionary;
	this.lstDictionary=[];
	var lstEntry=[];
	//mhdmodiff--
	//for(x in this.objDictionary){
	for(var x in this.objDictionary){
		lstEntry=[];
		lstEntry.push(x);
		for(var i=0;i<this.objDictionary[x].length;i++)
			lstEntry.push(this.objDictionary[x][i]);
		this.lstDictionary.push([lstEntry]);
	}
	this.lstDictionary=flattenConcat(this.lstDictionary);
	/*console.log(this.lstDictionary);*/
};
Program_DictionaryTraining.prototype.stopFinalizations=function(strString){
	this.prevStrArgs=this.strArgs;
};
Program_DictionaryTraining.prototype.exitFinalizations=function(strString){
	this.prevStrArgs=this.strArgs;
};
Program_DictionaryTraining.prototype.onKeyDown=function(evtEvent){
	switch(evtEvent.key){
		case "F4":/*Alt+F4 would close the browser*/this.base.exitProgram(this,"Snake program exited.");break;
		case "o":/*small keyboards without necessity to press ctrl*/this.base.exitProgram(this,"Snake program exited.");break;
		case "c":
			if(true==evtEvent.ctrlKey)this.base.exitProgram(this,"Snake program exited.");
			else if(2==this.intMoveDirection)this.prevGameTime=null;if(0!=this.intMoveDirection){this.intMoveDirection=2;this.blnCancelScreensaverPlay=true;};
			break;
		case "z":
			if(true==evtEvent.ctrlKey) this.base.stopProgram(this,"Snake program stopped. If you run it again with the same arguments, previous game state will be reloaded."+String.fromCharCode(10)+"Program call: snake intMinApple intMaxApple intGameSpeed_ms"+String.fromCharCode(10)+"snake==snake 1 2359 250");
			else if(2==this.intMoveDirection)this.prevGameTime=null;if(0!=this.intMoveDirection){this.intMoveDirection=2;this.blnCancelScreensaverPlay=true;};
			break;
		/*for not precise tiny onscreen keyboards*/
		case "W":
		case "w":
		case "Q":
		case "q":
		case "E":
		case "e":
		case "R":
		case "r":
		case "ArrowUp":if(0==this.intMoveDirection)this.prevGameTime=null;if(2!=this.intMoveDirection){this.intMoveDirection=0;this.blnCancelScreensaverPlay=true;};
			break;
		case "D":
		case "d":
		case "F":
		case "f":
		case "G":
		case "g":
		case "ArrowRight":if(1==this.intMoveDirection)this.prevGameTime=null;if(3!=this.intMoveDirection){this.intMoveDirection=1;this.blnCancelScreensaverPlay=true;};
			break;
		case "S":
		case "s":
		case "Z":
		case "z":
		case "X":
		case "x":
		case "C":
		case "c":
		case "ArrowDown":if(2==this.intMoveDirection)this.prevGameTime=null;if(0!=this.intMoveDirection){this.intMoveDirection=2;this.blnCancelScreensaverPlay=true;};
			break;
		case "A":
		case "a":
		case "ArrowLeft":if(3==this.intMoveDirection)this.prevGameTime=null;if(1!=this.intMoveDirection){this.intMoveDirection=3;this.blnCancelScreensaverPlay=true;};
			break;
		case "p":
			if(4==this.intGameMode){this.newGameModeGame();break;}if(0==this.intGameMode){this.intGameMode=1;break;}if(1==this.intGameMode){this.intGameMode=0;break;};break;
		case "Alt":if(1==evtEvent.location){if(false==this.blnMouseBlocked){this.blnMouseBlocked=true;this.prevMouseX=null;this.prevMouseY=null;}else this.blnMouseBlocked=false;}break;
	}
};
Program_DictionaryTraining.prototype.onKeyUp=function(evtEvent){
};
Program_DictionaryTraining.prototype.onMouseDown=function(evtEvent){
};
Program_DictionaryTraining.prototype.onMouseUp=function(evtEvent){
};
Program_DictionaryTraining.prototype.onMouseWheel=function(evtEvent){
};
Program_DictionaryTraining.prototype.onMouseMove=function(evtEvent){
	this.base.onMouseMove_text(evtEvent,this);
	return;
	if(true==this.blnMouseBlocked)return;
	var diffX,diffY;
	//mhdmodiff--
	//if(null==this.prevMouseX||null==this.prevMouseY){
	if(true==netspace.nonNumber(this.prevMouseX)||true==netspace.nonNumber(this.prevMouseY)){
		this.prevMouseX=evtEvent.offsetX;
		this.prevMouseY=evtEvent.offsetY;
		return;
	}
	diffX=evtEvent.offsetX-this.prevMouseX;
	diffY=evtEvent.offsetY-this.prevMouseY;
	this.prevMouseX=evtEvent.offsetX;
	this.fltMouseX+=this.fltMouseSpeed*diffX;
	this.prevMouseY=evtEvent.offsetY;
	this.fltMouseY+=this.fltMouseSpeed*diffY;
	if(this.fltMouseX<0)this.fltMouseX=0;
	if(this.fltMouseX>this.base.intScreenWidth_text-1)this.fltMouseX=this.base.intScreenWidth_text-1;
	if(this.fltMouseY<0)this.fltMouseY=0;
	if(this.fltMouseY>this.base.intScreenHeight_text-1)this.fltMouseY=this.base.intScreenHeight_text-1;
};
Program_DictionaryTraining.prototype.newGameModeGame=function(){
	this.fltMouseX=Math.round((this.base.intScreenWidth_text-1)/2.);
	this.fltMouseY=Math.round((this.base.intScreenHeight_text-1)/2.);
	this.intMoveDirection=0;/*[up,right,down,left]*/
	this.gameSpeed=0.001*this.intGameSpeed_ms;
	this.prevGameTime=null;
	var i,j;
	i=Math.round(this.base.intScreenWidth_text/2.);
	j=Math.round(this.base.intScreenHeight_text/2.);
	this.theSnake=[[i,j],[i+1,j]];
	this.theSnakeMoveDirections=[0,0];
	this.intGameMode=0;
	this.base.clearScreen_text();
	this.theApples=[];
	this.addRandomApple();
	this.intPoints=0;
	this.intAppleEaten=0;
};
Program_DictionaryTraining.prototype.gameModeGame=function(currentFrameTime){
	var now=performance.now();
	this.base.clearScreen_text();
	this.drawWalls();
	this.drawSnake();
	this.drawApples();
	this.drawPoints();
	this.drawMouse();
	if(null==this.prevGameTime){
		this.prevGameTime=now;
		this.updateGame();
	}
	if(Math.abs(this.prevGameTime-currentFrameTime)>this.gameSpeed*1000){
		this.updateGame();
		this.prevGameTime=now;
	}
};
Program_DictionaryTraining.prototype.reloadStrArgs=function(){
	var lstArgs=this.strArgs.split(" ");
	this.intMinApple=1;
	this.intMaxApple=2359;
	this.intGameSpeed_ms=250;
	this.strMode="normal";
	var strScreensaverPlay;
	this.blnScreensaverPlay=true;
	var intArg=null,intNumericArg=0;
	for(var ii=0;ii<lstArgs.length;ii++){
		if("scrsvr"==lstArgs[ii].substring(0,6)){
			this.blnScreensaverPlay=true;
		}
		if("game"==lstArgs[ii].substring(0,4)){
			this.blnScreensaverPlay=false;
		}
		if("normal"==lstArgs[ii]){
			this.strGameMode="normal";
		}
		if("inches"==lstArgs[ii]){
			this.strGameMode="inches";
		}
		if("dictionary"==lstArgs[ii]){
			this.strGameMode="dictionary";
		}
		intArg=parseInt(lstArgs[ii]);
		if(false==netspace.nonNumber(intArg)){
			switch(intNumericArg){
				case 0:
					this.intMinApple=intArg;
					intNumericArg++;
					break;
				case 1:
					this.intMaxApple=intArg;
					intNumericArg++;
					break;
				case 2:
					this.intGameSpeed_ms=intArg;
					intNumericArg++;
					break;

			}
		}
		
	}
	this.prevStrArgs=this.strArgs;
	this.intGameMode=4;
};
Program_DictionaryTraining.prototype.loopFunction=function(currentFrameTime){
	switch(this.intGameMode){
		case 0:this.gameModeGame(currentFrameTime);break;
		case 1:this.gameModePause(currentFrameTime);break;
		case 4:this.gameModeGameOver(currentFrameTime);break;
	}
};
/*
var strInstallationFailure="Program installation failed - load Computer first: ";
if(undefined===netspace.computer){
	alert(strInstallationFailure+"undefined===netspace.computer");
	return;
}
if(null===netspace.computer){
	alert(strInstallationFailure+"null===netspace.computer");
	return;
}
if(undefined==window.Computer){
	alert(strInstallationFailure+"undefined==windows.Computer");
	return;
}
if(undefined==netspace.computer.installProgram){
	alert(strInstallationFailure+"undefined==netspace.computer.installProgram");
	return;
}
*/

var Program_TerminalConstructor_strF=function(that,computer,base,XWindow,startx){
};
var Program_TerminalConstructor=function(that,computer,base,XWindow,startx){
	that.computer=computer;
	that.intFontWidth=computer.intFontWidth;
	that.intFontHeight=computer.intFontHeight;
	that.base=base;
	that.XWindow=XWindow;
	that.startx=startx;
	that.fltMouseX=0;
	that.fltMouseY=0;
	that.lstRunningPrograms=[];
	that.resize();
	that.clearScreen_text();
	that.theShell=new Program_Bash(that.computer,that);
	that.theShell.lstShellCommandNames.push("exit");
	that.theShell.lstShellCommands.push(that.exit);
	that.theShell.lstShellCommandNames.push("that");
	that.theShell.lstShellCommands.push(that);
	that.theActualProgram=that.theShell;
	that.theActualProgram.inits();
};
var Program_Terminal=function(computer,base,XWindow,startx){
	Program_TerminalConstructor(this,computer,base,XWindow,startx);
	Program_TerminalConstructor_strF(this,computer,base,XWindow,startx);
};
Program_Terminal.prototype.exit=function(that){
	var that=this[this.length-1];
	that.XWindow.close();
};
Program_Terminal.prototype.resize=function(){
	/*graphical function to compute textual dimensions, for text analogous updateDimensions*/
	this.intScreenWidth_text=Math.floor((this.XWindow.intInnerWidth)/this.XWindow.intFontWidth);
	this.intScreenHeight_text=Math.floor((this.XWindow.intInnerHeight)/this.XWindow.intFontHeight);
	if(null!=this.theActualProgram)if(null!=this.theActualProgram.updateDimensions)this.theActualProgram.updateDimensions();
	return [this.intScreenWidth_text*this.XWindow.intFontWidth,this.intScreenHeight_text*this.XWindow.intFontHeight];
};
Program_Terminal.prototype.clearScreen_text=function(){
	this.lstScreenBuffer_text=this.computer.spacesList(this.intScreenWidth_text*this.intScreenHeight_text);
	this.lstForegroundBuffer=netspace.emptyList(this.intScreenWidth_text*this.intScreenHeight_text);
	this.lstBackgroundBuffer=netspace.emptyList(this.intScreenWidth_text*this.intScreenHeight_text);
	var intR,intG,intB,intA;
	//mhdmodiff--
	//lstReturn=this.computer.lstConsoleGray;
	var lstReturn=this.computer.lstConsoleGray;
	intR=lstReturn[0];
	intG=lstReturn[1];
	intB=lstReturn[2];
	intA=lstReturn[3];
	for(var ii=0;ii<this.lstForegroundBuffer.length;ii++){
		this.lstForegroundBuffer[ii]=[intR,intG,intB,intA];
		this.lstBackgroundBuffer[ii]=[0,0,0,255];
	}
};
Program_Terminal.prototype.getScreenIndex_text=function(i,j){
	return j*(this.intScreenWidth_text)+i;
};
Program_Terminal.prototype.drawComputerScreenTexture_text=function(lstScreenBuffer_text,lstForegroundBuffer,lstBackgroundBuffer){
	var lstReturn;
	if(undefined==lstForegroundBuffer||null==lstForegroundBuffer){
		lstForegroundBuffer=netspace.emptyList(lstScreenBuffer_text.length);
		var intR,intG,intB,intA;
		lstReturn=this.computer.lstConsoleGray;
		intR=lstReturn[0];
		intG=lstReturn[1];
		intB=lstReturn[2];
		intA=lstReturn[3];
		for(var ii=0;ii<lstForegroundBuffer.length;ii++)lstForegroundBuffer[ii]=[intR,intG,intB,intA];
	}
	if(undefined==lstBackgroundBuffer||null==lstBackgroundBuffer){
		lstBackgroundBuffer=netspace.emptyList(lstScreenBuffer_text.length);
		for(var ii=0;ii<lstBackgroundBuffer.length;ii++)lstBackgroundBuffer[ii]=[0,0,0,255];
	}
	var screenContext=this.XWindow.XWindowContentContext;
	var screenImage=screenContext.getImageData(0,0,this.XWindow.intInnerWidth,this.XWindow.intInnerHeight);
	for(var i=0;i<this.XWindow.intInnerWidth;i++){
		for(var j=0;j<this.XWindow.intInnerHeight;j++){
			var index=(j*this.XWindow.intInnerWidth+i)*4;
			screenImage.data[index+0]=netspace.lstColors[1][0];
			screenImage.data[index+1]=netspace.lstColors[1][1];
			screenImage.data[index+2]=netspace.lstColors[1][2];
			screenImage.data[index+3]=255;
		}
	}
	screenContext.putImageData(screenImage,0,0);
	var intLineWidth=this.intScreenWidth_text-1;
	var intLineHeight=this.intScreenHeight_text-1;
	var jj=0;
	var intI=0;
	var intJ=this.XWindow.intFontHeight;
	var intDJ=this.XWindow.intFontHeight;
	var intDI=this.XWindow.intFontWidth;
	var i=intI,j=intJ;
	screenContext.font="10px Courier";
	for(var ii=0;ii<this.intScreenWidth_text*this.intScreenHeight_text;ii++){
		screenContext.beginPath();
		if(undefined==lstBackgroundBuffer[ii])
			console.log(lstBackgroundBuffer);
		screenContext.fillStyle="rgba("+lstBackgroundBuffer[ii][0]+","+lstBackgroundBuffer[ii][1]+","+lstBackgroundBuffer[ii][2]+","+lstBackgroundBuffer[ii][3]+")";
		screenContext.moveTo(i,j);
		screenContext.lineTo(i+intDI,j);
		screenContext.lineTo(i+intDI,j-intDJ);
		screenContext.lineTo(i,j-intDJ);
		screenContext.lineTo(i,j);
		screenContext.fill();
		i+=intDI;
		jj++;
		if(jj>intLineWidth){
			i=0;j+=intDJ;
			jj=0;
		}
	}
	jj=0;
	intI=0;
	intJ=this.XWindow.intFontHeight;
	intDJ=this.XWindow.intFontHeight;
	intDI=this.XWindow.intFontWidth;
	i=intI,j=intJ;
	for(var ii=0;ii<this.intScreenWidth_text*this.intScreenHeight_text;ii++){
		screenContext.fillStyle="rgba("+lstForegroundBuffer[ii][0]+","+lstForegroundBuffer[ii][1]+","+lstForegroundBuffer[ii][2]+","+lstForegroundBuffer[ii][3]+")";
		screenContext.fillText(lstScreenBuffer_text[ii][0],i,j);
		i+=intDI;
		jj++;
		if(jj>intLineWidth){
			i=0;j+=intDJ;
			jj=0;
		}
	}
};
Program_Terminal.prototype.programNameInMemoryFromPID=function(intPID){
	if(intPID>=this.lstRunningPrograms.length)return null;
	return this.lstRunningPrograms[intPID][0];
};
Program_Terminal.prototype.programObjectInMemoryFromPID=function(intPID){
	if(intPID>=this.lstRunningPrograms.length)return null;
	return this.lstRunningPrograms[intPID][2];
};
Program_Terminal.prototype.programInMemory=function(strProgramName){
	for(var jj=this.lstRunningPrograms.length-1;jj>=0;jj--){
		if(strProgramName==this.lstRunningPrograms[jj][0])
			return jj;
	}
	return -1;
};
Program_Terminal.prototype._runProgram=function(strString,jj,lstString){
	this.theActualProgram=this.lstRunningPrograms[jj][2];
	this.theActualProgram.base=this;
	if(lstString.length>0)
		this.theActualProgram.strArgs=strString.substring(lstString[0].length+1,strString.length);
	else this.theActualProgram.strArgs="";
	this.theActualProgram.inits();
};
Program_Terminal.prototype.startProgram=function(strString){
	var lstString=strString.split(" ");
	var jj=-1;
	for(var ii=0;ii<this.computer.lstProgramNames.length;ii++){
		if(lstString[0]==this.computer.lstProgramNames[ii]){
			this.lstRunningPrograms.push([this.computer.lstProgramNames[ii],this.lstRunningPrograms.length,new this.computer.lstPrograms[ii](this.computer,this)]);
			this._runProgram(strString,this.lstRunningPrograms.length-1,lstString);
			return true;
		}
	}
	return false;
};
Program_Terminal.prototype.resumeProgram=function(strString){
	var lstString=strString.split(" ");
	var jj=-1;
	for(var ii=0;ii<this.computer.lstProgramNames.length;ii++){
		if(lstString[0]==this.computer.lstProgramNames[ii]){
			jj=this.programInMemory(lstString[0]);
			if(jj>-1){
				this._runProgram(strString,jj,lstString);
				return true;
			}else{
				return false;
			}
		}
	}
	return false;
};
Program_Terminal.prototype.runProgram=function(strString){
	var lstString=strString.split(" ");
	var jj=-1;
	for(var ii=0;ii<this.computer.lstProgramNames.length;ii++){
		if(lstString[0]==this.computer.lstProgramNames[ii]){
			jj=this.programInMemory(lstString[0]);
			if(jj>-1){
				this._runProgram(strString,jj,lstString);
				return true;
			}else{
				this.lstRunningPrograms.push([this.computer.lstProgramNames[ii],this.lstRunningPrograms.length,new this.computer.lstPrograms[ii](this.computer,this)]);
				this._runProgram(strString,this.computer.lstRunningPrograms.length-1,lstString);
				return true;
			}
		}
	}
	return false;
};
Program_Terminal.prototype.changeComputerScreen_text=function(lstScreenBuffer_text,lstForegroundBuffer,lstBackgroundBuffer){
	this.drawComputerScreenTexture_text(lstScreenBuffer_text,lstForegroundBuffer,lstBackgroundBuffer);
};
Program_Terminal.prototype.loopFunction=function(currentFrameTime){
	if(null!=this.theActualProgram){
		this.theActualProgram.loopFunction(currentFrameTime);
	}
	this.changeComputerScreen_text(this.lstScreenBuffer_text,this.lstForegroundBuffer,this.lstBackgroundBuffer);
};
Program_Terminal.prototype.stopFinalizations=function(strString){
	this.theActualProgram.stopFinalizations(strString);
};
Program_Terminal.prototype.exitFinalizations=function(strString){
	this.theActualProgram.exitFinalizations(strString);
};
Program_Terminal.prototype.stopProgram=function(theProgram,strString){
	this.theShell.echo(this.theShell,strString);
	if(null!=theProgram.stopFinalizations)theProgram.stopFinalizations();
	this.theActualProgram=this.theShell;
};
Program_Terminal.prototype.exitProgram=function(theProgram,strString){
	this.theShell.echo(this.theShell,strString);
	if(null!=theProgram.exitFinalizations)theProgram.exitFinalizations();
	var thePID=null;
	for(var intPID=this.lstRunningPrograms.length-1;intPID>=0;intPID--){
		if(theProgram==this.lstRunningPrograms[intPID][2]){
			thePID=intPID;
			break;
		}
	}
	for(var ii=thePID+1;ii<this.lstRunningPrograms.length;ii++)
		this.lstRunningPrograms[ii][1]--;
	if(null!=thePID)this.lstRunningPrograms.splice(thePID,1);
	this.theActualProgram=this.theShell;
};
Program_Terminal.prototype.onKeyDown=function(evtEvent){
	if(null!=this.theActualProgram)
		this.theActualProgram.onKeyDown(evtEvent);
};
Program_Terminal.prototype.onKeyUp=function(evtEvent){
	if(null!=this.theActualProgram)
		this.theActualProgram.onKeyUp(evtEvent);
};
Program_Terminal.prototype.onMouseDown=function(evtEvent){
	if(null!=this.theActualProgram)
		this.theActualProgram.onMouseDown(evtEvent);
};
Program_Terminal.prototype.onMouseUp=function(evtEvent){
	if(null!=this.theActualProgram)
		this.theActualProgram.onMouseUp(evtEvent);
};
Program_Terminal.prototype.onMouseWheel=function(evtEvent){
	if(null!=this.theActualProgram)
		this.theActualProgram.onMouseWheel(evtEvent);
};
Program_Terminal.prototype.onMouseMove=function(evtEvent){
	if(null!=this.theActualProgram)
		this.theActualProgram.onMouseMove(evtEvent);
};
Program_Terminal.prototype.drawMouse_text=function(programPointer){
	this.lstScreenBuffer_text[this.getScreenIndex_text(Math.round(this.fltMouseX),Math.round(this.fltMouseY))]=String.fromCharCode(73);
};
Program_Terminal.prototype.onMouseMove_text=function(evtEvent,programPointer){
	if(true==programPointer.blnMouseBlocked)return;
	if(true==netspace.chk3dMouseMode.checked){
		var diffX,diffY;
		//mhdmodiff--
		//if(null==programPointer.prevMouseX||null==programPointer.prevMouseY){
		if(true==netspace.nonNumber(programPointer.prevMouseX)||true==netspace.nonNumber(programPointer.prevMouseY)){
			programPointer.prevMouseX=evtEvent.offsetX;
			programPointer.prevMouseY=evtEvent.offsetY;
			return;
		}
		diffX=evtEvent.offsetX-programPointer.prevMouseX;
		diffY=evtEvent.offsetY-programPointer.prevMouseY;
		programPointer.prevMouseX=evtEvent.offsetX;
		programPointer.fltMouseX+=programPointer.fltMouseSpeed*diffX;
		programPointer.prevMouseY=evtEvent.offsetY;
		programPointer.fltMouseY+=programPointer.fltMouseSpeed*diffY;
	}else{
		var fltMouseX,fltMouseY;
		var intInnerX,intInnerY;
		intInnerX=this.XWindow.intInnerX;
		intInnerY=this.XWindow.intInnerY;
		fltMouseX=(evtEvent.offsetX-intInnerX)/this.intFontWidth;
		fltMouseY=(evtEvent.offsetY-intInnerY)/this.intFontHeight;
		//mhdmodiff--
		//if(null==programPointer.prevMouseX||null==programPointer.prevMouseY){
		if(true==netspace.nonNumber(programPointer.prevMouseX)||true==netspace.nonNumber(programPointer.prevMouseY)){
			programPointer.prevMouseX=fltMouseX;
			programPointer.prevMouseY=fltMouseY;
		}
		programPointer.prevMouseX=fltMouseX;
		programPointer.fltMouseX=fltMouseX;
		programPointer.prevMouseY=fltMouseY;
		programPointer.fltMouseY=fltMouseY;
	}
	if(programPointer.fltMouseX<0)programPointer.fltMouseX=0;
	if(programPointer.fltMouseX>this.intScreenWidth_text-1)programPointer.fltMouseX=this.intScreenWidth_text-1;
	if(programPointer.fltMouseY<0)programPointer.fltMouseY=0;
	if(programPointer.fltMouseY>this.intScreenHeight_text-1)programPointer.fltMouseY=this.intScreenHeight_text-1;
};
var XWindowConstructor_strF=function(that,computer,base,theSuper,intRootX,intRootY,intWidth,intHeight,strTitle){
};
var XWindowConstructor=function(that,computer,base,theSuper,intRootX,intRootY,intWidth,intHeight,strTitle){
	that.computer=computer;
	that.base=base;
	that.theSuper=theSuper;
	that.intFontWidth=that.theSuper.intFontWidth;
	that.intFontHeight=that.theSuper.intFontHeight;
	if(undefined==intRootX||null==intRootX)
		that.intRootX=0;
	else that.intRootX=Math.round(intRootX);
	if(undefined==intRootY||null==intRootY)
		that.intRootY=0;
	else that.intRootY=Math.round(intRootY);
	if(undefined==intWidth||null==intWidth)
		that.intWidth=462;
	else that.intWidth=Math.round(intWidth);
	if(undefined==intHeight||null==intHeight)
		that.intHeight=361;
	else that.intHeight=Math.round(intHeight);
	if(undefined==strTitle||null==strTitle)
		that.strTitle="";
	else that.strTitle=strTitle;
	that.intInnerX=that.intRootX+1;
	that.intInnerY=that.intRootY+10;
	that.intInnerWidth=that.intWidth-2;
	that.intInnerHeight=that.intHeight-that.theSuper.intTitlebarHeight-1;
	that.XWindowCanvas=document.createElement("canvas");
	that.XWindowContext=that.XWindowCanvas.getContext("2d");
	that.XWindowContext.width=that.intWidth;
	that.XWindowContext.height=that.intHeight;
	that.XWindowFrameBackgroundColor=that.theSuper.XWindowFrameBackgroundColor;
	that.XWindowFramePressedColor=that.theSuper.XWindowFramePressedColor;
	that.XWindowFrameForegroundColor=that.theSuper.XWindowFrameForegroundColor;
	that.XWindowContentBackgroundColor=that.theSuper.XWindowContentBackgroundColor;
	that.frameColor=that.XWindowFrameBackgroundColor;
	that.XWindowImage=that.XWindowContext.createImageData(that.intWidth,that.intHeight);
	var index=0;
	for(var i=0;i<that.intWidth;i++)
		for(var j=0;j<that.intHeight;j++){
			index=(j*that.intWidth+i)*4;
			that.XWindowImage.data[index+0]=that.XWindowContentBackgroundColor[0];
			that.XWindowImage.data[index+1]=that.XWindowContentBackgroundColor[1];
			that.XWindowImage.data[index+2]=that.XWindowContentBackgroundColor[2];
			that.XWindowImage.data[index+3]=that.XWindowContentBackgroundColor[3];
		}
	that.XWindowContext.putImageData(that.XWindowImage,0,0);
	that.XWindowContentCanvas=document.createElement("canvas");
	that.XWindowContentContext=that.XWindowContentCanvas.getContext("2d");
	that.XWindowContentContext.width=that.intInnerWidth;
	that.XWindowContentContext.height=that.intInnerHeight;
	that.XWindowContentImage=that.XWindowContentContext.createImageData(that.intInnerWidth,that.intInnerHeight);
	var index=0;
	for(var i=0;i<that.intInnerWidth;i++)
		for(var j=0;j<that.intInnerHeight;j++){
			index=(j*that.intInnerWidth+i)*4;
			that.XWindowContentImage.data[index+0]=that.XWindowContentBackgroundColor[0];
			that.XWindowContentImage.data[index+1]=that.XWindowContentBackgroundColor[1];
			that.XWindowContentImage.data[index+2]=that.XWindowContentBackgroundColor[2];
			that.XWindowContentImage.data[index+3]=that.XWindowContentBackgroundColor[3];
		}
	that.XWindowContentContext.putImageData(that.XWindowContentImage,0,0);
	that.XWindowButtonsCoords=[[that.intWidth-25,5],[that.intWidth-15,5],[that.intWidth-5,5]];
	that.XWindowButtonsRadius=4;
	that.blnMaximized=false;
	that.lstPreviousWindowCoords=[that.intRootX,that.intRootY,that.intWidth,that.intHeight];
	that.theActualProgram=null;
};
var XWindow=function(computer,base,theSuper,intRootX,intRootY,intWidth,intHeight,strTitle){
	XWindowConstructor(this,computer,base,theSuper,intRootX,intRootY,intWidth,intHeight,strTitle);
	XWindowConstructor_strF(this,computer,base,theSuper,intRootX,intRootY,intWidth,intHeight,strTitle);
};
XWindow.prototype.getScreenIndex_graphics=function(i,j){
	return (j*(this.intWidth)+i)*4;
};
XWindow.prototype.copyToTheScreen=function(){
	this.XWindowImage=this.XWindowContext.getImageData(0,0,this.intWidth,this.intHeight);
	var index0,index1;
	for(var i=0;i<this.intWidth;i++)
		for(var j=0;j<this.intHeight;j++){
			if(i+this.intRootX>=0&&j+this.intRootY>=0&&i+this.intRootX<this.base.intScreenWidth_graphics&&j+this.intRootY<this.base.intScreenHeight_graphics){
				index0=this.base.getScreenIndex_graphics(i+this.intRootX,j+this.intRootY);
				index1=this.getScreenIndex_graphics(i,j);
				this.base.lstScreenBuffer_graphics[index0+0]=this.XWindowImage.data[index1+0];
				this.base.lstScreenBuffer_graphics[index0+1]=this.XWindowImage.data[index1+1];
				this.base.lstScreenBuffer_graphics[index0+2]=this.XWindowImage.data[index1+2];
				this.base.lstScreenBuffer_graphics[index0+3]=this.XWindowImage.data[index1+3];
			}
		}
	
};
XWindow.prototype.getWindowElement=function(intX,intY){
	var intBtnX,intBtnY;
	var intR=this.XWindowButtonsRadius;
	var lstReturn;
	for(var ii=0;ii<3;ii++){
		lstReturn=this.XWindowButtonsCoords[ii];
		intBtnX=lstReturn[0];
		intBtnY=lstReturn[1];
		if(intX>=this.intRootX+intBtnX-intR&&intX<=this.intRootX+intBtnX+intR&&intY>=this.intRootY+intBtnY-intR&&intY<=this.intRootY+intBtnY+intR)return 7+ii;
	}
	var intTitlebarHeight=this.theSuper.intTitlebarHeight;
	if(intX>=this.intRootX+this.theSuper.intMousePrecision&&intX<=this.intRootX+this.intWidth-this.theSuper.intMousePrecision&&intY>=this.intRootY+intTitlebarHeight&&intY<=this.intRootY+this.intHeight-this.theSuper.intMousePrecision)return 0;
	if(intX>=this.intRootX&&intX<=this.intRootX+this.intWidth&&intY>=this.intRootY&&intY<=this.intRootY+intTitlebarHeight)return 1;
	if(intX>=this.intRootX+this.intWidth-this.theSuper.intMousePrecision&&intX<=this.intRootX+this.intWidth+this.theSuper.intMousePrecision&&intY>=this.intRootY+intTitlebarHeight&&intY<this.intRootY+this.intHeight-intTitlebarHeight)return 2;
	if(intX>=this.intRootX+this.intWidth-intTitlebarHeight&&intX<=this.intRootX+this.intWidth+this.theSuper.intMousePrecision&&intY>=this.intRootY+this.intHeight-intTitlebarHeight&&intY<=this.intRootY+this.intHeight+this.theSuper.intMousePrecision)return 3;
	if(intX>=this.intRootX+intTitlebarHeight&&intX<=this.intRootX+this.intWidth-intTitlebarHeight&&intY>=this.intRootY+this.intHeight-this.theSuper.intMousePrecision&&intY<=this.intRootY+this.intHeight+this.theSuper.intMousePrecision)return 4;
	if(intX>=this.intRootX-this.theSuper.intMousePrecision&&intX<=this.intRootX+this.intWidth-intTitlebarHeight&&intY>=this.intRootY+this.intHeight-intTitlebarHeight&&intY<=this.intRootX+this.intHeight+this.theSuper.intMousePrecision)return 5;
	if(intX>=this.intRootX-this.theSuper.intMousePrecision&&intX<=this.intRootX+this.theSuper.intMousePrecision&&intY>=this.intRootY+intTitlebarHeight&&intY<=this.intRootY+this.intHeight-intTitlebarHeight)return 6;
	return -1;
};
XWindow.prototype.maximize=function(){
	if(false==this.blnMaximized){
		this.lstPreviousWindowCoords=[this.intRootX,this.intRootY,this.intWidth,this.intHeight];
		this.intRootX=0;
		this.intRootY=0;
		this.intWidth=this.base.intScreenWidth_graphics;
		this.intHeight=this.base.intScreenHeight_graphics;
		this.updateDimensions();
		this.blnMaximized=true;
	}else{
		this.intRootX=this.lstPreviousWindowCoords[0];
		this.intRootY=this.lstPreviousWindowCoords[1];
		this.intWidth=this.lstPreviousWindowCoords[2];
		this.intHeight=this.lstPreviousWindowCoords[3];
		this.updateDimensions();
		this.blnMaximized=false;
	}
};
XWindow.prototype.close=function(){
	/*different than the standard behaviour*/
	this.theActualProgram.stopFinalizations("");
	var intWindow=this.theSuper.lstXWindows.indexOf(this);
	this.theSuper.lstXWindows.splice(intWindow,1);
};
XWindow.prototype.startModiff=function(intX,intY,intElement){
	if(intElement>=7){
		switch(intElement){
			case 7:alert("Taskbar will be implemented in the new system version");break;
			case 8:this.maximize();break;
			case 9:this.close();break;
		}
		this.theSuper.modiffObject=null;
		return;
	}
	this.theSuper.modiffObject.intElement=intElement;
	this.frameColor=this.XWindowFramePressedColor;
	this.theSuper.modiffObject.lstCatchPoint=[intX,intY];
	this.theSuper.bringToFront(this);
};
XWindow.prototype.updateDimensions=function(){
	var newInnerDims=null;
	this.XWindowCanvas.width=this.intWidth;
	this.XWindowCanvas.height=this.intHeight;
	this.intInnerX=this.intRootX+1;
	this.intInnerY=this.intRootY+10;
	this.intInnerWidth=this.intWidth-2;
	this.intInnerHeight=this.intHeight-this.theSuper.intTitlebarHeight-1;
	this.XWindowContentCanvas.width=this.intInnerWidth;
	this.XWindowContentCanvas.height=this.intInnerHeight;
	this.XWindowButtonsCoords=[[this.intWidth-25,5],[this.intWidth-15,5],[this.intWidth-5,5]];
	if(this.intRootX!=0||this.intRootY!=0||this.intWidth!=this.base.intScreenWidth_graphics||this.intHeight!=this.base.intScreenHeight_graphics)this.blnMaximized=false;
	if(null!=this.theActualProgram)
		newInnerDims=this.theActualProgram.resize();
};
XWindow.prototype.setNewDimensions=function(intRootX,intRootY,intWidth,intHeight,intBorderSize){
	this.intFontWidth=this.theSuper.intFontWidth;
	this.intFontHeight=this.theSuper.intFontHeight;
	if(undefined==intRootX||null==intRootX)
		this.intRootX=0;
	else this.intRootX=Math.round(intRootX);
	if(undefined==intRootY||null==intRootY)
		this.intRootY=0;
	else this.intRootY=Math.round(intRootY);
	if(undefined==intWidth||null==intWidth)
		this.intWidth=462;
	else this.intWidth=Math.round(intWidth);
	if(undefined==intHeight||null==intHeight)
		this.intHeight=361;
	else this.intHeight=Math.round(intHeight);

	this.intInnerX=this.intRootX+1;
	this.intInnerY=this.intRootY+10;
	this.intInnerWidth=this.intWidth-2;
	this.intInnerHeight=this.intHeight-this.theSuper.intTitlebarHeight-1;
	this.updateDimensions();
};
XWindow.prototype.drawOnCanvas=function(){
	this.XWindowImage=this.XWindowContext.getImageData(0,0,this.intWidth,this.intHeight);
	this.XWindowContentImage=this.XWindowContentContext.getImageData(0,0,this.intInnerWidth,this.intInnerHeight);
	//mhdmodiff--
	var index=0;
	var index0,index1;
	for(var i=0;i<this.intInnerWidth;i++)
		for(var j=0;j<this.intInnerHeight;j++){
			index0=this.getScreenIndex_graphics(i+1,j+10);
			index1=(j*this.intInnerWidth+i)*4;
			this.XWindowImage.data[index0+0]=this.XWindowContentImage.data[index1+0];
			this.XWindowImage.data[index0+1]=this.XWindowContentImage.data[index1+1];
			this.XWindowImage.data[index0+2]=this.XWindowContentImage.data[index1+2];
			this.XWindowImage.data[index0+3]=this.XWindowContentImage.data[index1+3];
		}
	this.XWindowContext.putImageData(this.XWindowImage,0,0);
	var strBackgroundStyle="rgba("+this.frameColor[0]+","+this.frameColor[1]+","+this.frameColor[2]+","+this.frameColor[3]+")";
	var strForegroundStyle="rgba("+this.XWindowFrameForegroundColor[0]+","+this.XWindowFrameForegroundColor[1]+","+this.XWindowFrameForegroundColor[2]+","+this.XWindowFrameForegroundColor[3]+")";
	this.XWindowContext.beginPath();
	this.XWindowContext.fillStyle=strBackgroundStyle;
	this.XWindowContext.moveTo(0,0);
	this.XWindowContext.lineTo(this.intWidth,0);
	this.XWindowContext.lineTo(this.intWidth,this.theSuper.intTitlebarHeight);
	this.XWindowContext.lineTo(0,this.theSuper.intTitlebarHeight);
	this.XWindowContext.lineTo(0,0);
	this.XWindowContext.fill();
	this.XWindowContext.beginPath();
	this.XWindowContext.strokeStyle=strBackgroundStyle;;
	this.XWindowContext.moveTo(0,this.theSuper.intTitlebarHeight);
	this.XWindowContext.lineTo(0,this.intHeight);
	this.XWindowContext.lineTo(this.intWidth,this.intHeight);
	this.XWindowContext.lineTo(this.intWidth,this.theSuper.intTitlebarHeight);
	this.XWindowContext.stroke();
	this.XWindowContext.fillStyle=strForegroundStyle;
	this.XWindowContext.fillText(this.strTitle,Math.round(this.intWidth/2.-(this.strTitle.length*5)/2.),this.theSuper.intTitlebarHeight);
	this.XWindowContext.beginPath();
	this.XWindowContext.strokeStyle=strForegroundStyle;
	var intBtnX,intBtnY;
	var intR=this.XWindowButtonsRadius;
	var lstReturn;
	for(var ii=0;ii<3;ii++){
		lstReturn=this.XWindowButtonsCoords[ii];
		intBtnX=lstReturn[0];
		intBtnY=lstReturn[1];
		this.XWindowContext.moveTo(intBtnX-intR,intBtnY-intR);
		this.XWindowContext.lineTo(intBtnX+intR,intBtnY-intR);
		this.XWindowContext.lineTo(intBtnX+intR,intBtnY+intR);
		this.XWindowContext.lineTo(intBtnX-intR,intBtnY+intR);
		this.XWindowContext.lineTo(intBtnX-intR,intBtnY-intR);
	}
	this.XWindowContext.stroke();
	lstReturn=this.XWindowButtonsCoords[0];
	intBtnX=lstReturn[0];
	intBtnY=lstReturn[1];
	this.XWindowContext.beginPath();
	this.XWindowContext.fillStyle=strForegroundStyle;
	this.XWindowContext.moveTo(intBtnX-intR+1,intBtnY-1);
	this.XWindowContext.lineTo(intBtnX+intR-1,intBtnY-1);
	this.XWindowContext.lineTo(intBtnX+intR-1,intBtnY+1);
	this.XWindowContext.lineTo(intBtnX-intR+1,intBtnY+1);
	this.XWindowContext.lineTo(intBtnX-intR+1,intBtnY-1);
	this.XWindowContext.fill();
	if(false==this.blnMaximized){
		lstReturn=this.XWindowButtonsCoords[1];
		intBtnX=lstReturn[0];
		intBtnY=lstReturn[1];
		this.XWindowContext.beginPath();
		this.XWindowContext.strokeStyle=strForegroundStyle;
		this.XWindowContext.moveTo(intBtnX-intR+2,intBtnY-intR+2);
		this.XWindowContext.lineTo(intBtnX-intR+2,intBtnY+intR-2);
		this.XWindowContext.lineTo(intBtnX+intR-2,intBtnY+intR-2);
		this.XWindowContext.lineTo(intBtnX+intR-2,intBtnY-intR+2);
		this.XWindowContext.lineTo(intBtnX-intR+2,intBtnY-intR+2);
		this.XWindowContext.stroke();
	}else{
		lstReturn=this.XWindowButtonsCoords[1];
		intBtnX=lstReturn[0];
		intBtnY=lstReturn[1];
		this.XWindowContext.beginPath();
		this.XWindowContext.strokeStyle=strForegroundStyle;
		this.XWindowContext.moveTo(intBtnX-intR+1,intBtnY-intR+1);
		this.XWindowContext.lineTo(intBtnX-intR+1,intBtnY+intR-1);
		this.XWindowContext.lineTo(intBtnX+intR-1,intBtnY+intR-1);
		this.XWindowContext.lineTo(intBtnX+intR-1,intBtnY-intR+1);
		this.XWindowContext.lineTo(intBtnX-intR+1,intBtnY-intR+1);
		this.XWindowContext.stroke();
	}
	lstReturn=this.XWindowButtonsCoords[2];
	intBtnX=lstReturn[0];
	intBtnY=lstReturn[1];
	this.XWindowContext.beginPath();
	this.XWindowContext.strokeStyle=strForegroundStyle;
	this.XWindowContext.moveTo(intBtnX-intR,intBtnY-intR);
	this.XWindowContext.lineTo(intBtnX+intR,intBtnY+intR);
	this.XWindowContext.moveTo(intBtnX+intR,intBtnY-intR);
	this.XWindowContext.lineTo(intBtnX-intR,intBtnY+intR);
	this.XWindowContext.stroke();
};
XWindow.prototype.modify=function(intX,intY){
	if(null==this.theSuper.modiffObject)return;
	var diffX,diffY;
	diffX=intX-this.theSuper.modiffObject.lstCatchPoint[0];
	diffY=intY-this.theSuper.modiffObject.lstCatchPoint[1];
	var intTitlebarHeight=this.theSuper.intTitlebarHeight;
	var intMousePrecision=this.theSuper.intMousePrecision;
	if(1==this.theSuper.modiffObject.intElement){
		var newX,newY;
		newX=this.intRootX+diffX;
		newY=this.intRootY+diffY;
		if(newX>=0&&newX+this.intWidth<=this.base.intScreenWidth_graphics&&newY>=0&&newY+this.intHeight<=this.base.intScreenHeight_graphics){
			this.intRootX=Math.round(newX);
			this.intRootY=Math.round(newY);
			this.theSuper.modiffObject.lstCatchPoint[0]+=diffX;
			this.theSuper.modiffObject.lstCatchPoint[1]+=diffY;
		}else{
			if(newX<0)this.intRootX=0;
			if(newY<0)this.intRootY=0;
			if(newX+this.intWidth>=this.base.intScreenWidth_graphics)this.intRootX=this.base.intScreenWidth_graphics-this.intWidth;
			if(newY+this.intHeight>=this.base.intScreenHeight_graphics)this.intRootY=this.base.intScreenHeight_graphics-this.intHeight;
		}
	}
	if(2==this.theSuper.modiffObject.intElement){
		var newWidth;
		newWidth=this.intWidth+diffX;	
		if(newWidth>=intTitlebarHeight&&this.intRootX+newWidth<=this.base.intScreenWidth_graphics){
			this.intWidth=Math.round(newWidth);
			this.theSuper.modiffObject.lstCatchPoint[0]+=diffX;
			this.theSuper.modiffObject.lstCatchPoint[1]+=diffY;
		}else{
			if(newWidth<intTitlebarHeight)this.intWidth=intTitlebarHeight;
			if(this.intRootX+newWidth>=this.base.intScreenWidth_graphics)this.intWidth=this.base.intScreenWidth_graphics-this.intRootX;
		}
		
	}
	if(3==this.theSuper.modiffObject.intElement){
		var newWidth,newHeight;
		newWidth=this.intWidth+diffX;	
		newHeight=this.intHeight+diffY;	
		if(newWidth>=intTitlebarHeight&&newHeight>=intTitlebarHeight+intMousePrecision&&this.intRootX+newWidth<=this.base.intScreenWidth_graphics&&this.intRootY+newHeight<=this.base.intScreenHeight_graphics){
			this.intWidth=Math.round(newWidth);
			this.intHeight=Math.round(newHeight);
			this.theSuper.modiffObject.lstCatchPoint[0]+=diffX;
			this.theSuper.modiffObject.lstCatchPoint[1]+=diffY;
		}else{
			if(newWidth<intTitlebarHeight)this.intWidth=intTitlebarHeight;
			if(newHeight<intTitlebarHeight+intMousePrecision)this.intHeight=intTitlebarHeight+intMousePrecision;
			if(this.intRootX+newWidth>=this.base.intScreenWidth_graphics)this.intWidth=this.base.intScreenWidth_graphics-this.intRootX;
			if(this.intRootY+newHeight>=this.base.intScreenHeight_graphics)this.intHeight=this.base.intScreenHeight_graphics-this.intRootY;
		}
		
	}
	if(4==this.theSuper.modiffObject.intElement){
		var newHeight;
		newHeight=this.intHeight+diffY;	
		if(newHeight>=intTitlebarHeight+intMousePrecision&&this.intRootY+newHeight<=this.base.intScreenHeight_graphics){
			this.intHeight=Math.round(newHeight);
			this.theSuper.modiffObject.lstCatchPoint[0]+=diffX;
			this.theSuper.modiffObject.lstCatchPoint[1]+=diffY;
		}else{
			if(newHeight<intTitlebarHeight+intMousePrecision)this.intHeight=intTitlebarHeight+intMousePrecision;
			if(this.intRootY+newHeight>=this.base.intScreenHeight_graphics)this.intHeight=this.base.intScreenHeight_graphics-this.intRootY;
		}
		
	}
	if(5==this.theSuper.modiffObject.intElement){
		var newX,newWidth,newHeight;
		newX=this.intRootX+Math.round(diffX);	
		newWidth=this.intWidth-Math.round(diffX);	
		newHeight=this.intHeight+Math.round(diffY);	
		if(newX>=0&&newHeight>=intTitlebarHeight+intMousePrecision&&newX+this.intWidth<=this.base.intScreenWidth_graphics&&this.intRootY+newHeight<=this.base.intScreenHeight_graphics){
			this.intRootX=Math.round(newX);
			this.intWidth=Math.round(newWidth);
			this.intHeight=Math.round(newHeight);
			this.theSuper.modiffObject.lstCatchPoint[0]+=diffX;
			this.theSuper.modiffObject.lstCatchPoint[1]+=diffY;
		}else{
			if(newX<0)this.intRootX=0;
			if(newHeight<intTitlebarHeight+intMousePrecision)this.intHeight=intTitlebarHeight+intMousePrecision;
			if(newX+this.intWidth>=this.base.intScreenWidth_graphics)this.intRootX=this.base.intScreenWidth_graphics-this.intWidth;
			if(this.intRootY+newHeight>=this.base.intScreenHeight_graphics)this.intHeight=this.base.intScreenHeight_graphics-this.intRootY;
		}
		
	}
	if(6==this.theSuper.modiffObject.intElement){
		var newX,newWidth;
		newX=this.intRootX+Math.round(diffX);	
		newWidth=this.intWidth-Math.round(diffX);	
		if(newX>=0&&newX+this.intWidth<=this.base.intScreenWidth_graphics&&newWidth>=intTitlebarHeight){
			this.intRootX=Math.round(newX);
			this.intWidth=Math.round(newWidth);
			this.theSuper.modiffObject.lstCatchPoint[0]+=diffX;
		}else{
			if(newX<0)this.intRootX=0;
			if(newWidth<intTitlebarHeight)this.intWidth=intTitlebarHeight;
			if(newX+this.intWidth>=this.base.intScreenWidth_graphics)this.intRootX=this.base.intScreenWidth_graphics-this.intWidth;
		}
		
	}
	this.updateDimensions();
};
XWindow.prototype.finalizeModiff=function(intX,intY,intElement){
	this.frameColor=this.XWindowFrameBackgroundColor;
};
XWindow.prototype.show=function(){
	this.drawOnCanvas();
	this.copyToTheScreen();
};
var Program_startxConstructor=function(that,computer,base){
	that.computer=computer;
	that.base=base;
	that.computer.clearScreen_graphics();
	that.intFontWidth=that.computer.intFontWidth;
	that.intFontHeight=that.computer.intFontHeight;
	that.fltMouseSpeed=0.5;
	that.prevMouseX=null;
	that.prevMouseY=null;
	that.fltMouseX=0;
	that.fltMouseY=0;
	that.blnMouseBlocked=false;
	that.prevStrArgs=null;
	that.strArgs="";
	that.XWindowFrameBackgroundColor=that.computer.lstVeryOrange;
	that.XWindowFramePressedColor=[30,30,30,255];
	that.XWindowFrameForegroundColor=netspace.lstColors[1];
	that.XWindowContentBackgroundColor=netspace.lstColors[1];
	that.intMouseWidth=10;
	that.intMouseHeight=20;
	that.lstMousePoints=[0,0,0,0,0,1,1,1,0,2,2,2,0,3,3,3,0,4,4,4,0,5,5,5,0,6,6,6,0,7,7,7,0,8,8,8,0,9,9,9,0,10,9,10,0,11,8,11,0,12,7,12,6,12,7,12,0,13,4,13,4,13,6,13,0,14,3,14,3,14,4,14,4,14,7,14,0,15,2,15,4,15,8,15,0,16,1,16,5,16,8,16,0,17,0,17,5,17,7,17,7,17,8,17,6,18,7,18,6,19,6,19];
	that.lstXWindows=[];
	that.modiffObject=null;
	that.intTitlebarHeight=10;
	that.intMousePrecision=3;
	that.wallpaperTileCanvas=null;
};
var Program_startxConstructor_strF=function(that,computer,base){
};
var Program_startx=function(computer,base){
	Program_startxConstructor(this,computer,base);
	Program_startxConstructor_strF(this,computer,base);
};
Program_startx.prototype.getXWindowUnderXY=function(intX,intY){
	var theXWindow;
	for(var ii=this.lstXWindows.length-1;ii>=0;ii--){
		theXWindow=this.lstXWindows[ii];
		if(intX>=theXWindow.intRootX&&intX<=theXWindow.intRootX+theXWindow.intWidth&&intY>=theXWindow.intRootY&&intY<=theXWindow.intRootY+theXWindow.intHeight)
			return theXWindow;
	}
	return null;
};
Program_startx.prototype.bringToFront=function(theXWindow){
	var newLstXWindows=[];
	var theXWindow2;
	for(var ii=0;ii<this.lstXWindows.length;ii++){
		theXWindow2=this.lstXWindows[ii];	
		if(theXWindow!=theXWindow2)newLstXWindows.push(theXWindow2);
	}
	newLstXWindows.push(theXWindow);
	this.lstXWindows=newLstXWindows;
};
Program_startx.prototype.inits=function(){
	this.computer.blnTextMode=false;
	this.intWallpaperTileWidth=32;
	this.intWallpaperTileHeigth=32;
	if(true==netspace.blnLoad3dWorldsOnStart){
		this.wallpaperTileCanvas=netspace.quickTextureForObject(netspace.intBlock,this.intWallpaperTileWidth,this.intWallpaperTileHeigth);
		this.wallpaperTileImage=this.wallpaperTileCanvas.getContext("2d").getImageData(0,0,this.intWallpaperTileWidth,this.intWallpaperTileHeigth);
	}else{
		this.wallpaperTileCanvas=document.createElement("canvas");
		var wallpaperTileContext=this.wallpaperTileCanvas.getContext("2d");
		this.wallpaperTileImage=wallpaperTileContext.getImageData(0,0,this.intWallpaperTileWidth,this.intWallpaperTileHeigth);
		for(var i=0;i<this.intWallpaperTileWidth;i++){
			for(var j=0;j<this.intWallpaperTileHeigth;j++){
					var index0=(j*this.intWallpaperTileWidth+i)*4;
					this.wallpaperTileImage.data[index0+0]=0;
					this.wallpaperTileImage.data[index0+1]=0;
					this.wallpaperTileImage.data[index0+2]=0;
					this.wallpaperTileImage.data[index0+3]=255;
				}
		}
		wallpaperTileContext.putImageData(this.wallpaperTileImage,0,0);
	}
};
Program_startx.prototype.newTerminal_xy=function(intX,intY,intWidth,intHeight){
		var theXWindow=new XWindow(this.computer,this.base,this,intX,intY,intWidth,intHeight,"Terminal");
		theXWindow.theActualProgram=new Program_Terminal(this.computer,this.base,theXWindow,this);
		theXWindow.updateDimensions();
		this.lstXWindows.push(theXWindow);
		
};
Program_startx.prototype.resizeWindowArrowUp=function(evtEvent){
	var intXWindowNumber=this.lstXWindows.length-1;
	var theXWindow=this.lstXWindows[intXWindowNumber];
	var intMinimalWindowSize=10;
	if(theXWindow.intHeight>intMinimalWindowSize){
		theXWindow.setNewDimensions(theXWindow.intRootX,theXWindow.intRootY,theXWindow.intWidth,theXWindow.intHeight-1,theXWindow.intBorderSize);
	}
};
Program_startx.prototype.resizeWindowArrowRight=function(evtEvent){
	var intXWindowNumber=this.lstXWindows.length-1;
	var theXWindow=this.lstXWindows[intXWindowNumber];
	if(theXWindow.intRootX+theXWindow.intWidth<this.base.intScreenWidth_graphics){
		theXWindow.setNewDimensions(theXWindow.intRootX,theXWindow.intRootY,theXWindow.intWidth+1,theXWindow.intHeight,theXWindow.intBorderSize);
	}
};
Program_startx.prototype.resizeWindowArrowDown=function(evtEvent){
	var intXWindowNumber=this.lstXWindows.length-1;
	var theXWindow=this.lstXWindows[intXWindowNumber];
	if(theXWindow.intRootY+theXWindow.intHeight<this.base.intScreenHeight_graphics){
		theXWindow.setNewDimensions(theXWindow.intRootX,theXWindow.intRootY,theXWindow.intWidth,theXWindow.intHeight+1,theXWindow.intBorderSize);
	}
};
Program_startx.prototype.resizeWindowArrowLeft=function(evtEvent){
	var intXWindowNumber=this.lstXWindows.length-1;
	var theXWindow=this.lstXWindows[intXWindowNumber];
	var intMinimalWindowSize=10;
	if(theXWindow.intWidth>intMinimalWindowSize){
		theXWindow.setNewDimensions(theXWindow.intRootX,theXWindow.intRootY,theXWindow.intWidth-1,theXWindow.intHeight,theXWindow.intBorderSize);
	}
};
Program_startx.prototype.moveWindowUpK=function(evtEvent){
	var intXWindowNumber=this.lstXWindows.length-1;
	var theXWindow=this.lstXWindows[intXWindowNumber];
	if(theXWindow.intRootY>0)
		theXWindow.setNewDimensions(theXWindow.intRootX,theXWindow.intRootY-1,theXWindow.intWidth,theXWindow.intHeight,theXWindow.intBorderSize);
};
Program_startx.prototype.moveWindowRightL=function(evtEvent){
	var intXWindowNumber=this.lstXWindows.length-1;
	var theXWindow=this.lstXWindows[intXWindowNumber];
	if(theXWindow.intRootX+theXWindow.intWidth<this.base.intScreenWidth_graphics)
		theXWindow.setNewDimensions(theXWindow.intRootX+1,theXWindow.intRootY,theXWindow.intWidth,theXWindow.intHeight,theXWindow.intBorderSize);
};
Program_startx.prototype.moveWindowDownJ=function(evtEvent){
	var intXWindowNumber=this.lstXWindows.length-1;
	var theXWindow=this.lstXWindows[intXWindowNumber];
	if(theXWindow.intRootY+theXWindow.intHeight<this.base.intScreenHeight_graphics)
		theXWindow.setNewDimensions(theXWindow.intRootX,theXWindow.intRootY+1,theXWindow.intWidth,theXWindow.intHeight,theXWindow.intBorderSize);
};
Program_startx.prototype.moveWindowLeftH=function(evtEvent){
	var intXWindowNumber=this.lstXWindows.length-1;
	var theXWindow=this.lstXWindows[intXWindowNumber];
	if(theXWindow.intRootX>0)
		theXWindow.setNewDimensions(theXWindow.intRootX-1,theXWindow.intRootY,theXWindow.intWidth,theXWindow.intHeight,theXWindow.intBorderSize);
};
Program_startx.prototype.newTerminal=function(){
		this.newTerminal_xy(this.fltMouseX,this.fltMouseY,300,150);
};
Program_startx.prototype.stopFinalizations=function(strString){
	this.computer.blnTextMode=true;
};
Program_startx.prototype.exitFinalizations=function(strString){
	this.computer.blnTextMode=true;
};
Program_startx.prototype.onKeyDown=function(evtEvent){
	switch(evtEvent.key){
	case "F12":
		this.newTerminal();
		break;
	case "ArrowUp":
		if(true==evtEvent.altKey&&false==evtEvent.shiftKey){
			this.resizeWindowArrowUp(evtEvent);
			return;
		}
		break;
	case "ArrowRight":
		if(true==evtEvent.altKey&&false==evtEvent.shiftKey){
			this.resizeWindowArrowRight(evtEvent);
			return;
		}
		break;
	case "ArrowDown":
		if(true==evtEvent.altKey&&false==evtEvent.shiftKey){
			this.resizeWindowArrowDown(evtEvent);
			return;
		}
		break;
	case "ArrowLeft":
		if(true==evtEvent.altKey&&false==evtEvent.shiftKey){
			this.resizeWindowArrowLeft(evtEvent);
			return;
		}
		break;
	case "k":
		if(true==evtEvent.altKey&&false==evtEvent.shiftKey){
			this.moveWindowUpK(evtEvent);
			return;
		}
		break;
	case "l":
		if(true==evtEvent.altKey&&false==evtEvent.shiftKey){
			this.moveWindowRightL(evtEvent);
			return;
		}
		break;
	case "j":
		if(true==evtEvent.altKey&&false==evtEvent.shiftKey){
			this.moveWindowDownJ(evtEvent);
			return;
		}
		break;
	case "h":
		if(true==evtEvent.altKey&&false==evtEvent.shiftKey){
			this.moveWindowLeftH(evtEvent);
			return;
		}
		break;
	case "Alt":
		if(1==evtEvent.location){
			if(false==this.blnMouseBlocked){
				this.blnMouseBlocked=true;this.prevMouseX=null;this.prevMouseY=null;
			}else this.blnMouseBlocked=false;
		return;
		}break;
		case "z":
			if(true==evtEvent.altKey)this.base.stopProgram(this,"Stop. Entering text mode");break;
	}
	if(this.lstXWindows.length>0){
		var theActualProgram=this.lstXWindows[this.lstXWindows.length-1].theActualProgram;
		if(null!=theActualProgram)
			theActualProgram.onKeyDown(evtEvent);
			
	}else{
		switch(evtEvent.key){
			case "F4":/*Alt+F4 would close the browser*/this.base.exitProgram(this,"Exit. Entering text mode");break;
			case "c":
				if(true==evtEvent.ctrlKey)this.base.exitProgram(this,"Exit. Entering text mode");break;
			case "z":
				if(true==evtEvent.ctrlKey)this.base.stopProgram(this,"Stop. Entering text mode");break;
		}
	}
};
Program_startx.prototype.onKeyUp=function(evtEvent){
	if(this.lstXWindows.length>0){
		var theActualProgram=this.lstXWindows[this.lstXWindows.length-1].theActualProgram.theActualProgram;
		if(null!=theActualProgram)
			theActualProgram.onKeyUp(evtEvent);
	}
};
Program_startx.prototype.onMouseDown=function(evtEvent){
	var theXWindow=null;
	if(1==evtEvent.buttons){
		if(null==this.modiffObject){
			theXWindow=this.getXWindowUnderXY(this.fltMouseX,this.fltMouseY);	
			if(null!=theXWindow){
				this.modiffObject={};
				this.modiffObject.theXWindow=theXWindow;
				this.modiffObject.theXWindow.startModiff(this.fltMouseX,this.fltMouseY,this.modiffObject.theXWindow.getWindowElement(this.fltMouseX,this.fltMouseY));
			}
		}
	}
	if(2==evtEvent.buttons&&null==this.getXWindowUnderXY(this.fltMouseX,this.fltMouseY)){
		this.newTerminal();
	}
	if(this.lstXWindows.length>0){
		var theActualProgram=this.lstXWindows[this.lstXWindows.length-1].theActualProgram.theActualProgram;
		if(null!=theActualProgram)
			theActualProgram.onMouseDown(evtEvent);
	}
};
Program_startx.prototype.onMouseUp=function(evtEvent){
	if(null!=this.modiffObject){
		this.modiffObject.theXWindow.finalizeModiff();
		this.modiffObject=null;
	}
	if(this.lstXWindows.length>0){
		var theActualProgram=this.lstXWindows[this.lstXWindows.length-1].theActualProgram.theActualProgram;
		if(null!=theActualProgram)
			theActualProgram.onMouseUp(evtEvent);
	}
};
Program_startx.prototype.onMouseWheel=function(evtEvent){
	if(this.lstXWindows.length>0){
		var theActualProgram=this.lstXWindows[this.lstXWindows.length-1].theActualProgram.theActualProgram;
		if(null!=theActualProgram)
			theActualProgram.onMouseWheel(evtEvent);
	}
};
Program_startx.prototype.onMouseMove=function(evtEvent){
	if(true==this.blnMouseBlocked)return;
	if(true==netspace.chk3dMouseMode.checked){
		var diffX,diffY;
		//mhdmodiff--
		//if(null==this.prevMouseX||null==this.prevMouseY){
		if(true==netspace.nonNumber(this.prevMouseX)||true==netspace.nonNumber(this.prevMouseY)){
			this.prevMouseX=evtEvent.offsetX;
			this.prevMouseY=evtEvent.offsetY;
			return;
		}
		diffX=evtEvent.offsetX-this.prevMouseX;
		diffY=evtEvent.offsetY-this.prevMouseY;
		this.prevMouseX=evtEvent.offsetX;
		this.fltMouseX+=this.fltMouseSpeed*diffX;
		this.prevMouseY=evtEvent.offsetY;
		this.fltMouseY+=this.fltMouseSpeed*diffY;
	}else{
		//mhdmodiff--
		//if(null==this.prevMouseX||null==this.prevMouseY){
		if(true==netspace.nonNumber(this.prevMouseX)||true==netspace.nonNumber(this.prevMouseY)){
			this.prevMouseX=evtEvent.offsetX;
			this.prevMouseY=evtEvent.offsetY;
			return;
		}
		this.prevMouseX=evtEvent.offsetX;
		this.fltMouseX=evtEvent.offsetX;
		this.prevMouseY=evtEvent.offsetY;
		this.fltMouseY=evtEvent.offsetY;

	}
	if(this.fltMouseX<0)this.fltMouseX=0;
	if(this.fltMouseX>this.base.intScreenWidth_graphics-1)this.fltMouseX=this.base.intScreenWidth_graphics-1;
	if(this.fltMouseY<0)this.fltMouseY=0;
	if(this.fltMouseY>this.base.intScreenHeight_graphics-1)this.fltMouseY=this.base.intScreenHeight_graphics-1;
	if(null!=this.modiffObject)
		this.modiffObject.theXWindow.modify(this.fltMouseX,this.fltMouseY);
	if(this.lstXWindows.length>0){
		var theActualProgram=this.lstXWindows[this.lstXWindows.length-1].theActualProgram.theActualProgram;
		if(null!=theActualProgram)
			theActualProgram.onMouseMove(evtEvent);
	}
};
Program_startx.prototype.drawWallpaper=function(){
	var index0,index1;
	var I,J=0;
	if(null!=netspace.shaderThinkpad){
		for(var i=0;i<this.base.intScreenWidth_graphics;i++)
			for(var j=0;j<this.base.intScreenWidth_graphics;j++){
				I=i;J=j;
				index0=this.computer.getScreenIndex_graphics(i,j);
				index1=((netspace.shaderThinkpad.lstIntHeights[0]-j)*netspace.shaderThinkpad.lstIntWidths[0]+i)*4;
				if(index1>=netspace.shaderThinkpad.data.length){
					this.base.lstScreenBuffer_graphics[index0+0]=netspace.lstExternalEmptyColor[0];
					this.base.lstScreenBuffer_graphics[index0+1]=netspace.lstExternalEmptyColor[1];
					this.base.lstScreenBuffer_graphics[index0+2]=netspace.lstExternalEmptyColor[2];
					this.base.lstScreenBuffer_graphics[index0+3]=netspace.lstExternalEmptyColor[3];
				}else{
					this.base.lstScreenBuffer_graphics[index0+0]=netspace.shaderThinkpad.data[index1+0];
					this.base.lstScreenBuffer_graphics[index0+1]=netspace.shaderThinkpad.data[index1+1];
					this.base.lstScreenBuffer_graphics[index0+2]=netspace.shaderThinkpad.data[index1+2];
					this.base.lstScreenBuffer_graphics[index0+3]=netspace.shaderThinkpad.data[index1+3];
				}
			}
	}else{
		for(var i=0;i<this.base.intScreenWidth_graphics;i++)
			for(var j=0;j<this.base.intScreenWidth_graphics;j++){
				I=i%32;J=j%32;
				index0=this.computer.getScreenIndex_graphics(i,j);
				if(null==this.wallpaperTileImage){
					this.base.lstScreenBuffer_graphics[index0+0]=255;
					this.base.lstScreenBuffer_graphics[index0+1]=100;
					this.base.lstScreenBuffer_graphics[index0+2]=0;
					this.base.lstScreenBuffer_graphics[index0+3]=255;
				}else{
					index1=(J*(this.intWallpaperTileWidth)+I)*4;
					this.base.lstScreenBuffer_graphics[index0+0]=this.wallpaperTileImage.data[index1+0];
					this.base.lstScreenBuffer_graphics[index0+1]=this.wallpaperTileImage.data[index1+1];
					this.base.lstScreenBuffer_graphics[index0+2]=this.wallpaperTileImage.data[index1+2];
					this.base.lstScreenBuffer_graphics[index0+3]=this.wallpaperTileImage.data[index1+3];
				}
			}
		}
};
Program_startx.prototype.drawMouse=function(){
	//mhdmodiff--
	//var intBackgroundR,intBackgroundG,intBackgroundB,intBackgroundAlpha;
	//var intForegroundR,intForegroundG,intForegroundB,intForegroundAlpha;
	var intBackgroundR,intBackgroundG,intBackgroundB,intBackgroundA;
	var intForegroundR,intForegroundG,intForegroundB,intForegroundA;
	intBackgroundR=this.XWindowContentBackgroundColor[0];
	intBackgroundG=this.XWindowContentBackgroundColor[1];
	intBackgroundB=this.XWindowContentBackgroundColor[2];
	intBackgroundA=this.XWindowContentBackgroundColor[3];
	intForegroundR=this.XWindowFrameBackgroundColor[0];
	intForegroundG=this.XWindowFrameBackgroundColor[1];
	intForegroundB=this.XWindowFrameBackgroundColor[2];
	intForegroundA=this.XWindowFrameBackgroundColor[3];
	var I0,J0,I1,J1,II;
	var index,index0,index1;
	var indexScreen,indexScreen0,indexScreen1;
	//mhdmodiff--
	var i0,j0,i1,j1;
	for(var jj=0;jj<this.lstMousePoints.length-3;jj+=4){
		i0=this.lstMousePoints[jj+0];
		j0=this.lstMousePoints[jj+1];
		i1=this.lstMousePoints[jj+2];
		j1=this.lstMousePoints[jj+3];
		I0=Math.round(this.fltMouseX)+i0;J0=Math.round(this.fltMouseY)+j0;
		I1=Math.round(this.fltMouseX)+i1;J1=Math.round(this.fltMouseY)+j1;
		index0=(j0*this.intMouseWidth+i0)*4;
		index1=(j1*this.intMouseWidth+i1)*4;
		indexScreen0=this.base.getScreenIndex_graphics(I0,J0);
		indexScreen1=this.base.getScreenIndex_graphics(I1,J1);
		this.base.lstScreenBuffer_graphics[indexScreen0+0]=intForegroundR;
		this.base.lstScreenBuffer_graphics[indexScreen0+1]=intForegroundG;
		this.base.lstScreenBuffer_graphics[indexScreen0+2]=intForegroundB;
		this.base.lstScreenBuffer_graphics[indexScreen0+3]=intForegroundA;
		for(var ii=i0+1;ii<i1;ii++){
			index=(j0*this.intMouseWidth+ii)*4;
			II=Math.round(this.fltMouseX)+ii;
			indexScreen=this.base.getScreenIndex_graphics(II,J0);
			this.base.lstScreenBuffer_graphics[indexScreen+0]=intBackgroundR;
			this.base.lstScreenBuffer_graphics[indexScreen+1]=intBackgroundG;
			this.base.lstScreenBuffer_graphics[indexScreen+2]=intBackgroundB;
			this.base.lstScreenBuffer_graphics[indexScreen+3]=intBackgroundA;
		}
		this.base.lstScreenBuffer_graphics[indexScreen1+0]=intForegroundR;
		this.base.lstScreenBuffer_graphics[indexScreen1+1]=intForegroundG;
		this.base.lstScreenBuffer_graphics[indexScreen1+2]=intForegroundB;
		this.base.lstScreenBuffer_graphics[indexScreen1+3]=intForegroundA;
	}
};
Program_startx.prototype.loopFunction=function(currentFrameTime){
	var theXWindow=null;
	for(var ii=0;ii<this.lstXWindows.length;ii++){
		theXWindow=this.lstXWindows[ii];
		if(null!=theXWindow.theActualProgram)
			theXWindow.theActualProgram.loopFunction(currentFrameTime);
	}
	this.computer.clearScreen_graphics();
	this.drawWallpaper();
	for(var ii=0;ii<this.lstXWindows.length;ii++)
		this.lstXWindows[ii].show();
	this.drawMouse();
};
var Program_txtFunFunFunConstructor=function(that,computer,base){
	that.computer=computer;
	that.base=base;
	that.computer.clearScreen_text();
	that.prevStrArgs=null;
	that.strArgs="";
};
var Program_txtFunFunFunConstructor_strF=function(that,computer,base){
};
var Program_txtFunFunFun=function(computer,base){
	Program_txtFunFunFunConstructor(this,computer,base);
	Program_txtFunFunFunConstructor_strF(this,computer,base);
};
Program_txtFunFunFun.prototype.inits=function(){
	this.base.blnTextMode=true;
};
Program_txtFunFunFun.prototype.updateDimensions=function(){
	this.base.clearScreen_text();
	var strFunFunFun=document.getElementById("txtFunFunFun").value;
	for(var ii=0;ii<this.base.lstScreenBuffer_text.length;ii++)
		this.base.lstScreenBuffer_text[ii]=strFunFunFun[ii];
};
Program_txtFunFunFun.prototype.stopFinalizations=function(strString){
};
Program_txtFunFunFun.prototype.exitFinalizations=function(strString){
};
Program_txtFunFunFun.prototype.onKeyDown=function(evtEvent){
	switch(evtEvent.key){
		case "F4":/*Alt+F4 would close the browser*/this.base.exitProgram(this,"");break;
		case "c":
			if(true==evtEvent.ctrlKey)this.base.exitProgram(this,"");break;
		case "z":
			if(true==evtEvent.ctrlKey)this.base.stopProgram(this,"");break;
	}
};
Program_txtFunFunFun.prototype.onKeyUp=function(evtEvent){
};
Program_txtFunFunFun.prototype.onMouseDown=function(evtEvent){
};
Program_txtFunFunFun.prototype.onMouseUp=function(evtEvent){
};
Program_txtFunFunFun.prototype.onMouseWheel=function(evtEvent){
};
Program_txtFunFunFun.prototype.onMouseMove=function(evtEvent){
};
Program_txtFunFunFun.prototype.loopFunction=function(currentFrameTime){
	this.base.clearScreen_text();
	var strFunFunFun=document.getElementById("txtFunFunFun").value;
	for(var ii=0;ii<this.base.lstScreenBuffer_text.length;ii++)
		this.base.lstScreenBuffer_text[ii]=strFunFunFun[ii];
};
var TextWindowConstructor_strF=function(that,computer,base,theSuper,intRootX,intRootY,intWidth,intHeight,strTitle,strTextContents,intBorderSize){
};
var TextWindowConstructor=function(that,computer,base,theSuper,intRootX,intRootY,intWidth,intHeight,strTitle,strTextContents,intBorderSize){
	that.computer=computer;
	that.base=base;
	that.theSuper=theSuper;
	if(undefined==intRootX||null==intRootX)
		that.intRootX=0;
	else that.intRootX=Math.round(intRootX);
	if(undefined==intRootY||null==intRootY)
		that.intRootY=0;
	else that.intRootY=Math.round(intRootY);
	if(undefined==intWidth||null==intWidth)
		that.intWidth=that.base.intScreenWidth_text;
	else that.intWidth=Math.round(intWidth);
	if(undefined==intHeight||null==intHeight)
		that.intHeight=that.base.intScreenHeight_text;
	else that.intHeight=Math.round(intHeight);
	if(undefined==strTitle||null==strTitle)
		that.strTitle="";
	else that.strTitle=strTitle;
	that.intBorderSize=intBorderSize;
	that.intInnerX=that.intRootX+that.intBorderSize;
	that.intInnerY=that.intRootY+that.intBorderSize;
	that.intInnerWidth=that.intWidth-2*that.intBorderSize;
	that.intInnerHeight=that.intHeight-2*that.intBorderSize;
	that.chrEnter=String.fromCharCode(10);
	that.chrEnter10=String.fromCharCode(10);
	that.chrEnter13=String.fromCharCode(13);
	that.blnNoEol=false;
	that.blnWrap=true;
	that.blnReplaceMode=false;
	that.lstCursor_buffer=[0,0];
	that.lstCursor_screen=[0,0];
	that.lstLineCharsShifts=[0,0];
	that.lstScrollMargin=[5,5];
	var lstReturn=that.computeLstScrollMargin();
	that.lstScrollMargin[0]=lstReturn[0];
	that.lstScrollMargin[1]=lstReturn[1];
	that.lstTextBuffer=[];
	that.lstTextWindowContents=[];
	that.lstHighlightBackgroundColor=[255,60,0,255];
	that.lstHighlightForegroundColor=[0,0,0,255];
	that.lstUndoHistory=[];
	that.lstRedoHistory=[];
	that.lstDotHistory=[];
	that.lstCursorUndoHistory=[];
	that.lstCursorRedoHistory=[];
	that.intUndoRedoLimit=1000;
	/*that.intUndoRedoLimit=-1;*/
	that.blnHltabs=false;
	that.blnHighlightSearch=true;
	that.blnCapsLockOn=false;
	that.blnProgrammaticShift_Lock=false;
	/*that.chrTabAlias=String.fromCharCode(9);*//*no alias*/
	that.chrTabAlias=String.fromCharCode(10148);
	/*String.fromCharCode(8633);
	String.fromCharCode(8680);
	String.fromCharCode(10142);
	String.fromCharCode(10148);
	String.fromCharCode(10233);
	String.fromCharCode(10145);
	*/
	that.strSearchString="";
	that.lstSearchHighlights=[];
	that.blnModiff=false;
	that.wndUp=null;
	that.wndRight=null;
	that.wndDown=null;
	that.wndLeft=null;
	that.lstSharedBufferWnd=[];
	that.objMarks={};
	that.dctKeywords={};
	that.lstSelectionHighlights_text=[];
	that.lstPairingBracketHighlight_buffer=[];
	that.lstSelectionHighlights_screen=[];
	that.lstPairingBracketHighlight_screen=[];
	that.blnMouseSelection=false;
	that.blnMousePageScroll=false;
	that.modiffObject=null;
	that.blnMouseable=true;
	that.blnBorderMouseable=true;
	that.intMaxKeywordHintsHeight=10;
	that.loadText(strTextContents);
	that.theFileInfo=null;
};
var TextWindow=function(computer,base,theSuper,intRootX,intRootY,intWidth,intHeight,strTitle,strTextContents,intBorderSize){
	TextWindowConstructor(this,computer,base,theSuper,intRootX,intRootY,intWidth,intHeight,strTitle,strTextContents,intBorderSize);
	TextWindowConstructor_strF(this,computer,base,theSuper,intRootX,intRootY,intWidth,intHeight,strTitle,strTextContents,intBorderSize);
};
TextWindow.prototype.selectionHighlightUp=function(){
	this.selectionHighlight(0);
};
TextWindow.prototype.selectionHighlightRight=function(){
	this.selectionHighlight(1);
};
TextWindow.prototype.selectionHighlightDown=function(){
	this.selectionHighlight(2);
};
TextWindow.prototype.selectionHighlightLeft=function(){
	this.selectionHighlight(3);
};
TextWindow.prototype.getCursorFromMouse_screen=function(){
	return [Math.round(this.theSuper.fltMouseX),Math.round(this.theSuper.fltMouseY)];
};
TextWindow.prototype.getCursorFromMouse_text=function(){
	var lstCursor_screen=this.getCursorFromMouse_screen();
	var lstCursor_text=this.copyList(lstCursor_screen);
	lstCursor_text[0]+=this.lstLineCharsShifts[0];	
	lstCursor_text[1]+=this.lstLineCharsShifts[1];	
	if(lstCursor_text[0]<0)lstCursor_text[0]=0;
	if(lstCursor_text[1]<0)lstCursor_text[1]=0;
	if(lstCursor_text[1]>=this.lstTextBuffer.length)lstCursor_text[1]=this.lstTextBuffer.length-1;
	var strLine=this.lstTextBuffer[lstCursor_text[1]];
	if(undefined!=strLine){
		var intLength=strLine.length;
		if(lstCursor_text[0]>=intLength)lstCursor_text[0]=intLength-1;
	}else lstCursor_text[0]=0;
	return lstCursor_text;
};
TextWindow.prototype.setCursorFromMouse_text=function(blnScroll){
	var lstCursor_text=this.getCursorFromMouse_text();
	var lstCursor_screen=[];
	var strLine;
	if(true==blnScroll){
		lstCursor_screen[0]=lstCursor_text[0]-this.lstLineCharsShifts[0];
		lstCursor_screen[1]=lstCursor_text[1]-this.lstLineCharsShifts[1];

		var diffX,diffY;
		var newLineCharsShift0,newLineCharsShift1;
		if(lstCursor_screen[0]<=0){
			diffX=lstCursor_screen[0]-0;
			newLineCharsShift0=this.lstLineCharsShifts[0]-diffX;
			if(newLineCharsShift0>=0)
				this.lstLineCharsShifts[0]=newLineCharsShift0;
		}
		if(lstCursor_screen[1]<=0){
			diffY=lstCursor_screen[1]-0;
			newLineCharsShift1=this.lstLineCharsShifts[1]-diffY;
			if(newLineCharsShift1>=0)
				this.lstLineCharsShifts[1]=newLineCharsShift1;
		}
		if(lstCursor_screen[1]>=this.intInnerHeight){
			diffY=lstCursor_screen[1]-this.intInnerHeight;
			newLineCharsShift1=this.lstLineCharsShifts[1]+diffY;
			if(newLineCharsShift1<this.lstTextBuffer.length)
				this.lstLineCharsShifts[1]=newLineCharsShift1;
		}
		if(lstCursor_screen[0]>=this.intInnerWidth){
			diffX=lstCursor_screen[0]-this.intInnerWidth;
			newLineCharsShift0=this.lstLineCharsShifts[0]+diffX;
			strLine=this.lstTextBuffer[lstCursor_text[1]];
			if(undefined!=strLine){
				if(newLineCharsShift0<strLine.length)
					this.lstLineCharsShifts[0]=newLineCharsShift0;
			}
		}
	}
	if(undefined==lstCursor_text)return;
	if(undefined==lstCursor_text[0]||undefined==lstCursor_text[1])return;
	if(NaN==lstCursor_text[0]||NaN==lstCursor_text[1])return;
	this.setLstCursor_buffer(lstCursor_text[0],lstCursor_text[1],true);
	this.updateWndEditing(true);
};
TextWindow.prototype.onMouseUp=function(evtEvent){
	if(true==this.blnMouseSelection)
		this.blnMouseSelection=false;
	if(true==this.blnMousePageScroll)
		this.blnMousePageScroll=false;
	if(null!=this.modiffObject){
		this.modiffObject=null;
	}
	this.theSuper.wndPendingMouseEvent=null;
};
TextWindow.prototype.scrollUp=function(){
	if(this.lstCursor_buffer[1]-this.theSuper.intScrollSize>0)this.setLstCursor_buffer1(this.lstCursor_buffer[1]-this.theSuper.intScrollSize);
	else this.setLstCursor_buffer1(0);
	this.updateWndEditing(true);
};
TextWindow.prototype.scrollDown=function(){
	var intLength=this.lstTextBuffer.length;
	if(this.lstCursor_buffer[1]+this.theSuper.intScrollSize<intLength-1)this.setLstCursor_buffer1(this.lstCursor_buffer[1]+this.theSuper.intScrollSize);
	else this.setLstCursor_buffer1_last();
	this.updateWndEditing(true);
};
TextWindow.prototype.onMouseWheel=function(evtEvent){
	if(evtEvent.deltaY<0)this.scrollUp();
	if(evtEvent.deltaY>0)this.scrollDown();
};
TextWindow.prototype.modify=function(intX,intY){
	var diffX,diffY;
	var intMousePrecision=0;
	var intMinimalWindowSize=2*this.intBorderSize;
	diffX=intX-this.modiffObject.lstCatchPoint[0];
	diffY=intY-this.modiffObject.lstCatchPoint[1];
	if(0==this.modiffObject.intBorder){
		var newX,newY;
		newX=this.intRootX+diffX;
		newY=this.intRootY+diffY;
		if(newX>=0&&newX+this.intWidth<=this.base.intScreenWidth_text&&newY>=0&&newY+this.intHeight<=this.base.intScreenHeight_text){
			this.intRootX=Math.round(newX);
			this.intRootY=Math.round(newY);
			this.modiffObject.lstCatchPoint[0]+=diffX;
			this.modiffObject.lstCatchPoint[1]+=diffY;
		}else{
			if(newX<0)this.intRootX=0;
			if(newY<0)this.intRootY=0;
			if(newX+this.intWidth>=this.base.intScreenWidth_text)this.intRootX=this.base.intScreenWidth_text-this.intWidth;
			if(newY+this.intHeight>=this.base.intScreenHeight_text)this.intRootY=this.base.intScreenHeight_text-this.intHeight;
			}
		this.updateDimensions();
	}
	if(1==this.modiffObject.intBorder){
		var newWidth;
		newWidth=this.intWidth+diffX;	
		if(newWidth>=intMinimalWindowSize&&this.intRootX+newWidth<=this.base.intScreenWidth_text){
			this.intWidth=Math.round(newWidth);
			this.modiffObject.lstCatchPoint[0]+=diffX;
			this.modiffObject.lstCatchPoint[1]+=diffY;
		}else{
			if(newWidth<intMinimalWindowSize)this.intWidth=intMinimalWindowSize;
			if(this.intRootX+newWidth>=this.base.intScreenWidth_text)this.intWidth=this.base.intScreenWidth_text-this.intRootX;
		}
		this.updateDimensions();
		this.updateWndEditing(true);
	}
	if(2==this.modiffObject.intBorder){
		var newWidth,newHeight;
		newWidth=this.intWidth+diffX;	
		newHeight=this.intHeight+diffY;	
		if(newWidth>=intMinimalWindowSize&&newHeight>=intMinimalWindowSize+intMousePrecision&&this.intRootX+newWidth<=this.base.intScreenWidth_text&&this.intRootY+newHeight<=this.base.intScreenHeight_text){
			this.intWidth=Math.round(newWidth);
			this.intHeight=Math.round(newHeight);
			this.modiffObject.lstCatchPoint[0]+=diffX;
			this.modiffObject.lstCatchPoint[1]+=diffY;
		}else{
			if(newWidth<intMinimalWindowSize)this.intWidth=intMinimalWindowSize;
			if(newHeight<intMinimalWindowSize+intMousePrecision)this.intHeight=intMinimalWindowSize+intMousePrecision;
			if(this.intRootX+newWidth>=this.base.intScreenWidth_text)this.intWidth=this.base.intScreenWidth_text-this.intRootX;
			if(this.intRootY+newHeight>=this.base.intScreenHeight_text)this.intHeight=this.base.intScreenHeight_text-this.intRootY;
		}

		this.updateDimensions();
		this.updateWndEditing(true);
	}
	if(3==this.modiffObject.intBorder){
		var newHeight;
		newHeight=this.intHeight+diffY;	
		if(newHeight>=intMinimalWindowSize+intMousePrecision&&this.intRootY+newHeight<=this.base.intScreenHeight_text){
			this.intHeight=Math.round(newHeight);
			this.modiffObject.lstCatchPoint[0]+=diffX;
			this.modiffObject.lstCatchPoint[1]+=diffY;
		}else{
			if(newHeight<intMinimalWindowSize+intMousePrecision)this.intHeight=intMinimalWindowSize+intMousePrecision;
			if(this.intRootY+newHeight>=this.base.intScreenHeight_text)this.intHeight=this.base.intScreenHeight_text-this.intRootY;
		}
		this.updateDimensions();
		this.updateWndEditing(true);
	}
	if(4==this.modiffObject.intBorder){
		var newX,newWidth,newHeight;
		newX=this.intRootX+Math.round(diffX);	
		newWidth=this.intWidth-Math.round(diffX);	
		newHeight=this.intHeight+Math.round(diffY);	
		if(newX>=0&&newHeight>=intMinimalWindowSize+intMousePrecision&&newX+this.intWidth<=this.base.intScreenWidth_text&&this.intRootY+newHeight<=this.base.intScreenHeight_text){
			this.intRootX=Math.round(newX);
			this.intWidth=Math.round(newWidth);
			this.intHeight=Math.round(newHeight);
			this.modiffObject.lstCatchPoint[0]+=diffX;
			this.modiffObject.lstCatchPoint[1]+=diffY;
		}else{
			if(newX<0)this.intRootX=0;
			if(newHeight<intMinimalWindowSize+intMousePrecision)this.intHeight=intMinimalWindowSize+intMousePrecision;
			if(newX+this.intWidth>=this.base.intScreenWidth_text)this.intRootX=this.base.intScreenWidth_text-this.intWidth;
			if(this.intRootY+newHeight>=this.base.intScreenHeight_text)this.intHeight=this.base.intScreenHeight_text-this.intRootY;
		}

		this.updateDimensions();
		this.updateWndEditing(true);
	}
	if(5==this.modiffObject.intBorder){
		var newX,newWidth;
		newX=this.intRootX+Math.round(diffX);	
		newWidth=this.intWidth-Math.round(diffX);	
		if(newX>=0&&newX+this.intWidth<=this.base.intScreenWidth_text&&newWidth>=intMinimalWindowSize){
			this.intRootX=Math.round(newX);
			this.intWidth=Math.round(newWidth);
			this.modiffObject.lstCatchPoint[0]+=diffX;
		}else{
			if(newX<0)this.intRootX=0;
			if(newWidth<intMinimalWindowSize)this.intWidth=intMinimalWindowSize;
			if(newX+this.intWidth>=this.base.intScreenWidth_text)this.intRootX=this.base.intScreenWidth_text-this.intWidth;
		}
		this.updateDimensions();
		this.updateWndEditing(true);
	}


};
TextWindow.prototype.onMouseMove=function(evtEvent){
	if(false==this.blnMouseable)return;
	if(true==this.blnMouseSelection&&null==this.modiffObject){
		this.setCursorFromMouse_text(true);
		this.updateHighlightSelection_text();
	}
	if(true==this.blnMousePageScroll&&null==this.modiffObject){
		this.setCursorFromMouse_text(true);
	}
	if(null!=this.modiffObject){
		this.modify(Math.round(this.theSuper.fltMouseX),Math.round(this.theSuper.fltMouseY));
	}
};
TextWindow.prototype.mouseOnBorder_=function(evtEvent){
	var intCornerPointSize=2*this.intBorderSize;
	var fltMouseX=Math.round(this.theSuper.fltMouseX);
	var fltMouseY=Math.round(this.theSuper.fltMouseY);
	if(fltMouseX>=this.intRootX+this.intWidth-this.intBorderSize&&fltMouseX<=this.intRootX+this.intWidth&&fltMouseY>=this.intRootY&&fltMouseY<=this.intRootY+this.intHeight-intCornerPointSize)return 1;
	if(fltMouseX>=this.intRootX+this.intWidth-this.intBorderSize&&fltMouseX<=this.intRootX+this.intWidth&&fltMouseY>=this.intRootY+this.intHeight-intCornerPointSize&&fltMouseY<=this.intRootY+this.intHeight)return 2;
	if(fltMouseX>=this.intRootX+intCornerPointSize&&fltMouseX<=this.intRootX+this.intWidth-intCornerPointSize&&fltMouseY>=this.intRootY+this.intHeight-this.intBorderSize&&fltMouseY<=this.intRootY+this.intHeight)return 3;
	if(fltMouseX>=this.intRootX&&fltMouseX<=this.intRootX+intCornerPointSize&&fltMouseY>=this.intRootY+this.intHeight-this.intBorderSize&&fltMouseY<=this.intRootY+this.intHeight)return 4;
	if(fltMouseX>=this.intRootX&&fltMouseX<=this.intRootX+this.intBorderSize&&fltMouseY>=this.intRootY&&fltMouseY<=this.intRootY+this.intHeight)return 5;
	if(fltMouseX>=this.intRootX&&fltMouseX<=this.intRootX+this.intWidth&&fltMouseY>=this.intRootY&&fltMouseY<=this.intRootY+this.intBorderSize)return 0;

	return -1;
};
TextWindow.prototype.mouseOnBorder=function(evtEvent){
	var intBorderMouseing=this.mouseOnBorder_(evtEvent);
	if(-1==intBorderMouseing)return null;
	var modiffObject={};
	modiffObject.intBorder=intBorderMouseing;
	modiffObject.lstCatchPoint=[Math.round(this.theSuper.fltMouseX),Math.round(this.theSuper.fltMouseY)];
	return modiffObject;
};
TextWindow.prototype.onMouseDown=function(evtEvent){
	if(false==this.blnMouseable)return;
	this.theSuper.wndPendingMouseEvent=this;
	this.theSuper.closeAllSubmenuWindows();
	this.clearHighlightSelection();
	this.theSuper.bringToFront(this);
	this.setFocus();
	if(null==this.modiffObject)
		this.blnMousePageScroll=true;
	if(this.intBorderSize>0&&true==this.blnBorderMouseable){
		this.modiffObject=this.mouseOnBorder(evtEvent);
	}
};
TextWindow.prototype.onMouseDownDoubleClick=function(evtEvent){
	if(false==this.blnMouseable)return;
	this.theSuper.wndPendingMouseEvent=this;
	if(null==this.modiffObject){
		this.blnMouseSelection=true;
		this.setCursorFromMouse_text(false);
		var lstCursor=this.getCursorFromMouse_text();
		this.startHighlightSelectingMode(lstCursor);
	}
};
TextWindow.prototype.setFocus=function(){
	this.theSuper.intFocusWindow=this.theSuper.lstTextWindows.indexOf(this);
	this.theSuper.wndEditing=this;
	this.updateWndEditing(true);
};
TextWindow.prototype.removeItselfFromSharedPointersAndBuffers=function(){
	var wndOther,intThis;
	for(var ii=0;ii<this.theSuper.lstTextWindows.length;ii++){
		wndOther=this.theSuper.lstTextWindows[ii];
		if(wndOther!=this){
			if(this==wndOther.wndUp)wndOther.wndUp=null;
			if(this==wndOther.wndRight)wndOther.wndRight=null;
			if(this==wndOther.wndDown)wndOther.wndDown=null;
			if(this==wndOther.wndLeft)wndOther.wndLeft=null;
			intThis=wndOther.lstSharedBufferWnd.indexOf(this);
			if(-1!=intThis)wndOther.lstSharedBufferWnd.splice(intThis,1);
		}
	}
};
TextWindow.prototype.resize=function(strCommand){
	var intRootX,intRootY,intWidth,intHeight,intBorderSize;
	var lstReturn=this.theSuper.parseDimensions(strCommand);
	intRootX=lstReturn[0];
	intRootY=lstReturn[1];
	intWidth=lstReturn[2];
	intHeight=lstReturn[3];
	intBorderSize=lstReturn[4];
	this.setNewDimensions(intRootX,intRootY,intWidth,intHeight,intBorderSize);
};
TextWindow.prototype.close=function(){
	var intEditing=this.theSuper.lstEditingWindows.indexOf(this);
	var intThis;
	if(-1!=intEditing){
		if(1==this.theSuper.lstEditingWindows.length){
			if(true==this.theSuper.blnSimpleMode)this.theSuper.reallyExitMessageBox();
			else this.theSuper.reallyExit();
			return;
		}else{
			this.removeItselfFromSharedPointersAndBuffers();
			this.theSuper.lstEditingWindows.splice(intEditing,1);		
			intThis=this.theSuper.lstTextWindows.indexOf(this);	
			this.theSuper.lstTextWindows.splice(intThis,1);
			this.theSuper.lstEditingWindows[this.theSuper.lstEditingWindows.length-1].setFocus();
		}
	}else{
		intThis=this.theSuper.lstTextWindows.indexOf(this);	
		this.theSuper.lstTextWindows.splice(intThis,1);
	}
};
TextWindow.prototype.selectionHighlight=function(intDirection){
	var lstCursor=this.copyList(this.lstCursor_buffer);
	var intLineLength=this.lstTextBuffer[this.lstCursor_buffer[1]].length;
	if(lstCursor[0]==intLineLength)lstCursor[0]=intLineLength-1;
	if(0==this.lstSelectionHighlights_text.length){
		this.startHighlightSelectingMode(lstCursor);
	}else{
		if(Math.abs(this.lstSelectionHighlights_text[1][0]-lstCursor[0])<=1&&Math.abs(this.lstSelectionHighlights_text[1][1]-lstCursor[1])<=1){
			this.updateHighlightSelection_text();
		}else{
			this.startHighlightSelectingMode(lstCursor);
		}
	}
	switch(intDirection){
		case 0: this.cursorUp();break;
		case 1: this.cursorRight();break;
		case 2: this.cursorDown();break;
		case 3: this.cursorLeft();break;
	}
};
TextWindow.prototype.updateHighlightSelection=function(){
	this.lstSelectionHighlights_screen=[];
	if(0==this.lstSelectionHighlights_text.length){
		return;
	}
	if(true==this.blnWrap)this.updateSelectionHighlights_wrap();
	else this.updateSelectionHighlights_nowrap();
};
TextWindow.prototype.updatePairingBracketHighlight=function(){
	this.lstPairingBracketHighlight_screen=[];
	if(0==this.lstPairingBracketHighlight_buffer.length){
		return;
	}
	if(true==this.blnWrap)this.updatePairingBracketHighlight_wrap();
	else this.updatePairingBracketHighlight_nowrap();
};
TextWindow.prototype.updatePairingBracketHighlight_buffer=function(){
	var strLine=this.lstTextBuffer[this.lstCursor_buffer[1]];
	if(undefined==strLine)return;
	var strBracket=strLine[this.lstCursor_buffer[0]];
	var newLstCursor_buffer=this.findPairingBracket(strBracket,this.lstCursor_buffer,true);
	var prevLstPairingBracketHighlight_buffer=this.copyList(this.lstPairingBracketHighlight_buffer);
	if(-1==newLstCursor_buffer)this.lstPairingBracketHighlight_buffer=[];
	else this.lstPairingBracketHighlight_buffer=[this.copyList(newLstCursor_buffer),[newLstCursor_buffer[0],newLstCursor_buffer[1]]];
	this.updatePairingBracketHighlight();
};
TextWindow.prototype.updateHighlightSelection_text=function(){
	var lstCursorStart=this.lstSelectionHighlights_text[0];
	var lstCursorEnd=this.copyList(this.lstCursor_buffer);
	var intLineLength=this.lstTextBuffer[this.lstCursor_buffer[1]].length;
	if(lstCursorEnd[0]==intLineLength)lstCursorEnd[0]=intLineLength-1;
	this.lstSelectionHighlights_text=[lstCursorStart,lstCursorEnd];
	this.updateHighlightSelection();
};
TextWindow.prototype.removeSelectedText=function(){
	if(0==this.lstSelectionHighlights_text.length)return;
	var lstCursorStart,lstCursorEnd;
	var lstReturn=this.lstSelectionHighlights_text;
	lstCursorStart=lstReturn[0];
	lstCursorEnd=lstReturn[1];
	var strLine;
	var strLineAfter="";
	var intMinI,intMaxI;
	var lstCursorMin,lstCursorMax;
	if(lstCursorStart[1]==lstCursorEnd[1]){
		strLine=this.lstTextBuffer[lstCursorEnd[1]];
		intMinI=(lstCursorStart[0]<=lstCursorEnd[0])?lstCursorStart[0]:lstCursorEnd[0];
		intMaxI=(lstCursorStart[0]>=lstCursorEnd[0])?lstCursorStart[0]:lstCursorEnd[0];
		lstCursorMin=(intMinI==lstCursorStart[0])?this.copyList(lstCursorStart):this.copyList(lstCursorEnd);
		lstCursorMax=(intMaxI==lstCursorStart[0])?this.copyList(lstCursorStart):this.copyList(lstCursorEnd);
		var strRemovedSubline=strLine.substring(intMinI,intMaxI+1);
		var beforeKeywords=this.keywordsBeforeStage_sublineModiff(""+strLine);
		this.setLstTextBuffer(lstCursorEnd[1],strLine.substring(0,intMinI)+strLine.substring(intMaxI+1));
		var strLineAfter=this.lstTextBuffer[lstCursorEnd[1]];
		var intJ=lstCursorEnd[1];
		var intFrom=intMinI;
		var intTo=intMaxI;
		this.addUndoItem([lstCursorMax,lstCursorMin,[128.3,intJ,intFrom,intTo,strRemovedSubline]]);
		this.keywordsAfterStage_sublineModiff(""+strLineAfter,beforeKeywords);
		this.clearHighlightSelection();
		this.setLstCursor_buffer0(intMinI);
		this.updateWndEditing(true);
	}else{
		var lstIntLinesToRemove=[];
		var strLineMinJ="",strLineMaxJ="",lstInnerLines=[];
		var beforeKeywordsMinJ,beforeKeywordsMaxJ;
		var intMinJ,intMaxJ;
		strLineAfter="";
		intMinJ=(lstCursorStart[1]<=lstCursorEnd[1])?lstCursorStart[1]:lstCursorEnd[1];
		intMaxJ=(lstCursorStart[1]>=lstCursorEnd[1])?lstCursorStart[1]:lstCursorEnd[1];
		intMinI=(lstCursorStart[0]<=lstCursorEnd[0])?lstCursorStart[0]:lstCursorEnd[0];
		intMaxI=(lstCursorStart[0]>=lstCursorEnd[0])?lstCursorStart[0]:lstCursorEnd[0];
		lstCursorMin=(intMinJ==lstCursorStart[1])?this.copyList(lstCursorStart):this.copyList(lstCursorEnd);
		lstCursorMax=(intMaxJ==lstCursorStart[1])?this.copyList(lstCursorStart):this.copyList(lstCursorEnd);
		for (var intJ=intMinJ;intJ<=intMaxJ;intJ++){
			strLine=this.lstTextBuffer[intJ];
			if(intJ!=intMinJ&&intJ!=intMaxJ){
				lstInnerLines.push(""+strLine);
				lstIntLinesToRemove.push(intJ);
			}else{
				if(intJ==intMinJ){
					if(intMinJ==lstCursorStart[1]){
						strLine=this.lstTextBuffer[intJ];
						strLineMinJ=""+strLine;
						strLineAfter+=strLine.substring(0,lstCursorStart[0]);
					}
					else{
						strLine=this.lstTextBuffer[intJ];
						strLineMinJ=""+strLine;
						strLineAfter+=strLine.substring(0,lstCursorEnd[0]);
					}
				}else{
					if(intMaxJ==lstCursorStart[1]){
						strLine=this.lstTextBuffer[intJ];
						strLineMaxJ=""+strLine;
						strLineAfter+=strLine.substring(lstCursorStart[0]+1,strLine.length);
						lstIntLinesToRemove.push(intJ);
					}
					else{
						strLine=this.lstTextBuffer[intJ];
						strLineMaxJ=""+strLine;
						strLineAfter+=strLine.substring(lstCursorEnd[0]+1,strLine.length);
						this.removeLine_noUndo(intJ);
					}
				}
			}

		}
		this.RemoveLinesFromList(lstIntLinesToRemove,false);
		this.setLstTextBuffer(intMinJ,strLineAfter);
		this.addUndoItem([lstCursorMax,lstCursorMin,[128.4,intMinJ,intMaxJ,strLineMinJ,lstInnerLines,strLineMaxJ,strLineAfter]]);
		if(undefined!=strLineMinJ){
			beforeKeywordsMinJ=this.keywordsBeforeStage_sublineModiff(strLineMinJ);
			this.decKeywords(beforeKeywordsMinJ[0]);
		}
		if(undefined!=strLineMaxJ){
			beforeKeywordsMaxJ=this.keywordsBeforeStage_sublineModiff(strLineMaxJ);
			this.decKeywords(beforeKeywordsMaxJ[0]);
		}
		var lstWords=this.getWordsFromLine(strLineAfter);
		this.incKeywords(lstWords);
		this.keywordsAfterStage_linesRemoval(lstInnerLines);	
		this.clearHighlightSelection();
		this.setLstCursor_buffer(lstCursorMin[0],lstCursorMin[1]);
		this.updateWndEditing(true);
	}
};
TextWindow.prototype.copySelectedText=function(intClipboardNumber){
	this.theSuper.lstCPbuffer[intClipboardNumber]=[];
	var strLine;
	var lstCursorStart,lstCursorEnd;
	if(0==this.lstSelectionHighlights_text.length)return [];
	lstCursorStart=this.lstSelectionHighlights_text[0];
	lstCursorEnd=this.lstSelectionHighlights_text[1];
	var intMinJ,intMaxJ,intMinI,intMaxI;
	intMinJ=(lstCursorStart[1]<=lstCursorEnd[1])?lstCursorStart[1]:lstCursorEnd[1];
	intMaxJ=(lstCursorStart[1]>=lstCursorEnd[1])?lstCursorStart[1]:lstCursorEnd[1];
	intMinI=(lstCursorStart[0]<=lstCursorEnd[0])?lstCursorStart[0]:lstCursorEnd[0];
	intMaxI=(lstCursorStart[0]>=lstCursorEnd[0])?lstCursorStart[0]:lstCursorEnd[0];

	if(intMinJ!=intMaxJ){
		for (var intJ=intMinJ;intJ<=intMaxJ;intJ++){
			strLine=this.lstTextBuffer[intJ];
			if(intJ!=intMinJ&&intJ!=intMaxJ){
				this.theSuper.lstCPbuffer[intClipboardNumber].push([strLine.substring(0,strLine.length)]);
			}else{
				if(intJ==intMinJ){
					if(intMinJ==lstCursorStart[1])
						this.theSuper.lstCPbuffer[intClipboardNumber].push([strLine.substring(lstCursorStart[0],strLine.length)]);
					else this.theSuper.lstCPbuffer[intClipboardNumber].push([strLine.substring(lstCursorEnd[0],strLine.length)]);
				}else{
					if(intMaxJ==lstCursorStart[1])
						this.theSuper.lstCPbuffer[intClipboardNumber].push([strLine.substring(0,lstCursorStart[0]+1)]);
					else this.theSuper.lstCPbuffer[intClipboardNumber].push([strLine.substring(0,lstCursorEnd[0]+1)]);
				}
			}
		}
	}else{
		strLine=this.lstTextBuffer[intMinJ];
		this.theSuper.lstCPbuffer[intClipboardNumber].push(strLine.substring(intMinI,intMaxI+1));
	}
		if(0==intClipboardNumber)
			this.copy0bufferToTxtFunFunFun();
};
TextWindow.prototype.cutSelectedText=function(intClipboardNumber){
	this.copySelectedText(intClipboardNumber);
	this.insertEditingBackspace_();
};
TextWindow.prototype.getSelectionHighlights=function(intJ,strLine){
	return this.getSelectionHighlights_(intJ,strLine,this.lstSelectionHighlights_text);
};
TextWindow.prototype.getPairingBracketHighlight=function(intJ,strLine){
	return this.getSelectionHighlights_(intJ,strLine,this.lstPairingBracketHighlight_buffer);
};
TextWindow.prototype.getSelectionHighlights_=function(intJ,strLine,lstBufferHighlights){
	var intLength=strLine.length;
	var lstLineSelectionHighlights=[];
	var lstCursorStart,lstCursorEnd;
	if(0==lstBufferHighlights.length)return [];
	lstCursorStart=lstBufferHighlights[0];
	if(undefined==lstCursorStart)return [];
	lstCursorEnd=lstBufferHighlights[1];
	if(undefined==lstCursorEnd)return [];
	var intMinJ,intMaxJ;
	//modiff--
	var intMinI,intMaxI;
	intMinJ=(lstCursorStart[1]<=lstCursorEnd[1])?lstCursorStart[1]:lstCursorEnd[1];
	intMaxJ=(lstCursorStart[1]>=lstCursorEnd[1])?lstCursorStart[1]:lstCursorEnd[1];
	intMinI=(lstCursorStart[0]<=lstCursorEnd[0])?lstCursorStart[0]:lstCursorEnd[0];
	intMaxI=(lstCursorStart[0]>=lstCursorEnd[0])?lstCursorStart[0]:lstCursorEnd[0];

	if(intJ>=intMinJ&&intJ<=intMaxJ){
		if(intMinJ!=intMaxJ){
			if(intJ!=intMinJ&&intJ!=intMaxJ){
				lstLineSelectionHighlights=[[0,intLength-1]];
			}else{
				if(intJ==intMinJ){
					if(intMinJ==lstCursorStart[1])
						lstLineSelectionHighlights=[[lstCursorStart[0],intLength-1]];
					else lstLineSelectionHighlights=[[lstCursorEnd[0],intLength-1]];
				}else{
					if(intMaxJ==lstCursorStart[1])
						lstLineSelectionHighlights=[[0,lstCursorStart[0]]];
					else lstLineSelectionHighlights=[[0,lstCursorEnd[0]]];
				}
			}
		}else lstLineSelectionHighlights=[[intMinI,intMaxI]];
	}
	return lstLineSelectionHighlights;
};
TextWindow.prototype.updateSelectionHighlights_nowrap=function(){
	var lstLineSelectionHighlights=[];
	var lstSelectionHighlights_screen=[];
	var strLine,intStrLineJ;
	var intMinI,intMaxJ;
	var lstReturn;
	for(var j=0;j<this.intInnerHeight;j++){
		if(j+this.lstLineCharsShifts[1]>=this.lstTextBuffer.length)break;
		intStrLineJ=j+this.lstLineCharsShifts[1];
		strLine=this.lstTextBuffer[intStrLineJ];
		lstLineSelectionHighlights=this.getSelectionHighlights(intStrLineJ,strLine);
		if(lstLineSelectionHighlights.length>0){
			lstReturn=lstLineSelectionHighlights[0];
			intMinI=lstReturn[0];
			intMaxI=lstReturn[1];
			intMinI-=this.lstLineCharsShifts[0];
			intMaxI-=this.lstLineCharsShifts[0];
			if(intMinI<0)intMinI=0;	
			if(intMaxI>=0&&intMinI<this.intInnerWidth)
				lstSelectionHighlights_screen.push([intMinI,intMaxI,j]);
		}
	}
	this.lstSelectionHighlights_screen=lstSelectionHighlights_screen;
};
TextWindow.prototype.updatePairingBracketHighlight_nowrap=function(){
	var lstLineSelectionHighlights=[];
	var lstPairingBracketHighlight_screen=[];
	var strLine,intStrLineJ;
	var intMinI,intMaxJ;
	var lstReturn;
	for(var j=0;j<this.intInnerHeight;j++){
		if(j+this.lstLineCharsShifts[1]>=this.lstTextBuffer.length)break;
		intStrLineJ=j+this.lstLineCharsShifts[1];
		strLine=this.lstTextBuffer[intStrLineJ];
		lstLineSelectionHighlights=this.getPairingBracketHighlight(intStrLineJ,strLine);
		if(lstLineSelectionHighlights.length>0){
			lstReturn=lstLineSelectionHighlights[0];
			intMinI=lstReturn[0];
			intMaxI=lstReturn[1];
			intMinI-=this.lstLineCharsShifts[0];
			intMaxI-=this.lstLineCharsShifts[0];
			if(intMinI<0)intMinI=0;	
			if(intMaxI>=0&&intMinI<this.intInnerWidth)
				lstPairingBracketHighlight_screen.push([intMinI,intMaxI,j]);
		}
	}
	this.lstPairingBracketHighlight_screen=lstPairingBracketHighlight_screen;
};
TextWindow.prototype.updateSelectionHighlights_wrap=function(){
	var intIprev=0;
	var intIend=0;
	var lstLineSelectionHighlights=[];
	var lstSelectionHighlights_screen=[];
	var lstIntervals,lstInterval;

	var strLine;
	var intStrLineJ;
	var intI;
	var intContentsJ;
	var intWrappedShift;
	if(this.lstCursor_buffer[0]>=this.intInnerWidth*this.intInnerHeight){
		strLine=this.lstTextBuffer[this.lstCursor_buffer[1]];
		intStrLineJ=this.lstCursor_buffer[1];
		var intShift=this.lstCursor_buffer[0]-this.intInnerWidth*this.intInnerHeight+this.intInnerWidth*1;
		intWrappedShift=Math.floor(intShift/this.intInnerWidth)*this.intInnerWidth;

		intI=null;
		intContentsJ=this.lstCursor_buffer[1];
		for(var jj=0;jj<this.intInnerHeight;jj++){
			if(null==intI){
				strLine=this.lstTextBuffer[intContentsJ];
				intStrLineJ=intContentsJ;
				intI=intWrappedShift;
			}
			if(undefined==strLine){
				intContentsJ++;
				intScreenJ++;
				intI=null;
				continue;
			}
			if(0==strLine.length){
				intContentsJ++;
				intScreenJ++;
				intI=null;
				continue;
			}
			lstLineSelectionHighlights=this.getSelectionHighlights(intStrLineJ,strLine);
			strSubstring=strLine.substring(intI,intI+this.intInnerWidth);
			if(strSubstring.length>0){
				lstIntervals=this.matchingHighlightInterval(lstLineSelectionHighlights,intI,intI+this.intInnerWidth-1,jj);
				for(var ii=0;ii<lstIntervals.length;ii++){
					lstInterval=lstIntervals[ii];
					lstSelectionHighlights_screen.push(lstInterval);
				}
				intI+=strSubstring.length;
			}
			else{
				intContentsJ++;
				intI=null;
			}
		}

	}else{
		var intScreenJ=this.lstCursor_buffer[1]-this.lstLineCharsShifts[1]-1;	
		var intContentsJ=this.lstCursor_buffer[1]-1;
		var strSubstring;
		var intI=null;
		while(intScreenJ>=0){
			if(null==intI){
				strLine=this.lstTextBuffer[intContentsJ];
				intStrLineJ=intContentsJ;
				if(undefined!=strLine)
					intI=Math.ceil(strLine.length/this.intInnerWidth)*this.intInnerWidth;
			}
			if(undefined==strLine){
				intContentsJ--;
				intScreenJ--;
				intI=null;
				continue;
			}
			if(0==strLine.length){
				intContentsJ--;
				intScreenJ--;
				intI=null;
				continue;
			}
			lstLineSelectionHighlights=this.getSelectionHighlights(intStrLineJ,strLine);
			strSubstring=strLine.substring(intI-this.intInnerWidth,intI);
			if(strSubstring.length>0){
				lstIntervals=this.matchingHighlightInterval(lstLineSelectionHighlights,intI-this.intInnerWidth,intI-1,intScreenJ);
				for(var ii=0;ii<lstIntervals.length;ii++){
					lstInterval=lstIntervals[ii];
					lstSelectionHighlights_screen.push(lstInterval);
				}
				intI-=this.intInnerWidth;
				intScreenJ--;
			}
			else{
				intContentsJ--;
				intI=null;
			}
		}
		intI=null;
		intContentsJ=this.lstCursor_buffer[1];
		intScreenJ=this.lstCursor_buffer[1]-this.lstLineCharsShifts[1];
		while(intScreenJ<this.intInnerHeight){
			if(null==intI){
				strLine=this.lstTextBuffer[intContentsJ];
				intStrLineJ=intContentsJ;
				intI=0;
			}
			if(undefined==strLine){
				intContentsJ++;
				intScreenJ++;
				intI=null;
				continue;
			}
			if(0==strLine.length){
				intContentsJ++;
				intScreenJ++;
				intI=null;
				continue;
			}
			lstLineSelectionHighlights=this.getSelectionHighlights(intStrLineJ,strLine);
			strSubstring=strLine.substring(intI,intI+this.intInnerWidth);
			if(strSubstring.length>0){
				lstIntervals=this.matchingHighlightInterval(lstLineSelectionHighlights,intI,intI+this.intInnerWidth-1,intScreenJ);
				for(var ii=0;ii<lstIntervals.length;ii++){
					lstInterval=lstIntervals[ii];
					lstSelectionHighlights_screen.push(lstInterval);
				}
				intI+=this.intInnerWidth;
				intScreenJ++;
			}
			else{
				intContentsJ++;
				intI=null;
			}
		}

	}
	this.lstSelectionHighlights_screen=lstSelectionHighlights_screen;
};
TextWindow.prototype.updatePairingBracketHighlight_wrap=function(){
	var intIprev=0;
	var intIend=0;
	var lstLineSelectionHighlights=[];
	var lstPairingBracketHighlight_screen=[];
	var lstIntervals,lstInterval;

	var strLine;
	var intStrLineJ;
	var intI;
	var intContentsJ;
	var intWrappedShift;
	if(this.lstCursor_buffer[0]>=this.intInnerWidth*this.intInnerHeight){
		strLine=this.lstTextBuffer[this.lstCursor_buffer[1]];
		intStrLineJ=this.lstCursor_buffer[1];
		var intShift=this.lstCursor_buffer[0]-this.intInnerWidth*this.intInnerHeight+this.intInnerWidth*1;
		intWrappedShift=Math.floor(intShift/this.intInnerWidth)*this.intInnerWidth;

		intI=null;
		intContentsJ=this.lstCursor_buffer[1];
		for(var jj=0;jj<this.intInnerHeight;jj++){
			if(null==intI){
				strLine=this.lstTextBuffer[intContentsJ];
				intStrLineJ=intContentsJ;
				intI=intWrappedShift;
			}
			if(undefined==strLine){
				intContentsJ++;
				intScreenJ++;
				intI=null;
				continue;
			}
			if(0==strLine.length){
				intContentsJ++;
				intScreenJ++;
				intI=null;
				continue;
			}
			lstLineSelectionHighlights=this.getPairingBracketHighlight(intStrLineJ,strLine);
			strSubstring=strLine.substring(intI,intI+this.intInnerWidth);
			if(strSubstring.length>0){
				lstIntervals=this.matchingHighlightInterval(lstLineSelectionHighlights,intI,intI+this.intInnerWidth-1,jj);
				for(var ii=0;ii<lstIntervals.length;ii++){
					lstInterval=lstIntervals[ii];
					lstPairingBracketHighlight_screen.push(lstInterval);
				}
				intI+=strSubstring.length;
			}
			else{
				intContentsJ++;
				intI=null;
			}
		}

	}else{
		var intScreenJ=this.lstCursor_buffer[1]-this.lstLineCharsShifts[1]-1;	
		var intContentsJ=this.lstCursor_buffer[1]-1;
		var strSubstring;
		var intI=null;
		while(intScreenJ>=0){
			if(null==intI){
				strLine=this.lstTextBuffer[intContentsJ];
				intStrLineJ=intContentsJ;
				if(undefined!=strLine)
					intI=Math.ceil(strLine.length/this.intInnerWidth)*this.intInnerWidth;
			}
			if(undefined==strLine){
				intContentsJ--;
				intScreenJ--;
				intI=null;
				continue;
			}
			if(0==strLine.length){
				intContentsJ--;
				intScreenJ--;
				intI=null;
				continue;
			}
			lstLineSelectionHighlights=this.getPairingBracketHighlight(intStrLineJ,strLine);
			strSubstring=strLine.substring(intI-this.intInnerWidth,intI);
			if(strSubstring.length>0){
				lstIntervals=this.matchingHighlightInterval(lstLineSelectionHighlights,intI-this.intInnerWidth,intI-1,intScreenJ);
				for(var ii=0;ii<lstIntervals.length;ii++){
					lstInterval=lstIntervals[ii];
					lstPairingBracketHighlight_screen.push(lstInterval);
				}
				intI-=this.intInnerWidth;
				intScreenJ--;
			}
			else{
				intContentsJ--;
				intI=null;
			}
		}
		intI=null;
		intContentsJ=this.lstCursor_buffer[1];
		intScreenJ=this.lstCursor_buffer[1]-this.lstLineCharsShifts[1];
		while(intScreenJ<this.intInnerHeight){
			if(null==intI){
				strLine=this.lstTextBuffer[intContentsJ];
				intStrLineJ=intContentsJ;
				intI=0;
			}
			if(undefined==strLine){
				intContentsJ++;
				intScreenJ++;
				intI=null;
				continue;
			}
			if(0==strLine.length){
				intContentsJ++;
				intScreenJ++;
				intI=null;
				continue;
			}
			lstLineSelectionHighlights=this.getPairingBracketHighlight(intStrLineJ,strLine);
			strSubstring=strLine.substring(intI,intI+this.intInnerWidth);
			if(strSubstring.length>0){
				lstIntervals=this.matchingHighlightInterval(lstLineSelectionHighlights,intI,intI+this.intInnerWidth-1,intScreenJ);
				for(var ii=0;ii<lstIntervals.length;ii++){
					lstInterval=lstIntervals[ii];
					lstPairingBracketHighlight_screen.push(lstInterval);
				}
				intI+=this.intInnerWidth;
				intScreenJ++;
			}
			else{
				intContentsJ++;
				intI=null;
			}
		}

	}
	this.lstPairingBracketHighlight_screen=lstPairingBracketHighlight_screen;
};
TextWindow.prototype.startHighlightSelectingMode=function(lstCursor){
	var lstCursorEnd=this.copyList(this.lstCursor_buffer);
	var intLineLength=this.lstTextBuffer[this.lstCursor_buffer[1]].length;
	if(lstCursorEnd[0]==intLineLength)lstCursorEnd[0]=intLineLength-1;
	this.lstSelectionHighlights_text=[lstCursor,lstCursorEnd];
	this.updateHighlightSelection();
};
TextWindow.prototype.clearHighlightSelection=function(){
	this.lstSelectionHighlights_text=[];
	this.updateHighlightSelection();
};
TextWindow.prototype.drawTextWindow=function(){
	if(this.intBorderSize>0){
		for(var i=this.intRootX;i<this.intRootX+this.intWidth;i++){
			this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(i,this.intRootY)]="=";
			this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(i,this.intRootY+this.intHeight-1)]="-";
		}
		for(var j=this.intRootY+1;j<this.intRootY+this.intHeight-1;j++){
			this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(this.intRootX,j)]="|";
			this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(this.intRootX+this.intWidth-1,j)]="|";
		}
		this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(this.intRootX+0,this.intRootY+0)]="+";
		this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(this.intRootX+this.intWidth-1,this.intRootY+0)]="+";
		this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(this.intRootX+this.intWidth-1,this.intRootY+this.intHeight-1)]="+";
		this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(this.intRootX+0,this.intRootY+this.intHeight-1)]="+";
		if(this.strTitle.length>0){
			var x=Math.round((this.intWidth-1)/2.-this.strTitle.length/2.);
			for(var ii=0;ii<this.strTitle.length;ii++)
				this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(this.intRootX+x+ii,this.intRootY)]=this.strTitle[ii];
		}
	}
	var chrContent="",strBufferline="";
	for(var j=this.intInnerY;j<this.intInnerY+this.intInnerHeight;j++){
		strBufferline=this.lstTextWindowContents[j-this.intInnerY];
		if(undefined!=strBufferline)
			for(var i=this.intInnerX;i<this.intInnerX+this.intInnerWidth;i++){
				chrContent=strBufferline[i-this.intInnerX];
				if(undefined!=chrContent)
					this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(i,j)]=chrContent;
				else this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(i,j)]=" ";
		}else{
			for(var i=this.intInnerX;i<this.intInnerWidth;i++)
				this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(i,j)]=" ";
		}
	}
	this.highlights();
};
TextWindow.prototype.aliasLine=function(strLine){
		if(String.fromCharCode(9)==this.chrTabAlias)
			return strLine;
		else{
			var strAliasedLine="";
			for(var ii=0;ii<strLine.length;ii++){
				if(String.fromCharCode(9)!=strLine[ii])
					strAliasedLine+=strLine[ii];
				else strAliasedLine+=this.chrTabAlias;
			}
			return strAliasedLine;
		}
};
TextWindow.prototype.setLstTextBuffer=function(intJ,strLine){
	delete this.lstTextBuffer[intJ];
	this.lstTextBuffer[intJ]=this.copyString(strLine);
	this.blnModiff=true;
	var wndSharedBuffer=null;
	for(var ii=0;ii<this.lstSharedBufferWnd.length;ii++){
		wndSharedBuffer=this.lstSharedBufferWnd[ii];
		if(null!=wndSharedBuffer){
			delete wndSharedBuffer.lstTextBuffer[intJ];
			wndSharedBuffer.lstTextBuffer[intJ]=wndSharedBuffer.copyString(strLine);
			wndSharedBuffer.blnModiff=true;
		}
	}
};
TextWindow.prototype.setLstTextBuffer_ref=function(intJ,strLine){
	delete this.lstTextBuffer[intJ];
	this.lstTextBuffer[intJ]=strLine;
	this.blnModiff=true;
	var wndSharedBuffer=null;
	for(var ii=0;ii<this.lstSharedBufferWnd.length;ii++){
		wndSharedBuffer=this.lstSharedBufferWnd[ii];
		if(null!=wndSharedBuffer){
			delete wndSharedBuffer.lstTextBuffer[intJ];
			wndSharedBuffer.lstTextBuffer[intJ]=strLine;
			wndSharedBuffer.blnModiff=true;
		}
	}
};

TextWindow.prototype.setLstTextBuffer_fastCruncher=function(intJ,strLine){
	delete netspace.wndEditing.lstTextBuffer_fastCruncher[intJ];
	netspace.wndEditing.lstTextBuffer_fastCruncher[intJ]=netspace.wndEditing.copyString(strLine);
};
TextWindow.prototype.setLstTextBuffer_fastCruncher_ref=function(intJ,strLine){
	delete netspace.wndEditing.lstTextBuffer_fastCruncher[intJ];
	netspace.wndEditing.lstTextBuffer_fastCruncher[intJ]=strLine;
};
TextWindow.prototype.pushLstTextBuffer=function(strLine){
	this.lstTextBuffer.push(this.copyString(strLine));
	this.blnModiff=true;
	var wndSharedBuffer=null;
	for(var ii=0;ii<this.lstSharedBufferWnd.length;ii++){
		wndSharedBuffer=this.lstSharedBufferWnd[ii];
		if(null!=wndSharedBuffer){
			wndSharedBuffer.lstTextBuffer.push(wndSharedBuffer.copyString(strLine));
			wndSharedBuffer.blnModiff=true;
		}
	}
};

TextWindow.prototype.pushLstTextBuffer_fastCruncher=function(strLine){
	netspace.wndEditing.lstTextBuffer_fastCruncher.push(netspace.wndEditing.copyString(strLine));
};

TextWindow.prototype.computeLstScrollMargin=function(){
	var lstScrollMargin=[2,2];
	/*lstScrollMargin[0]=Math.floor(this.intInnerWidth*0.05);*/
	/*lstScrollMargin[1]=Math.floor(this.intInnerHeight*0.05);*/
	return lstScrollMargin;
};
TextWindow.prototype.updateDimensions=function(){
	this.intInnerX=this.intRootX+this.intBorderSize;
	this.intInnerY=this.intRootY+this.intBorderSize;
	this.intInnerWidth=this.intWidth-2*this.intBorderSize;
	this.intInnerHeight=this.intHeight-2*this.intBorderSize;
	var lstReturn=this.computeLstScrollMargin();
	this.lstScrollMargin[0]=lstReturn[0];
	this.lstScrollMargin[1]=lstReturn[1];
};
TextWindow.prototype.setNewDimensions=function(intRootX,intRootY,intWidth,intHeight,intBorderSize){
	if(undefined==intRootX||null==intRootX)
		this.intRootX=0;
	else this.intRootX=Math.round(intRootX);
	if(undefined==intRootY||null==intRootY)
		this.intRootY=0;
	else this.intRootY=Math.round(intRootY);
	if(undefined==intWidth||null==intWidth)
		this.intWidth=this.base.intScreenWidth_text;
	else this.intWidth=Math.round(intWidth);
	if(undefined==intHeight||null==intHeight)
		this.intHeight=this.base.intScreenHeight_text;
	else this.intHeight=Math.round(intHeight);
	this.intBorderSize=intBorderSize;
	this.intInnerX=this.intRootX+this.intBorderSize;
	this.intInnerY=this.intRootY+this.intBorderSize;
	this.intInnerWidth=this.intWidth-2*this.intBorderSize;
	this.intInnerHeight=this.intHeight-2*this.intBorderSize;
	var lstReturn=this.computeLstScrollMargin();
	this.lstScrollMargin[0]=lstReturn[0];
	this.lstScrollMargin[1]=lstReturn[1];
};
TextWindow.prototype.setIntRootXY=function(intRootX,intRootY){
	this.setNewDimensions(intRootX,intRootY,this.intWidth,this.intHeight,this.intBorderSize);
};
TextWindow.prototype.updateTextWindowContent_wrap=function(){
	var strLine;
	var intI;
	var intContentsJ;
	var intWrappedShift;
	if(this.lstCursor_buffer[0]>=this.intInnerWidth*this.intInnerHeight){
		this.lstLineCharsShifts[1]=this.lstCursor_buffer[1];
		strLine=this.lstTextBuffer[this.lstCursor_buffer[1]];
		var intShift=this.lstCursor_buffer[0]-this.intInnerWidth*this.intInnerHeight+this.intInnerWidth*1;
		intWrappedShift=Math.floor(intShift/this.intInnerWidth)*this.intInnerWidth;

		intI=null;
		intContentsJ=this.lstCursor_buffer[1];
		for(var jj=0;jj<this.intInnerHeight;jj++){
			if(null==intI){
				strLine=this.lstTextBuffer[intContentsJ];
				intI=intWrappedShift;
			}
			if(undefined==strLine){
				this.lstTextWindowContents[intScreenJ]="";
				intContentsJ++;
				intScreenJ++;
				intI=null;
				continue;
			}
			if(0==strLine.length){
				this.lstTextWindowContents[intScreenJ]="";
				intContentsJ++;
				intScreenJ++;
				intI=null;
				continue;
			}
			strSubstring=strLine.substring(intI,intI+this.intInnerWidth);
			if(strSubstring.length>0){
				this.lstTextWindowContents[jj]=this.aliasLine(strSubstring);
				intI+=strSubstring.length;
			}
			else{
				intContentsJ++;
				intI=null;
			}
		}

	}else{
		var intScreenJ=this.lstCursor_buffer[1]-this.lstLineCharsShifts[1]-1;	
		var intContentsJ=this.lstCursor_buffer[1]-1;
		var strSubstring;
		var intI=null;
		while(intScreenJ>=0){
			if(null==intI){
				strLine=this.lstTextBuffer[intContentsJ];
				if(undefined!=strLine)
					intI=Math.ceil(strLine.length/this.intInnerWidth)*this.intInnerWidth;
			}
			if(undefined==strLine){
				this.lstTextWindowContents[intScreenJ]="";
				intContentsJ--;
				intScreenJ--;
				intI=null;
				continue;
			}
			if(0==strLine.length){
				this.lstTextWindowContents[intScreenJ]="";
				intContentsJ--;
				intScreenJ--;
				intI=null;
				continue;
			}
			strSubstring=strLine.substring(intI-this.intInnerWidth,intI);
			if(strSubstring.length>0){
				this.lstTextWindowContents[intScreenJ]=this.aliasLine(strSubstring);
				intI-=this.intInnerWidth;
				intScreenJ--;
			}
			else{
				intContentsJ--;
				intI=null;
			}
		}
		intI=null;
		intContentsJ=this.lstCursor_buffer[1];
		intScreenJ=this.lstCursor_buffer[1]-this.lstLineCharsShifts[1];
		while(intScreenJ<this.intInnerHeight){
			if(null==intI){
				strLine=this.lstTextBuffer[intContentsJ];
				intI=0;
			}
			if(undefined==strLine){
				this.lstTextWindowContents[intScreenJ]="";
				intContentsJ++;
				intScreenJ++;
				intI=null;
				continue;
			}
			if(0==strLine.length){
				this.lstTextWindowContents[intScreenJ]="";
				intContentsJ++;
				intScreenJ++;
				intI=null;
				continue;
			}
			strSubstring=strLine.substring(intI,intI+this.intInnerWidth);
			if(strSubstring.length>0){
				this.lstTextWindowContents[intScreenJ]=this.aliasLine(strSubstring);
				intI+=this.intInnerWidth;
				intScreenJ++;
			}
			else{
				intContentsJ++;
				intI=null;
			}
		}

	}

};
TextWindow.prototype.updateTextWindowContent_nowrap=function(){
	var strLine;
	for(var j=0;j<this.intInnerHeight;j++){
		strLine=this.lstTextBuffer[j+this.lstLineCharsShifts[1]];
		if(undefined!=strLine)
			this.lstTextWindowContents[j]=this.aliasLine(strLine.substring(0+this.lstLineCharsShifts[0],0+this.lstLineCharsShifts[0]+this.intInnerWidth));
		else{
			this.lstTextWindowContents[j]="";
		}
	};
};
TextWindow.prototype.drawCursor=function(){
	var intR,intG,intB,intA;
	var lstReturn=this.computer.lstConsoleGray;
	intR=lstReturn[0];
	intG=lstReturn[1];
	intB=lstReturn[2];
	intA=lstReturn[3];
	this.base.lstBackgroundBuffer[this.base.getScreenIndex_text(this.intInnerX+this.lstCursor_screen[0],this.intInnerY+this.lstCursor_screen[1])]=[intR,intG,intB,intA];
	this.base.lstForegroundBuffer[this.base.getScreenIndex_text(this.intInnerX+this.lstCursor_screen[0],this.intInnerY+this.lstCursor_screen[1])]=[0,0,0,255];
};
TextWindow.prototype.computeLineCharsShifts_nowrap=function(){
	var strPrevline="";
	this.lstLineCharsShifts[0]=this.intInnerWidth*Math.floor(this.lstCursor_buffer[0]/(this.intInnerWidth));
	if(this.lstLineCharsShifts[1]>=this.lstTextBuffer.length){
		if(0==this.lstTextBuffer.length){

		}else{
			if(this.lstTextBuffer.length>this.innerHeight)
				this.lstLineCharsShifts[1]-=this.innerHeight;
			else this.lstLineCharsShifts[1]=0;
		}
	}
	this.updateTextWindowContent();
};
TextWindow.prototype.computeLineCharsShifts=function(){
	if(true==this.blnWrap)this.computeLineCharsShifts_nowrap();
	else this.computeLineCharsShifts_nowrap();
};
TextWindow.prototype.alignPage=function(){
	if(true==this.blnWrap)this.alignPage_nowrap();
	else this.alignPage_nowrap();
};
TextWindow.prototype.alignPage_nowrap=function(){
	var testCursor_screen=[0,0];
	var strLine;
	testCursor_screen[0]=this.lstCursor_buffer[0]-this.lstLineCharsShifts[0];
	testCursor_screen[1]=this.lstCursor_buffer[1]-this.lstLineCharsShifts[1];
	strLine=this.lstTextBuffer[this.lstCursor_buffer[1]];
	if(undefined!=strLine&&this.intInnerWidth>this.lstScrollMargin[0]&&testCursor_screen[0]>this.intInnerWidth-this.lstScrollMargin[0]&&this.lstLineCharsShifts[0]<strLine.length){
		this.lstLineCharsShifts[0]+=(testCursor_screen[0]-this.intInnerWidth+this.lstScrollMargin[0]);
	}
	if(undefined!=strLine&&testCursor_screen[0]<this.lstScrollMargin[0]&&this.lstLineCharsShifts[0]>0){
	this.lstLineCharsShifts[0]-=(this.lstScrollMargin[0]-testCursor_screen[0]);
	}

	if(this.intInnerHeight>this.lstScrollMargin[1]&&testCursor_screen[1]>this.intInnerHeight-this.lstScrollMargin[1]&&this.lstLineCharsShifts[1]<this.lstTextBuffer.length){
		this.lstLineCharsShifts[1]+=(testCursor_screen[1]-this.intInnerHeight+this.lstScrollMargin[1]);
	}
	if(testCursor_screen[1]<this.lstScrollMargin[1]&&this.lstLineCharsShifts[1]>0)
		this.lstLineCharsShifts[1]-=(this.lstScrollMargin[1]-testCursor_screen[1]);
	if(this.lstLineCharsShifts[0]<0)this.lstLineCharsShifts[0]=0;
	if(this.lstLineCharsShifts[1]<0)this.lstLineCharsShifts[1]=0;

	this.updateTextWindowContent();
};
TextWindow.prototype.computeScreenCursor_wrap=function(blnAlign){
	if(true==blnAlign)
		this.alignPage();
	if(this.lstCursor_buffer[0]<this.intInnerWidth*this.intInnerHeight){
		this.lstCursor_screen[0]=this.lstCursor_buffer[0]%this.intInnerWidth;
		this.lstCursor_screen[1]=this.lstCursor_buffer[1]-this.lstLineCharsShifts[1]+Math.floor(this.lstCursor_buffer[0]/this.intInnerWidth);
	}else{
		this.lstCursor_screen[0]=this.lstCursor_buffer[0]%this.intInnerWidth;
		this.lstCursor_screen[1]=this.intInnerHeight-1;
	}
};
TextWindow.prototype.computeScreenCursor_nowrap=function(blnAlign){
	if(true==blnAlign)
		this.alignPage();
	this.lstCursor_screen[0]=this.lstCursor_buffer[0]-this.lstLineCharsShifts[0];
	this.lstCursor_screen[1]=this.lstCursor_buffer[1]-this.lstLineCharsShifts[1];
};
TextWindow.prototype.computeScreenCursor=function(blnAlign){
	if(true==this.blnWrap)this.computeScreenCursor_wrap(blnAlign);
	else this.computeScreenCursor_nowrap(blnAlign);
	this.updateSearchHighlights();
	this.updateHighlightSelection();
	this.updatePairingBracketHighlight_buffer();
};
TextWindow.prototype.updateSearchHighlights_nowrap=function(){
	var lstSearchHighlights=[];
	var intLength=this.strSearchString.length;
	var intIprev=0;
	var intIstart=0,intIend=0;
	var intIndex=-2;
	for(var j=0;j<this.intInnerHeight;j++){
		if(j+this.lstLineCharsShifts[1]>=this.lstTextBuffer.length)break;
		intIprev=0;
		intIndex=-2;
		while(-1!=intIndex){
			intIndex=this.lstTextBuffer[j+this.lstLineCharsShifts[1]].substring(intIprev).indexOf(this.strSearchString);
			if(-1!=intIndex){
				if(intIprev-this.lstLineCharsShifts[0]<this.intInnerWidth){
					intIend=intIprev+intIndex+intLength-this.lstLineCharsShifts[0]-1;
					if(intIend>=this.intInnerWidth)intIend=this.intInnerWidth-1;
					intIstart=intIprev+intIndex-this.lstLineCharsShifts[0];
					if(intIstart<0)intIstart=0;	
					if(intIend>=0&&intIstart<this.intInnerWidth)
						lstSearchHighlights.push([intIstart,intIend,j]);
				}
				intIprev+=intIndex+1;
			}
		}
	}
	this.lstSearchHighlights=lstSearchHighlights;
};
TextWindow.prototype.findSearchHighlights=function(strLine){
	var lstSearchHighlights=[];
	var intIstart=0,intIend=0;
	var intLength=this.strSearchString.length;
	var intIprev=0;
	var intIndex=-2;
	while(-1!=intIndex){
		intIndex=strLine.substring(intIprev).indexOf(this.strSearchString);
		if(-1!=intIndex){
			intIend=intIprev+intIndex+intLength-1;
			intIstart=intIprev+intIndex;
			lstSearchHighlights.push([intIstart,intIend]);
			intIprev+=intIndex+1;
		}
	}
	return lstSearchHighlights;
};
TextWindow.prototype.matchingHighlightInterval=function(lstLineSearchHighlights,intA,intB,intJ){
	var lstIntervals=[];
	var intIstart,intIend;
	var lstReturn;
	for(var ii=0;ii<lstLineSearchHighlights.length;ii++){
		lstReturn=lstLineSearchHighlights[ii];
		intIstart=lstReturn[0];
		intIend=lstReturn[1];
		if(intIstart>=intA&&intIend<=intB){
			lstIntervals.push([intIstart%this.intInnerWidth,intIend%this.intInnerWidth,intJ]);
		}
		if(intIstart>=intA&&intIend>intB){
			if(intIstart<=intB){
				lstIntervals.push([intIstart%this.intInnerWidth,intB%this.intInnerWidth,intJ]);
			}
		}
		if(intIstart<intA&&intIend<=intB){
			if(intIend>=intA){
				lstIntervals.push([intA%this.intInnerWidth,intIend%this.intInnerWidth,intJ]);
			}
		}
		if(intIstart<intA&&intIend>intB){
			lstIntervals.push([intA%this.intInnerWidth,intB%this.intInnerWidth,intJ]);

		}
	}
	return lstIntervals;

};
TextWindow.prototype.updateSearchHighlights_wrap=function(){
	var intLength=this.strSearchString.length;
	var intIprev=0;
	var intIend=0;
	var lstLineSearchHighlights=[];
	var lstSearchHighlights=[];
	var lstIntervals,lstInterval;

	var strLine;
	var intI;
	var intContentsJ;
	var intWrappedShift;
	if(this.lstCursor_buffer[0]>=this.intInnerWidth*this.intInnerHeight){
		strLine=this.lstTextBuffer[this.lstCursor_buffer[1]];
		var intShift=this.lstCursor_buffer[0]-this.intInnerWidth*this.intInnerHeight+this.intInnerWidth*1;
		intWrappedShift=Math.floor(intShift/this.intInnerWidth)*this.intInnerWidth;

		intI=null;
		intContentsJ=this.lstCursor_buffer[1];
		for(var jj=0;jj<this.intInnerHeight;jj++){
			if(null==intI){
				strLine=this.lstTextBuffer[intContentsJ];
				intI=intWrappedShift;
			}
			if(undefined==strLine){
				intContentsJ++;
				intScreenJ++;
				intI=null;
				continue;
			}
			if(0==strLine.length){
				intContentsJ++;
				intScreenJ++;
				intI=null;
				continue;
			}
			lstLineSearchHighlights=this.findSearchHighlights(strLine);
			strSubstring=strLine.substring(intI,intI+this.intInnerWidth);
			if(strSubstring.length>0){
				lstIntervals=this.matchingHighlightInterval(lstLineSearchHighlights,intI,intI+this.intInnerWidth-1,jj);
				for(var ii=0;ii<lstIntervals.length;ii++){
					lstInterval=lstIntervals[ii];
					lstSearchHighlights.push(lstInterval);
				}
				intI+=strSubstring.length;
			}
			else{
				intContentsJ++;
				intI=null;
			}
		}

	}else{
		var intScreenJ=this.lstCursor_buffer[1]-this.lstLineCharsShifts[1]-1;	
		var intContentsJ=this.lstCursor_buffer[1]-1;
		var strSubstring;
		var intI=null;
		while(intScreenJ>=0){
			if(null==intI){
				strLine=this.lstTextBuffer[intContentsJ];
				if(undefined!=strLine)
					intI=Math.ceil(strLine.length/this.intInnerWidth)*this.intInnerWidth;
			}
			if(undefined==strLine){
				intContentsJ--;
				intScreenJ--;
				intI=null;
				continue;
			}
			if(0==strLine.length){
				intContentsJ--;
				intScreenJ--;
				intI=null;
				continue;
			}
			lstLineSearchHighlights=this.findSearchHighlights(strLine);
			strSubstring=strLine.substring(intI-this.intInnerWidth,intI);
			if(strSubstring.length>0){
				lstIntervals=this.matchingHighlightInterval(lstLineSearchHighlights,intI-this.intInnerWidth,intI-1,intScreenJ);
				for(var ii=0;ii<lstIntervals.length;ii++){
					lstInterval=lstIntervals[ii];
					lstSearchHighlights.push(lstInterval);
				}
				intI-=this.intInnerWidth;
				intScreenJ--;
			}
			else{
				intContentsJ--;
				intI=null;
			}
		}
		intI=null;
		intContentsJ=this.lstCursor_buffer[1];
		intScreenJ=this.lstCursor_buffer[1]-this.lstLineCharsShifts[1];
		while(intScreenJ<this.intInnerHeight){
			if(null==intI){
				strLine=this.lstTextBuffer[intContentsJ];
				intI=0;
			}
			if(undefined==strLine){
				intContentsJ++;
				intScreenJ++;
				intI=null;
				continue;
			}
			if(0==strLine.length){
				intContentsJ++;
				intScreenJ++;
				intI=null;
				continue;
			}
			lstLineSearchHighlights=this.findSearchHighlights(strLine);
			strSubstring=strLine.substring(intI,intI+this.intInnerWidth);
			if(strSubstring.length>0){
				lstIntervals=this.matchingHighlightInterval(lstLineSearchHighlights,intI,intI+this.intInnerWidth-1,intScreenJ);
				for(var ii=0;ii<lstIntervals.length;ii++){
					lstInterval=lstIntervals[ii];
					lstSearchHighlights.push(lstInterval);
				}
				intI+=this.intInnerWidth;
				intScreenJ++;
			}
			else{
				intContentsJ++;
				intI=null;
			}
		}

	}
	this.lstSearchHighlights=lstSearchHighlights;
};
TextWindow.prototype.updateSearchHighlights=function(){
	this.lstSearchHighlights=[];
	if(null==this.strSearchString)return;
	if(false==this.blnHighlightSearch||0==this.strSearchString.length){
		return;
	}
	if(true==this.blnWrap)this.updateSearchHighlights_wrap();
	else this.updateSearchHighlights_nowrap();
};
TextWindow.prototype.findPairingBracket=function(strBracket,lstCursor_buffer,blnStopAfterScreen){
	var blnBracket=false;
	var lstBrackets=["(",")","[","]","{","}"];
	var intBracket=lstBrackets.indexOf(strBracket);
	if(-1==intBracket)return -1;
	var lstClosingBrackets=[")","(","]","[","}","{"];
	var intOccurence=1;
	var intCharsChecked=0;
	var intLinesChecked=0;
	var intI, intJ;
	var lstReturn;
	lstReturn=lstCursor_buffer;
	intI=lstReturn[0];
	intJ=lstReturn[1];
	var strLine;
	if(0==intBracket%2){
		for(var j=intJ;j<this.lstTextBuffer.length;j++){
			strLine=this.lstTextBuffer[j];
			for(var i=intI+1;i<strLine.length;i++){
				if(strLine[i]==strBracket)intOccurence++;
				if(strLine[i]==lstClosingBrackets[intBracket])intOccurence--;
				if(0==intOccurence)return [i,j];
				intCharsChecked++;
				if(true==blnStopAfterScreen){
					if(true==this.blnWrap){
						if(intCharsChecked>=2*this.intInnerWidth*this.intInnerHeight){return -1;}
					}else{
						if(intLinesChecked>=2*this.intInnerHeight){return -1;}
					}
				}
			}
			intI=0;
			intLinesChecked++;
		}
	}else{
		for(var j=intJ;j>=0;j--){
			strLine=this.lstTextBuffer[j];
			for(var i=intI-1;i>=0;i--){
				if(strLine[i]==strBracket)intOccurence++;
				if(strLine[i]==lstClosingBrackets[intBracket])intOccurence--;
				if(0==intOccurence)return [i,j];
				intCharsChecked++;
				if(true==blnStopAfterScreen){
					if(true==this.blnWrap){
						if(intCharsChecked>=2*this.intInnerWidth*this.intInnerHeight){return -1;}
					}else{
						if(intLinesChecked>=2*this.intInnerHeight){return -1;}
					}
				}

			}
			if(j-1>=0)
				intI=this.lstTextBuffer[j-1].length-1;
			else return -1;
			intLinesChecked++;
		}
	}
	return -1;
};

TextWindow.prototype.findPairingBracket_fastCruncher=function(strBracket,lstCursor_buffer,blnStopAfterScreen){
	var blnBracket=false;
	var lstBrackets=["(",")","[","]","{","}"];
	var intBracket=lstBrackets.indexOf(strBracket);
	if(-1==intBracket)return -1;
	var lstClosingBrackets=[")","(","]","[","}","{"];
	var intOccurence=1;
	var intCharsChecked=0;
	var intLinesChecked=0;
	var intI, intJ;
	var lstReturn;
	lstReturn=lstCursor_buffer;
	intI=lstReturn[0];
	intJ=lstReturn[1];
	var strLine;
	if(0==intBracket%2){
		for(var j=intJ;j<netspace.wndEditing.lstTextBuffer_fastCruncher.length;j++){
			strLine=netspace.wndEditing.lstTextBuffer_fastCruncher[j];
			for(var i=intI+1;i<strLine.length;i++){
				if(strLine[i]==strBracket)intOccurence++;
				if(strLine[i]==lstClosingBrackets[intBracket])intOccurence--;
				if(0==intOccurence)return [i,j];
				intCharsChecked++;
				if(true==blnStopAfterScreen){
					if(true==netspace.wndEditing.blnWrap){
						if(intCharsChecked>=2*netspace.wndEditing.intInnerWidth*netspace.wndEditing.intInnerHeight){return -1;}
					}else{
						if(intLinesChecked>=2*netspace.wndEditing.intInnerHeight){return -1;}
					}
				}
			}
			intI=0;
			intLinesChecked++;
		}
	}else{
		for(var j=intJ;j>=0;j--){
			strLine=netspace.wndEditing.lstTextBuffer_fastCruncher[j];
			for(var i=intI-1;i>=0;i--){
				if(strLine[i]==strBracket)intOccurence++;
				if(strLine[i]==lstClosingBrackets[intBracket])intOccurence--;
				if(0==intOccurence)return [i,j];
				intCharsChecked++;
				if(true==blnStopAfterScreen){
					if(true==netspace.wndEditing.blnWrap){
						if(intCharsChecked>=2*netspace.wndEditing.intInnerWidth*netspace.wndEditing.intInnerHeight){return -1;}
					}else{
						if(intLinesChecked>=2*netspace.wndEditing.intInnerHeight){return -1;}
					}
				}

			}
			if(j-1>=0)
				intI=netspace.wndEditing.lstTextBuffer_fastCruncher[j-1].length-1;
			else return -1;
			intLinesChecked++;
		}
	}
	return -1;
};
TextWindow.prototype.gotoPairingBracket=function(){
	var strBracket=this.lstTextBuffer[this.lstCursor_buffer[1]][this.lstCursor_buffer[0]];
	var newLstCursor_buffer=this.findPairingBracket(strBracket,this.lstCursor_buffer,false);
	if(-1==newLstCursor_buffer)return;
	this.setLstCursor_buffer(newLstCursor_buffer[0],newLstCursor_buffer[1]);
	this.addCursorHistoryUndoItem(true);
	this.updateWndEditing(true);
};
TextWindow.prototype.updateWndEditing=function(blnAlign){
	this.computeScreenCursor(blnAlign);
	this.updateTextWindowContent();
	this.theSuper.refreshStatus();
};
TextWindow.prototype.setLstCursor_buffer0_indent=function(blnLineBeginning){
	var strLine=this.lstTextBuffer[this.lstCursor_buffer[1]];
	if(undefined==strLine)retrun;
	if(0==strLine.length){
		this.lstCursor_buffer[0]=0;
		return;
	}
	var intIndentSize=this.indentSizeToPreserve(this.lstCursor_buffer[1]);
	if(true==blnLineBeginning){
		this.lstCursor_buffer[0]=intIndentSize;
	}
	else{
		if(this.lstCursor_buffer[0]>=strLine.length){
			this.lstCursor_buffer[0]=strLine.length-1;
			return;
		}
		if(this.lstCursor_buffer[0]<intIndentSize){
			this.lstCursor_buffer[0]=intIndentSize;
		}
	}
};
TextWindow.prototype.setLstCursor_buffer0=function(intI){
	if(intI>=0)this.lstCursor_buffer[0]=intI;
	else this.lstCursor_buffer[0]=0;
};
TextWindow.prototype.setLstCursor_buffer1=function(intJ){
	if(intJ<this.lstTextBuffer.length){
		this.lstCursor_buffer[1]=intJ;
		return;
	}
	this.lstCursor_buffer[1]=this.lstTextBuffer.length-1;
};
TextWindow.prototype.setLstCursor_buffer0_fastCruncher=function(intI){
	if(intI>=0)netspace.wndEditing.lstCursor_buffer_fastCruncher[0]=intI;
	else netspace.wndEditing.lstCursor_buffer_fastCruncher[0]=0;
};
TextWindow.prototype.setLstCursor_buffer1_fastCruncher=function(intJ){
	if(intJ<netspace.wndEditing.lstTextBuffer_fastCruncher.length){
		netspace.wndEditing.lstCursor_buffer_fastCruncher[1]=intJ;
		return;
	}
	netspace.wndEditing.lstCursor_buffer_fastCruncher[1]=netspace.wndEditing.lstTextBuffer_fastCruncher.length-1;
};
TextWindow.prototype.setLstCursor_buffer1_last=function(){
	this.lstCursor_buffer[1]=this.lstTextBuffer.length-1;
};
TextWindow.prototype.setLstCursor_buffer=function(intI,intJ){
	this.setLstCursor_buffer0(intI);
	this.setLstCursor_buffer1(intJ);
};

TextWindow.prototype.setLstCursor_buffer_fastCruncher=function(intI,intJ){
	netspace.wndEditing.setLstCursor_buffer0_fastCruncher(intI);
	netspace.wndEditing.setLstCursor_buffer1_fastCruncher(intJ);
};
TextWindow.prototype.cursorUp=function(){
	if(this.lstCursor_buffer[1]>0){
		this.setLstCursor_buffer1(this.lstCursor_buffer[1]-1);
		var strLine=this.lstTextBuffer[this.lstCursor_buffer[1]];
		if(0==this.theSuper.intMode){
			if(undefined!=strLine&&this.lstCursor_buffer[0]>=strLine.length){
				if(0==strLine.length)
					this.setLstCursor_buffer0(0);
				else this.setLstCursor_buffer0(strLine.length-1);
			}
		}else{
			if(undefined!=strLine&&this.lstCursor_buffer[0]>strLine.length){
				if(0==strLine.length)
					this.setLstCursor_buffer0(0);
				else this.setLstCursor_buffer0(strLine.length);
			}

		}
	}
	this.addCursorHistoryUndoItem(false);
	this.computeScreenCursor(true);
};
TextWindow.prototype.cursorRight=function(){
	var strLine=this.lstTextBuffer[this.lstCursor_buffer[1]];
	if(undefined!=strLine){
		if(1==this.theSuper.intMode){
			if(this.lstCursor_buffer[0]<strLine.length)this.setLstCursor_buffer0(this.lstCursor_buffer[0]+1);
		}
		if(0==this.theSuper.intMode){
			if(this.lstCursor_buffer[0]<strLine.length-1)this.setLstCursor_buffer0(this.lstCursor_buffer[0]+1);
		}
	}
	this.addCursorHistoryUndoItem(false);
	this.computeScreenCursor(true);
};
TextWindow.prototype.cursorDown=function(){
	if(this.lstCursor_buffer[1]<this.lstTextBuffer.length-1){
		this.setLstCursor_buffer1(this.lstCursor_buffer[1]+1);
		var strLine=this.lstTextBuffer[this.lstCursor_buffer[1]];
		if(0==this.theSuper.intMode){
			if(undefined!=strLine&&this.lstCursor_buffer[0]>=strLine.length){
				if(strLine.length>0){
					this.setLstCursor_buffer0(strLine.length-1);
				}else{this.setLstCursor_buffer0(0);}
			}
		}else{
			if(undefined!=strLine&&this.lstCursor_buffer[0]>strLine.length){
				if(strLine.length>0){
					this.setLstCursor_buffer0(strLine.length);
				}else{this.setLstCursor_buffer0(0);}
			}
		}
		this.addCursorHistoryUndoItem(false);
		this.computeScreenCursor(true);
	}
};
TextWindow.prototype.cursorLeft=function(){
	if(this.lstCursor_buffer[0]>0)this.setLstCursor_buffer0(this.lstCursor_buffer[0]-1);
	this.addCursorHistoryUndoItem(false);
	this.computeScreenCursor(true);
};
TextWindow.prototype.cursorToTheLineBeginning=function(){
	this.setLstCursor_buffer0(0);
	this.addCursorHistoryUndoItem(true);
	this.computeScreenCursor(true);
};
TextWindow.prototype.cursorToTheLineEnd=function(){
	var strLine=this.lstTextBuffer[this.lstCursor_buffer[1]];
	if(undefined==strLine)return;
	if(1==this.theSuper.intMode)
		this.setLstCursor_buffer0(strLine.length);
	else this.setLstCursor_buffer0(strLine.length-1);
	this.addCursorHistoryUndoItem(true);
	this.computeScreenCursor(true);
};
TextWindow.prototype.doHighlight=function(chrChar,i,j){
	var lstSearchHighlight;
	if(this.chrTabAlias==chrChar&&true==this.blnHltabs)return true;
	if(true==this.blnHighlightSearch){
		for(var ii=0;ii<this.lstSearchHighlights.length;ii++){
			var lstSearchHighlight=this.lstSearchHighlights[ii];
			if(i>=this.intInnerX+lstSearchHighlight[0]&&i<=this.intInnerX+lstSearchHighlight[1]&&this.intInnerY+lstSearchHighlight[2]==j)
				return true;
		}
	}
	if(this.lstSelectionHighlights_screen.length>0){
		var lstHighlight;
		for(var ii=0;ii<this.lstSelectionHighlights_screen.length;ii++){
			lstHighlight=this.lstSelectionHighlights_screen[ii];	
			if(j==this.intInnerY+lstHighlight[2]&&i>=this.intInnerX+lstHighlight[0]&&i<=this.intInnerX+lstHighlight[1]){
				return true;
			}
		}
	}
	if(this.lstPairingBracketHighlight_screen.length>0){
		var lstHighlight;
		for(var ii=0;ii<this.lstPairingBracketHighlight_screen.length;ii++){
			lstHighlight=this.lstPairingBracketHighlight_screen[ii];	
			if(j==this.intInnerY+lstHighlight[2]&&i>=this.intInnerX+lstHighlight[0]&&i<=this.intInnerX+lstHighlight[1]){
				return true;
			}
		}
	}
	return false;
};
TextWindow.prototype.highlights=function(){
	var chrChar;
	var intR,intG,intB,intA;
	var lstReturn=this.computer.lstConsoleGray;
	intR=lstReturn[0];
	intG=lstReturn[1];
	intB=lstReturn[2];
	intA=lstReturn[3];
	//mhdmodiff--
	//var intRhl,intGhl,intBhl,intAhl;
	var intRhlf,intGhlf,intBhlf,intAhlf;
	var intRhlb,intGhlb,intBhlb,intAhlb;
	lstReturn=this.lstHighlightForegroundColor;
	intRhlf=lstReturn[0];
	intGhlf=lstReturn[1];
	intBhlf=lstReturn[2];
	intAhlf=lstReturn[3];
	lstReturn=this.lstHighlightBackgroundColor;
	intRhlb=lstReturn[0];
	intGhlb=lstReturn[1];
	intBhlb=lstReturn[2];
	intAhlb=lstReturn[3];
	for(var j=this.intInnerY;j<this.intInnerY+this.intInnerHeight;j++)
		for(var i=this.intInnerX;i<this.intInnerX+this.intInnerWidth;i++){
			chrChar=this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(i,j)];
			if(false==this.doHighlight(chrChar,i,j)){
				this.base.lstBackgroundBuffer[this.base.getScreenIndex_text(i,j)]=[0,0,0,255];
				this.base.lstForegroundBuffer[this.base.getScreenIndex_text(i,j)]=[intR,intG,intB,intA];
			}else{
				this.base.lstBackgroundBuffer[this.base.getScreenIndex_text(i,j)]=[intRhlb,intGhlb,intBhlb,intAhlb];
				this.base.lstForegroundBuffer[this.base.getScreenIndex_text(i,j)]=[intRhlf,intGhlf,intBhlf,intAhlf];
			}
		}
};
TextWindow.prototype.updateTextWindowContent=function(){
	if(true==this.blnWrap)this.updateTextWindowContent_wrap();
	else this.updateTextWindowContent_nowrap();
	this.highlights();
	var wndSharedBuffer=null;
	for(var ii=0;ii<this.lstSharedBufferWnd.length;ii++){
		wndSharedBuffer=this.lstSharedBufferWnd[ii];
		if(null!=wndSharedBuffer){
			if(true==wndSharedBuffer.blnWrap)wndSharedBuffer.updateTextWindowContent_wrap();
			else wndSharedBuffer.updateTextWindowContent_nowrap();
			wndSharedBuffer.highlights();
		}
	}
};
TextWindow.prototype.detectEntersInString=function(strTextContents){
	var returnEnter;
	var chrEnter10=String.fromCharCode(10);
	var chrEnter13=String.fromCharCode(13);
	var intIndexEnter10=strTextContents.indexOf(chrEnter10);
	var intIndexEnter13=strTextContents.indexOf(chrEnter13);
	var intIndexEnter1310=strTextContents.indexOf(chrEnter13+chrEnter10);
	returnEnter=null;
	var strLine=null;
	var blnNoEol=null;
	if(-1!=intIndexEnter10&&-1!=intIndexEnter13){
		if(-1!=intIndexEnter1310){
			returnEnter=chrEnter13+chrEnter10;
			if(returnEnter==strTextContents.substring(strTextContents.length-2))
				blnNoEol=false;
			else blnNoEol=true;
		}else{
			returnEnter=chrEnter10;
			if(chrEnter13==strTextContents.substring(strTextContents.length-1)||chrEnter10==strTextContents.substring(strTextContents.length-1))
				blnNoEol=false;
			else blnNoEol=true;
		}
	}
	else{
		if(-1!=intIndexEnter10){
			returnEnter=chrEnter10;
			if(returnEnter==strTextContents.substring(strTextContents.length-1))
				blnNoEol=false;
			else blnNoEol=true;
		}
		if(-1!=intIndexEnter13){
			returnEnter=chrEnter13;
			if(returnEnter==strTextContents.substring(strTextContents.length-1))
				blnNoEol=false;
			else blnNoEol=true;
		}
	}
	if(-1==intIndexEnter10&&-1==intIndexEnter13){
		returnEnter=chrEnter10;
		blnNoEol=true;
	}
	return [returnEnter,blnNoEol];
};
TextWindow.prototype.detectEnters=function(strTextContents){
	var lstReturn=this.detectEntersInString(strTextContents);
	this.blnNoEol=lstReturn[1];
	return lstReturn[0];
};
TextWindow.prototype.loadText=function(strTextContents){
	this.lstTextBuffer=[];
	var chrEnter=this.detectEnters(strTextContents);
	this.chrEnter=chrEnter;
	this.lstTextBuffer=strTextContents.split(chrEnter);
	for(var ii=0;ii<this.lstTextBuffer.length;ii++)
		this.lstTextBuffer[ii]=this.copyString(this.lstTextBuffer[ii]);
	if(false==this.blnNoEol)this.lstTextBuffer.splice(this.lstTextBuffer.length-1,1);
	this.blnModiff=false;
	this.updateTextWindowContent();
};
TextWindow.prototype.removeItselfFromSharedBuffers=function(){
	var wndEditing;
	var intIndex;
	for(var ii=0;ii<this.theSuper.lstTextWindows.length;ii++){
		wndEditing=this.theSuper.lstTextWindows[ii];
		intIndex=wndEditing.lstSharedBufferWnd.indexOf(this);	
		if(-1!=intIndex)wndEditing.lstSharedBufferWnd.splice(intIndex,1);
	}
};
TextWindow.prototype.getFileInfo=function(file){
	//modiff--
	//fileInfo={};	
	var fileInfo={};	
	fileInfo.name=file.name;
	fileInfo.size=file.size;
	fileInfo.lastModified=file.lastModified;
	fileInfo.type=file.type;
	fileInfo.webkitRelativePath=file.webkitRelativePath;
	return fileInfo;
};
TextWindow.prototype.filesEqual=function(fileInfo1,fileInfo2){
	if(null==fileInfo1&&null==fileInfo2)return true;
	if(null==fileInfo1&&null!=fileInfo2)return false;
	if(null!=fileInfo1&&null==fileInfo2)return false;
	if("string"==typeof(fileInfo1)&&"string"==typeof(fileInfo2))return fileInfo1==fileInfo2;
	if("string"==typeof(fileInfo1)&&"string"!=typeof(fileInfo2))return false;
	if("string"!=typeof(fileInfo1)&&"string"==typeof(fileInfo2))return false;

	if(fileInfo1.name!=fileInfo2.name)return false;
	if(fileInfo1.size!=fileInfo2.size)return false;
	if(fileInfo1.lastModified!=fileInfo2.lastModified)return false;
	if(fileInfo1.type!=fileInfo2.type)return false;
	if(fileInfo1.webkitRelativePath!=fileInfo2.webkitRelativePath)return false;
	return true;
};
TextWindow.prototype.lstTextBuffersEqual=function(wnd1,wnd2){
	if(wnd1.lstTextBuffer.length!=wnd2.lstTextBuffer.length)return false;
	for(var j=0;j<wnd1.lstTextBuffer.length;j++)
		if(wnd1.lstTextBuffer[j]!=wnd2.lstTextBuffer[j])return false;
	return true;
};
TextWindow.prototype.setSharedBuffers=function(){
	var wndEditing;
	this.lstSharedBufferWnd=[];
	this.lstUndoHistory=[];
	this.lstRedoHistory=[];
	this.lstCursorUndoHistory=[];
	this.lstCursorRedoHistory=[];
	this.intUndoRedoLimit=1000;
	/*this.intUndoRedoLimit=-1;*/
	this.addCursorHistoryUndoItem(true);
	this.removeItselfFromSharedBuffers();
	for(var ii=0;ii<this.theSuper.lstTextWindows.length;ii++){
		wndEditing=this.theSuper.lstTextWindows[ii];
		if(this!=wndEditing&&undefined!=wndEditing.theFileInfo&&null!=wndEditing.theFileInfo){
			if(true==this.filesEqual(this.theFileInfo,wndEditing.theFileInfo)){
					this.lstSharedBufferWnd.push(wndEditing);
					wndEditing.lstSharedBufferWnd.push(this);
			}else{
			}
		}
	}
};
TextWindow.prototype.textDefaults=function(){
	this.lstSelectionHighlights_text=[];
	this.setLstCursor_buffer0(0);
	this.setLstCursor_buffer1(0);
	this.dctKeywords={};
	this.blnModiff=false;
};
TextWindow.prototype.updateSharedBuffer=function(wndSrc){
	var wndDst=this;
	wndDst.lstTextBuffer=wndSrc.copyList(wndSrc.lstTextBuffer);
	wndDst.chrEnter=wndSrc.chrEnter;
	wndDst.blnNoEol=wndSrc.blnNoEol;
	wndDst.textDefaults();
	wndDst.dctKeywords=wndSrc.copyDictionary(wndSrc.dctKeywords);
	wndDst.updateWndEditing(true);
};
TextWindow.prototype.loadEditingText=function(strTextContents,objArgs){
	this.loadText(strTextContents);
	this.textDefaults();
	this.keywordsAfterStage_insertNewlines(this.lstTextBuffer);
	this.updateWndEditing(true);
	if(null==objArgs||undefined==objArgs||"string"==typeof(objArgs))
		this.theFileInfo=objArgs;
	else this.theFileInfo=this.getFileInfo(this.objArgs.fileInfo);
	this.setSharedBuffers();
};

TextWindow.prototype.loadEditingText_fastCruncher=function(objArgs){
	if(netspace.wndEditing.lstTextBuffer_fastCruncher!=this.lstTextBuffer){
		var strTextContents=netspace.wndEditing.getStrContents_fastCruncher();
		netspace.wndEditing.loadEditingText(strTextContents,objArgs);
	}
};
TextWindow.prototype.insertLstStringContents_=function(intJ,lstTextContents){
	if(lstTextContents.length>0){
		this.insertNewlines(intJ,lstTextContents);
		this.setLstCursor_buffer1(this.lstCursor_buffer[1]+lstTextContents.length);
		this.updateWndEditing(true);
	}
};
TextWindow.prototype.insertLstStringContents=function(lstTextContents){
	var intJ=this.lstCursor_buffer[1]+1;
	this.insertLstStringContents_(intJ,lstTextContents);
};
TextWindow.prototype.getStrContents=function(){
	var strContents="";
	if("string"==typeof(this.theFileInfo)&&"new_"==this.theFileInfo.substring(0,4)&&false==this.blnModiff){return strContents;}
	for(var jj=0;jj<this.lstTextBuffer.length;jj++){
		strContents+=this.lstTextBuffer[jj];
		if(jj<this.lstTextBuffer.length-1)strContents+=this.chrEnter;
		else{if(false==this.blnNoEol)strContents+=this.chrEnter;}
	}
	return strContents;
};

TextWindow.prototype.getStrContents_fastCruncher=function(){
	var strContents="";
	if("string"==typeof(netspace.wndEditing.theFileInfo)&&"new_"==netspace.wndEditing.theFileInfo.substring(0,4)&&false==netspace.wndEditing.blnModiff){return strContents;}
	for(var jj=0;jj<netspace.wndEditing.lstTextBuffer_fastCruncher.length;jj++){
		strContents+=(""+netspace.wndEditing.lstTextBuffer_fastCruncher[jj]);
		if(jj<netspace.wndEditing.lstTextBuffer_fastCruncher.length-1)strContents+=(""+netspace.wndEditing.chrEnter);
		else{if(false==netspace.wndEditing.blnNoEol)strContents+=(""+netspace.wndEditing.chrEnter);}
	}
	return strContents;
};
TextWindow.prototype.optimizeUndoItem=function(lstEntry){
	if(0==this.lstUndoHistory.length)return false;
	var lstPrevUndoItem=this.lstUndoHistory[this.lstUndoHistory.length-1];
	if(1==lstEntry[2][0]&&1==lstPrevUndoItem[2][0]){
		if(lstEntry[2][2]==lstPrevUndoItem[2][2]&&lstPrevUndoItem[2][1]+lstPrevUndoItem[2][3].length==lstEntry[2][1]){
			this.lstUndoHistory[this.lstUndoHistory.length-1]=[lstPrevUndoItem[0],lstEntry[1],[1,lstPrevUndoItem[2][1],lstPrevUndoItem[2][2],lstPrevUndoItem[2][3]+lstEntry[2][3]]];
			this.lstDotHistory[this.lstDotHistory.length-1]=[lstPrevUndoItem[0],lstEntry[1],[1,lstPrevUndoItem[2][1],lstPrevUndoItem[2][2],lstPrevUndoItem[2][3]+lstEntry[2][3]]];
			return true;
		}
	}
	if(2==lstEntry[2][0]&&2==lstPrevUndoItem[2][0]){
		if(undefined!=lstEntry[2][3]&&lstEntry[2][2]==lstPrevUndoItem[2][2]&&lstPrevUndoItem[2][1]+lstPrevUndoItem[2][4].length==lstEntry[2][1]){
			this.lstUndoHistory[this.lstUndoHistory.length-1]=[lstPrevUndoItem[0],lstEntry[1],[2,lstPrevUndoItem[2][1],lstPrevUndoItem[2][2],lstPrevUndoItem[2][3]+lstEntry[2][3],lstPrevUndoItem[2][4]+lstEntry[2][4]]];
			this.lstDotHistory[this.lstDotHistory.length-1]=[lstPrevUndoItem[0],lstEntry[1],[2,lstPrevUndoItem[2][1],lstPrevUndoItem[2][2],lstPrevUndoItem[2][3]+lstEntry[2][3],lstPrevUndoItem[2][4]+lstEntry[2][4]]];
			return true;
		}
	}
	if(8.1==lstEntry[2][0]&&8.1==lstPrevUndoItem[2][0]){
		if(lstEntry[2][2]==lstPrevUndoItem[2][2]&&lstPrevUndoItem[2][1]-1==lstEntry[2][1]){
			this.lstUndoHistory[this.lstUndoHistory.length-1]=[lstPrevUndoItem[0],lstEntry[1],[8.1,lstEntry[2][1],lstEntry[2][2],lstEntry[2][3]+lstPrevUndoItem[2][3]]];
			this.lstDotHistory[this.lstDotHistory.length-1]=[lstPrevUndoItem[0],lstEntry[1],[8.1,lstEntry[2][1],lstEntry[2][2],lstEntry[2][3]+lstPrevUndoItem[2][3]]];
			return true;
		}
	}
	if(127.1==lstEntry[2][0]&&127.1==lstPrevUndoItem[2][0]){
		if(lstEntry[2][2]==lstPrevUndoItem[2][2]&&lstPrevUndoItem[2][1]==lstEntry[2][1]){
			this.lstUndoHistory[this.lstUndoHistory.length-1]=[lstPrevUndoItem[0],lstEntry[1],[127.1,lstPrevUndoItem[2][1],lstPrevUndoItem[2][2],lstPrevUndoItem[2][3]+lstEntry[2][3]]];
			this.lstDotHistory[this.lstDotHistory.length-1]=[lstPrevUndoItem[0],lstEntry[1],[127.1,lstPrevUndoItem[2][1],lstPrevUndoItem[2][2],lstPrevUndoItem[2][3]+lstEntry[2][3]]];
			return true;
		}
	}
	if(16.1==lstEntry[2][0]&&16.1==lstPrevUndoItem[2][0]){
		if(lstEntry[2][1]==lstPrevUndoItem[2][1]){
			this.lstUndoHistory[this.lstUndoHistory.length-1]=[lstPrevUndoItem[0],lstEntry[1],[16.1,lstPrevUndoItem[2][1],this.concatenateLists(lstEntry[2][2],lstPrevUndoItem[2][2])]];
			this.lstDotHistory[this.lstDotHistory.length-1]=[lstPrevUndoItem[0],lstEntry[1],[16.1,lstPrevUndoItem[2][1],this.concatenateLists(lstEntry[2][2],lstPrevUndoItem[2][2])]];
			return true;	
		}
	}
	if(16.2==lstEntry[2][0]&&16.2==lstPrevUndoItem[2][0]){
		if(lstEntry[2][1]==lstPrevUndoItem[2][1]+lstPrevUndoItem[2][2].length){
			this.lstUndoHistory[this.lstUndoHistory.length-1]=[lstPrevUndoItem[0],lstEntry[1],[16.2,lstPrevUndoItem[2][1],this.concatenateLists(lstPrevUndoItem[2][2],lstEntry[2][2])]];
			this.lstDotHistory[this.lstDotHistory.length-1]=[lstPrevUndoItem[0],lstEntry[1],[16.2,lstPrevUndoItem[2][1],this.concatenateLists(lstPrevUndoItem[2][2],lstEntry[2][2])]];
			return true;	
		}
	}
	if(16.3==lstEntry[2][0]&&16.3==lstPrevUndoItem[2][0]){
		if(lstEntry[2][1]==lstPrevUndoItem[2][1]){
			this.lstUndoHistory[this.lstUndoHistory.length-1]=[lstPrevUndoItem[0],lstEntry[1],[16.3,lstPrevUndoItem[2][1],lstPrevUndoItem[2][2],[lstEntry[2][3][0]+lstPrevUndoItem[2][3][0]]]];
			this.lstDotHistory[this.lstDotHistory.length-1]=[lstPrevUndoItem[0],lstEntry[1],[16.3,lstPrevUndoItem[2][1],lstPrevUndoItem[2][2],[lstEntry[2][3][0]+lstPrevUndoItem[2][3][0]]]];
			return true;	
		}
	}
	if(16.4==lstEntry[2][0]&&16.4==lstPrevUndoItem[2][0]){
		if(lstEntry[2][1]==lstPrevUndoItem[2][1]+lstPrevUndoItem[2][3][0].length){
			this.lstUndoHistory[this.lstUndoHistory.length-1]=[lstPrevUndoItem[0],lstEntry[1],[16.4,lstPrevUndoItem[2][1],lstPrevUndoItem[2][2],[lstPrevUndoItem[2][3][0]+lstEntry[2][3][0]]]];
			this.lstDotHistory[this.lstDotHistory.length-1]=[lstPrevUndoItem[0],lstEntry[1],[16.4,lstPrevUndoItem[2][1],lstPrevUndoItem[2][2],[lstPrevUndoItem[2][3][0]+lstEntry[2][3][0]]]];
			return true;	
		}
	}

	return false;
};
TextWindow.prototype.optimizeRedoItem=function(lstEntry){
	return false;
};
TextWindow.prototype.optimizeCursorHistoryUndoItem=function(lstEntry,blnDontOptimize){
	var prevEntry=this.lstCursorUndoHistory[this.lstCursorUndoHistory.length-1];
	var prevPrevEntry;
	if(undefined==prevEntry)
		return false;
	if(prevEntry[0][0]==lstEntry[0]&&prevEntry[0][1]==lstEntry[1]){
		return true;
	}
	if(true==blnDontOptimize)
		return false;
	if(prevEntry[0][0]==lstEntry[0]+1&&prevEntry[0][1]==lstEntry[1]){
		if(false==prevEntry[1]){
			this.lstCursorUndoHistory.push([lstEntry,true]);
		}else{
			prevPrevEntry=this.lstCursorUndoHistory[this.lstCursorUndoHistory.length-2];
			if(undefined!=prevPrevEntry&&prevPrevEntry[0][0]==lstEntry[0]+this.intInnerWidth&&prevPrevEntry[0][1]==lstEntry[1]){
				return false;
			}
			this.lstCursorUndoHistory[this.lstCursorUndoHistory.length-1]=[[lstEntry[0],lstEntry[1]],true];
			
		}
		return true;
	}
	if(prevEntry[0][0]==lstEntry[0]-1&&prevEntry[0][1]==lstEntry[1]){
		if(false==prevEntry[1]){
			this.lstCursorUndoHistory.push([lstEntry,true]);
		}else{
			prevPrevEntry=this.lstCursorUndoHistory[this.lstCursorUndoHistory.length-2];
			if(undefined!=prevPrevEntry&&prevPrevEntry[0][0]==lstEntry[0]-this.intInnerWidth&&prevPrevEntry[0][1]==lstEntry[1]){
				return false;
			}
			this.lstCursorUndoHistory[this.lstCursorUndoHistory.length-1]=[[lstEntry[0],lstEntry[1]],true];
		}
		return true;
	}
	if(prevEntry[0][1]==lstEntry[1]+1&&prevEntry[0][0]==lstEntry[0]){
		if(false==prevEntry[1]){
			this.lstCursorUndoHistory.push([lstEntry,true]);
		}else{
			prevPrevEntry=this.lstCursorUndoHistory[this.lstCursorUndoHistory.length-2];
			if(undefined!=prevPrevEntry&&prevPrevEntry[0][1]==lstEntry[1]+this.intInnerHeight&&prevPrevEntry[0][0]==lstEntry[0]){
				return false;
			}
			this.lstCursorUndoHistory[this.lstCursorUndoHistory.length-1]=[[lstEntry[0],lstEntry[1]],true];
		}
		return true;
	}
	if(prevEntry[0][1]==lstEntry[1]-1&&prevEntry[0][0]==lstEntry[0]){
		if(false==prevEntry[1]){
			this.lstCursorUndoHistory.push([lstEntry,true]);
		}else{
			prevPrevEntry=this.lstCursorUndoHistory[this.lstCursorUndoHistory.length-2];
			if(undefined!=prevPrevEntry&&prevPrevEntry[0][1]==lstEntry[1]-this.intInnerHeight&&prevPrevEntry[0][0]==lstEntry[0]){
				return false;
			}
			this.lstCursorUndoHistory[this.lstCursorUndoHistory.length-1]=[[lstEntry[0],lstEntry[1]],true];
		}
		return true;
	}
	return false;
};
TextWindow.prototype.optimizeCursorHistoryRedoItem=function(lstEntry){
	return false;
};
TextWindow.prototype.addCursorHistoryUndoItem=function(blnDontOptimize){
	if(-1==this.intUndoRedoLimit)return;
	var lstEntry=this.copyList(this.lstCursor_buffer);
	this.lstCursorRedoHistory=[];
	if(false==this.optimizeCursorHistoryUndoItem(lstEntry,blnDontOptimize))
		this.lstCursorUndoHistory.push([lstEntry,false]);
	if(this.intUndoRedoLimit>0){
		if(this.lstCursorUndoHistory.length>this.intUndoRedoLimit)
			this.lstCursorUndoHistory.splice(0,(this.lstCursorUndoHistory.length-this.intUndoRedoLimit));
	}	
};
TextWindow.prototype.addCursorHistoryUndoItem_dontClearRedo=function(lstEntry){
	if(-1==this.intUndoRedoLimit)return;
	if(false==this.optimizeCursorHistoryUndoItem(lstEntry,true))
		this.lstCursorUndoHistory.push(lstEntry);
	if(this.intUndoRedoLimit>0){
		if(this.lstCursorUndoHistory.length>this.intUndoRedoLimit)
			this.lstCursorUndoHistory.splice(0,(this.lstCursorUndoHistory.length-this.intUndoRedoLimit));
	}	
};
TextWindow.prototype.addDotItem=function(lstEntry){
	this.lstDotHistory=[];
	if(false==this.optimizeUndoItem(lstEntry))
		this.lstDotHistory.push(lstEntry);
};
TextWindow.prototype.addUndoItem=function(lstEntry){
	if(-1==this.intUndoRedoLimit)return;
	this.lstRedoHistory=[];
	if(false==this.optimizeUndoItem(lstEntry)){
		this.lstUndoHistory.push(lstEntry);
		this.addDotItem(lstEntry);
	}
	if(this.intUndoRedoLimit>0){
		if(this.lstUndoHistory.length>this.intUndoRedoLimit)
			this.lstUndoHistory.splice(0,(this.lstUndoHistory.length-this.intUndoRedoLimit));
	}	
};
TextWindow.prototype.addUndoItem_fromRedo=function(lstEntry){
	if(-1==this.intUndoRedoLimit)return;
	this.lstRedoHistory=[];
	this.lstUndoHistory.push(lstEntry);
	if(this.intUndoRedoLimit>0){
		if(this.lstUndoHistory.length>this.intUndoRedoLimit)
			this.lstUndoHistory.splice(0,(this.lstUndoHistory.length-this.intUndoRedoLimit));
	}	
};
TextWindow.prototype.addUndoItem_dontClearRedo=function(lstEntry,blnClearRedo){
	if(-1==this.intUndoRedoLimit)return;
	if(false==this.optimizeUndoItem(lstEntry))
		this.lstUndoHistory.push(lstEntry);
	if(this.intUndoRedoLimit>0){
		if(this.lstUndoHistory.length>this.intUndoRedoLimit)
			this.lstUndoHistory.splice(0,(this.lstUndoHistory.length-this.intUndoRedoLimit));
	}	
};
TextWindow.prototype.addRedoItem=function(lstEntry){
	if(-1==this.intUndoRedoLimit)return;
	if(false==this.optimizeRedoItem(lstEntry))
		this.lstRedoHistory.push(lstEntry);
	if(this.intUndoRedoLimit>0){
		if(this.lstRedoHistory.length>this.intUndoRedoLimit)
			this.lstRedoHistory.splice(0,(this.lstRedoHistory.length-this.intUndoRedoLimit));
	}	
};
TextWindow.prototype.addCursorHistoryRedoItem=function(lstEntry){
	if(-1==this.intUndoRedoLimit)return;
	if(false==this.optimizeCursorHistoryRedoItem(lstEntry))
		this.lstCursorRedoHistory.push(lstEntry);
	if(this.intUndoRedoLimit>0){
		if(this.lstCursorRedoHistory.length>this.intUndoRedoLimit)
			this.lstCursorRedoHistory.splice(0,(this.lstCursorRedoHistory.length-this.intUndoRedoLimit));
	}	
};
TextWindow.prototype.undoLast=function(){
	if(-1==this.intUndoRedoLimit){
		this.theSuper.setStatus("-1==intUndoRedoLimit e.x. :set intUndoRedoLimit=1000");
		return;
	}
	if(0==this.lstUndoHistory.length)return;
	var lstEntry=this.lstUndoHistory.pop();
	this.addRedoItem(lstEntry);
	var lstCursorAfterUndo,lstCursorAfterRedo,lstUndoOperation;
	var lstReturn=lstEntry;
	lstCursorAfterUndo=lstReturn[0];
	lstCursorAfterRedo=lstReturn[1];
	lstUndoOperation=lstReturn[2];
	switch(lstUndoOperation[0]){
		case 1:/*insertEditingChar_*/
			var intI=lstUndoOperation[1];	
			var intJ=lstUndoOperation[2];	
			var strKeys=lstUndoOperation[3];
			var strLine=this.lstTextBuffer[intJ];
			var beforeKeywords=this.keywordsBeforeStage_sublineModiffPro(this.lstTextBuffer[intJ],intI,intI+strKeys.length);
			var intLength=strKeys.length;
			this.setLstTextBuffer(intJ,strLine.substring(0,intI)+""+strLine.substring(intI+intLength));
			this.keywordsAfterStage_sublineModiffPro(this.lstTextBuffer[intJ],beforeKeywords,intI,intI);
			break;
		case 2:/*replaceEditingChar_*/
			var intI=lstUndoOperation[1];	
			var intJ=lstUndoOperation[2];	
			var strPrevKeys=lstUndoOperation[3];
			var strNextKeys=lstUndoOperation[4];
			var strLine=this.lstTextBuffer[intJ];
			var beforeKeywords=this.keywordsBeforeStage_sublineModiffPro(this.lstTextBuffer[intJ],intI,intI+strNextKeys.length);
			if(undefined!=strPrevKeys){
				var intLength=strPrevKeys.length;
				this.setLstTextBuffer(intJ,strLine.substring(0,intI)+strPrevKeys+strLine.substring(intI+intLength));
			}else{
				this.setLstTextBuffer(intJ,strLine.substring(0,intI));
			}
			this.keywordsAfterStage_sublineModiffPro(this.lstTextBuffer[intJ],beforeKeywords,intI,intI+strPrevKeys.length);
			break;
		case 3:/*replaceCharacter*/
			var intI=lstUndoOperation[1];	
			var intJ=lstUndoOperation[2];	
			var chrPrevKey=lstUndoOperation[3];
			var chrNextKey=lstUndoOperation[4];
			var strLine=this.lstTextBuffer[intJ];
			var beforeKeywords=this.keywordsBeforeStage_sublineModiffPro(this.lstTextBuffer[intJ],intI,intI+chrNextKey.length);
			this.setLstTextBuffer(intJ,strLine.substring(0,intI)+chrPrevKey+strLine.substring(intI+1));
			this.keywordsAfterStage_sublineModiffPro(this.lstTextBuffer[intJ],beforeKeywords,intI,intI+chrPrevKey.length);
			break;
		case 9:/*cursorPreserveIndent*/;
			var intJFrom=lstUndoOperation[1];	
			var intJTo=lstUndoOperation[2];	
			var intIndentSize=lstUndoOperation[3];	
			var strLine=this.lstTextBuffer[intJTo].substring(intIndentSize);
			this.setLstTextBuffer(intJTo,strLine);
			break;
		case 13:/*insertNewline*/;
			var intJ=lstUndoOperation[1];	
			var strPrevLine=lstUndoOperation[2];	
			var strNewline=lstUndoOperation[3];	
			var beforeKeywords=this.keywordsBeforeStage_lineRemoval_ij(-1,0,intJ);
			this.keywordsAfterStage_lineRemoval_ij(-1,beforeKeywords,0,intJ);
			this.removeLine_noUndo(intJ);	
			if(intJ>0){
				var beforeKeywords=this.keywordsBeforeStage_sublineModiff(this.lstTextBuffer[intJ-1]);
				this.setLstTextBuffer(intJ-1,strPrevLine+strNewline);
				this.keywordsAfterStage_sublineModiff(this.lstTextBuffer[intJ-1],beforeKeywords);
			}
			break;
		case 13.1:/*prependNewline*/;
			var intJ=lstUndoOperation[1];	
			var strPrevLine=lstUndoOperation[2];	
			var strNewline=lstUndoOperation[3];	
			this.keywordsAfterStage_linesRemoval([this.lstTextBuffer[intJ]]);
			this.removeLine_noUndo(intJ);	
			if(intJ>0){
				var beforeKeywords=this.keywordsBeforeStage_sublineModiff(this.lstTextBuffer[intJ]);
				this.setLstTextBuffer(intJ,strPrevLine+strNewline);
				this.keywordsAfterStage_sublineModiff(this.lstTextBuffer[intJ],beforeKeywords);
			}
			break;
		case 13.2:/*insertNewlines*/;
			var intJ=lstUndoOperation[1];	
			var strPrevLine=lstUndoOperation[2];	
			var lstNewlines=lstUndoOperation[3];	
			this.keywordsAfterStage_linesRemoval(lstNewlines);
			this.RemoveLines_noUndo(intJ,intJ+lstNewlines.length-1);
			break;
		case 16.1:/*paste lines before*/;
			var intJ=lstUndoOperation[1];	
			var intLines=lstUndoOperation[2].length;	
			for(var ii=0;ii<intLines;ii++){
				this.keywordsAfterStage_linesRemoval([this.lstTextBuffer[intJ]]);
				this.removeLine_noUndo(intJ);	
			}
			break;
		case 16.2:/*paste lines after*/;
			var intJ=lstUndoOperation[1];	
			var intLines=lstUndoOperation[2].length;	
			for(var ii=0;ii<intLines;ii++){
				this.keywordsAfterStage_linesRemoval([this.lstTextBuffer[intJ]]);
				this.removeLine_noUndo(intJ);	
			}
			break;
		case 16.3:/*paste chars before*/;
			var intI=lstUndoOperation[1];	
			var intJ=lstUndoOperation[2];	
			var strLine=this.lstTextBuffer[intJ];
			var strChars=lstUndoOperation[3][0];
			var intChars=strChars.length;
			var beforeKeywords=this.keywordsBeforeStage_sublineModiffPro(this.lstTextBuffer[intJ],intI,intI+strChars.length);
			this.setLstTextBuffer(intJ,strLine.substring(0,intI)+""+strLine.substring(intI+intChars));
			this.keywordsAfterStage_sublineModiffPro(this.lstTextBuffer[intJ],beforeKeywords,intI,intI);
			break;
		case 16.4:/*paste chars after*/;
			var intI=lstUndoOperation[1];	
			var intJ=lstUndoOperation[2];	
			var strLine=this.lstTextBuffer[intJ];
			var strChars=lstUndoOperation[3][0];
			var intChars=strChars.length;
			var strLine=this.lstTextBuffer[intJ];
			var beforeKeywords=this.keywordsBeforeStage_sublineModiffPro(this.lstTextBuffer[intJ],intI+1,intI+strChars.length);
			this.setLstTextBuffer(intJ,strLine.substring(0,intI+1)+""+strLine.substring(intI+intChars+1));
			this.keywordsAfterStage_sublineModiffPro(this.lstTextBuffer[intJ],beforeKeywords,intI,intI);
			break;
		case 8.1:/*insertEditingBackspace_*/
			var intI=lstUndoOperation[1];	
			var intJ=lstUndoOperation[2];	
			var chrBackspaced=lstUndoOperation[3];	
			var strLine=this.lstTextBuffer[intJ];
			var beforeKeywords=this.keywordsBeforeStage_sublineModiffPro(this.lstTextBuffer[intJ],intI-1,intI-1);
			this.setLstTextBuffer(intJ,strLine.substring(0,intI-1)+chrBackspaced+strLine.substring(intI-1));
			this.keywordsAfterStage_sublineModiffPro(this.lstTextBuffer[intJ],beforeKeywords,intI-1,intI+chrBackspaced.length-1);
			break;
		case 8.2:/*insertEditingBackspace_*/
			var intI=lstUndoOperation[1];	
			var intJ=lstUndoOperation[2];	
			var strLine=this.lstTextBuffer[intJ];
			var strPrevLine0=lstUndoOperation[3];
			var strPrevLine1=lstUndoOperation[4];
			this.insertNewline_noUndo(intJ,strPrevLine1);
			this.keywordsAfterStage_insertNewline(strPrevLine1);
			var beforeKeywords=this.keywordsBeforeStage_sublineModiff(this.lstTextBuffer[intJ-1]);
			this.setLstTextBuffer(intJ-1,strPrevLine0);
			this.keywordsAfterStage_sublineModiff(strPrevLine0,beforeKeywords);
			break;
		case 88:/*removeCharacterUnderCursor*/
			var intI=lstUndoOperation[1];	
			var intJ=lstUndoOperation[2];	
			var chrBackspaced=lstUndoOperation[3];	
			if(undefined==chrBackspaced)chrBackspaced="";
			var strLine=this.lstTextBuffer[intJ];
			var beforeKeywords=this.keywordsBeforeStage_sublineModiffPro(this.lstTextBuffer[intJ],intI,intI);
			this.setLstTextBuffer(intJ,strLine.substring(0,intI)+chrBackspaced+strLine.substring(intI));
			this.keywordsAfterStage_sublineModiffPro(this.lstTextBuffer[intJ],beforeKeywords,intI,intI+chrBackspaced.length);
			break;
		case 127.1:/*insertEditingDelete_*/
			var intI=lstUndoOperation[1];	
			var intJ=lstUndoOperation[2];	
			var strDeleted=lstUndoOperation[3];	
			var strLine=this.lstTextBuffer[intJ];
			var beforeKeywords=this.keywordsBeforeStage_sublineModiffPro(this.lstTextBuffer[intJ],intI,intI);
			this.setLstTextBuffer(intJ,strLine.substring(0,intI)+strDeleted+strLine.substring(intI));
			this.keywordsAfterStage_sublineModiffPro(this.lstTextBuffer[intJ],beforeKeywords,intI,intI+strDeleted.length);
			break;
		case 127.2:/*insertEditingDelete_*/
			var intI=lstUndoOperation[1];	
			var intJ=lstUndoOperation[2];	
			var strLine=this.lstTextBuffer[intJ];
			var strPrevLine0=lstUndoOperation[3];
			var strPrevLine1=lstUndoOperation[4];
			this.insertNewline_noUndo(intJ+1,strPrevLine1);
			this.keywordsAfterStage_insertNewline(strPrevLine1);
			var beforeKeywords=this.keywordsBeforeStage_sublineModiff(this.lstTextBuffer[intJ]);
			this.setLstTextBuffer(intJ,strPrevLine0);
			this.keywordsAfterStage_sublineModiff(strPrevLine0,beforeKeywords);
			break;
		case 128:/*removeLine*/
			var intJ=lstUndoOperation[1];	
			var strPrevLine=lstUndoOperation[2];	
			this.insertNewline_noUndo(intJ,strPrevLine);
			this.keywordsAfterStage_insertNewline(strPrevLine);
			break;
		case 128.1:/*RemoveLines*/
			var intFrom=lstUndoOperation[1];	
			var intTo=lstUndoOperation[2];
			var lstRemovedLines=lstUndoOperation[3];
			for(var j=0;j<=intTo-intFrom;j++){
				this.insertNewline_noUndo(intFrom,lstRemovedLines[lstRemovedLines.length-j-1]);
				this.keywordsAfterStage_insertNewline(lstRemovedLines[lstRemovedLines.length-j-1]);
			}
			break;
		case 128.2:/*RemoveSubline*/
		case 128.3:/*RemoveSelectedText one line selection*/
			var intJ=lstUndoOperation[1];
			var intFrom=lstUndoOperation[2];	
			var intTo=lstUndoOperation[3];
			var strRemovedSubline=lstUndoOperation[4];

			var strLine=this.lstTextBuffer[intJ];
			var beforeKeywords=this.keywordsBeforeStage_sublineModiffPro(this.lstTextBuffer[intJ],intFrom,intFrom);
			this.setLstTextBuffer(intJ,strLine.substring(0,intFrom)+strRemovedSubline+strLine.substring(intFrom));
			this.keywordsAfterStage_sublineModiffPro(this.lstTextBuffer[intJ],beforeKeywords,intFrom,intTo);
			break;
		case 128.4:/*RemoveSelectedText many lines selection*/
			var intMinJ=lstUndoOperation[1];
			var intMaxJ=lstUndoOperation[2];
			var strLineMinJ=lstUndoOperation[3];	
			var lstInnerLines=lstUndoOperation[4];	
			var strLineMaxJ=lstUndoOperation[5];	
			var beforeKeywords=this.keywordsBeforeStage_sublineModiff(this.lstTextBuffer[intMinJ]);
			this.setLstTextBuffer(intMinJ,strLineMinJ);
			this.keywordsAfterStage_sublineModiff(strLineMinJ,beforeKeywords);
			for(var j=0;j<lstInnerLines.length;j++){
				this.insertNewline_noUndo(j+intMinJ+1,lstInnerLines[j]);
				this.keywordsAfterStage_insertNewline(lstInnerLines[j]);
			}
			this.insertNewline_noUndo(intMaxJ,strLineMaxJ);
			this.keywordsAfterStage_insertNewline(strLineMaxJ);
			break;
	}
	this.setLstCursor_buffer0(lstCursorAfterUndo[0]);
	this.setLstCursor_buffer1(lstCursorAfterUndo[1]);
	this.addCursorHistoryUndoItem(false);
	this.updateWndEditing(true);
};
TextWindow.prototype.dotLast_=function(ii){
	var lstEntry=this.copyList(this.lstDotHistory[ii]);
	var lstCursorAfterUndo,lstCursorAfterRedo,lstRedoOperation;
	var lstReturn=lstEntry;
	var lstUndoEntry=this.copyListRecursive(lstEntry);
	lstCursorAfterUndo=this.copyList(lstReturn[0]);
	lstCursorAfterRedo=this.copyList(lstReturn[1]);
	var diffJ=this.lstCursor_buffer[1]-lstCursorAfterUndo[1];
	lstRedoOperation=this.copyList(lstReturn[2]);
	lstCursorAfterUndo[1]+=diffJ;	
	lstCursorAfterRedo[1]+=diffJ;	
	lstUndoEntry[0][1]+=diffJ;
	lstUndoEntry[1][1]+=diffJ;
	switch(lstRedoOperation[0]){
		case 1:/*insertEditingChar_*/
			var intI=lstRedoOperation[1];	
			var intJ=lstRedoOperation[2]+diffJ;	
			lstUndoEntry[2][2]+=diffJ;
			var strKeys=lstRedoOperation[3];
			var strLine=this.lstTextBuffer[intJ];
			var beforeKeywords=this.keywordsBeforeStage_sublineModiffPro(this.lstTextBuffer[intJ],intI,intI);
			this.setLstTextBuffer(intJ,strLine.substring(0,intI)+strKeys+strLine.substring(intI));
			this.keywordsAfterStage_sublineModiffPro(this.lstTextBuffer[intJ],beforeKeywords,intI,intI+strKeys.length);
			break;
		case 2:/*replaceEditingChar_*/
			var intI=lstRedoOperation[1];	
			var intJ=lstRedoOperation[2]+diffJ;	
			lstUndoEntry[2][2]+=diffJ;
			var strPrevKeys=lstRedoOperation[3];
			var strNextKeys=lstRedoOperation[4];
			var intLength=strNextKeys.length;
			var strLine=this.lstTextBuffer[intJ];
			var beforeKeywords=this.keywordsBeforeStage_sublineModiffPro(this.lstTextBuffer[intJ],intI,intI+strPrevKeys.length);
			this.setLstTextBuffer(intJ,strLine.substring(0,intI)+strNextKeys+strLine.substring(intI+intLength));
			this.keywordsAfterStage_sublineModiffPro(this.lstTextBuffer[intJ],beforeKeywords,intI,intI+strNextKeys.length);

			break;
		case 3:/*replaceCharacter*/
			var intI=lstRedoOperation[1];	
			var intJ=lstRedoOperation[2]+diffJ;	
			lstUndoEntry[2][2]+=diffJ;
			var chrPrevKey=lstRedoOperation[3];
			var chrNextKey=lstRedoOperation[4];
			var strLine=this.lstTextBuffer[intJ];
			var beforeKeywords=this.keywordsBeforeStage_sublineModiffPro(this.lstTextBuffer[intJ],intI,intI+chrPrevKey.length);
			this.setLstTextBuffer(intJ,strLine.substring(0,intI)+chrNextKey+strLine.substring(intI+1));
			this.keywordsAfterStage_sublineModiffPro(this.lstTextBuffer[intJ],beforeKeywords,intI,intI+chrNextKey.length);
			break;
		case 9:/*cursorPreserveIndent*/;
			var intJFrom=lstRedoOperation[1]+diffJ;	
			var intJTo=lstRedoOperation[2]+diffJ;	
			lstUndoEntry[2][1]+=diffJ;
			lstUndoEntry[2][2]+=diffJ;
			var intIndentSize=lstRedoOperation[3];	
			this.cursorPreserveIndent_noUndo(intJFrom,intJTo);
			break;
		case 13:/*insertNewline*/;
			var intJ=lstRedoOperation[1]+diffJ;	
			lstUndoEntry[2][1]+=diffJ;
			var strPrevLine=lstRedoOperation[2];	
			var strNewline=lstRedoOperation[3];	
			if(intJ>0){
				var beforeKeywords=this.keywordsBeforeStage_sublineModiff(this.lstTextBuffer[intJ-1]);
				this.setLstTextBuffer(intJ-1,strPrevLine);
				this.keywordsAfterStage_sublineModiff(strPrevLine,beforeKeywords);
			}
			this.insertNewline_noUndo(intJ,strNewline);
			this.keywordsAfterStage_insertNewline(strNewline);
			break;
		case 13.1:/*prependNewline*/;
			var intJ=lstRedoOperation[1]+diffJ;	
			lstUndoEntry[2][1]+=diffJ;
			var strPrevLine=lstRedoOperation[2];	
			var strNewline=lstRedoOperation[3];	
			if(intJ>0){
				var beforeKeywords=this.keywordsBeforeStage_sublineModiff(this.lstTextBuffer[intJ]);
				this.setLstTextBuffer(intJ,strPrevLine);
				this.keywordsAfterStage_sublineModiff(this.lstTextBuffer[intJ],beforeKeywords);
			}
			this.insertNewline_noUndo(intJ,strNewline);
			this.keywordsAfterStage_insertNewline(strNewline);
			break;
		case 13.2:/*insertNewlines*/;
			var intJ=lstRedoOperation[1]+diffJ;	
			lstUndoEntry[2][1]+=diffJ;
			var strPrevLine=lstRedoOperation[2];	
			var lstNewlines=lstRedoOperation[3];	
			this.insertNewlines_noUndo(intJ,lstNewlines);
			this.keywordsAfterStage_insertNewlines(lstNewlines);
			break;
		case 16.1:
			var intJ=lstRedoOperation[1]+diffJ;	
			lstUndoEntry[2][1]+=diffJ;
			var lstBuffer=lstRedoOperation[2];
			var intLines=lstBuffer.length;	
			var strLine;
			for(var ii=0;ii<intLines;ii++){
				strLine=lstBuffer[lstBuffer.length-1-ii][0];
				if(undefined!=strLine){
					this.insertNewline_noUndo(intJ,strLine);
					this.keywordsAfterStage_insertNewline(strLine);
				}
			}
			break;
		case 16.2:
			var intJ=lstRedoOperation[1]+diffJ;	
			lstUndoEntry[2][1]+=diffJ;
			var lstBuffer=lstRedoOperation[2];
			var intLines=lstBuffer.length;	
			var strLine;
			for(var ii=0;ii<intLines;ii++){
				strLine=lstBuffer[ii][0];
				if(undefined!=strLine){
					this.insertNewline_noUndo(intJ+ii,strLine);
					this.keywordsAfterStage_insertNewline(strLine);
				}
			}
			break;
		case 16.3:/*paste chars before*/;
			var intI=lstRedoOperation[1];	
			var intJ=lstRedoOperation[2]+diffJ;	
			lstUndoEntry[2][2]+=diffJ;
			var strBuffer=lstRedoOperation[3][0];
			var intChars=strBuffer.length;	
			var strLine=this.lstTextBuffer[intJ];
			var beforeKeywords=this.keywordsBeforeStage_sublineModiffPro(this.lstTextBuffer[intJ],intI,intI);
			this.setLstTextBuffer(intJ,strLine.substring(0,intI)+strBuffer+strLine.substring(intI));
			this.keywordsAfterStage_sublineModiffPro(this.lstTextBuffer[intJ],beforeKeywords,intI,intI+strBuffer.length);
			break;
		case 16.4:/*paste chars after*/;
			var intI=lstRedoOperation[1];	
			var intJ=lstRedoOperation[2]+diffJ;	
			lstUndoEntry[2][2]+=diffJ;
			var strBuffer=lstRedoOperation[3][0];
			var intChars=strBuffer.length;	
			var strLine=this.lstTextBuffer[intJ];
			var beforeKeywords=this.keywordsBeforeStage_sublineModiffPro(this.lstTextBuffer[intJ],intI,intI);
			this.setLstTextBuffer(intJ,strLine.substring(0,intI+1)+strBuffer+strLine.substring(intI+1));
			this.keywordsAfterStage_sublineModiffPro(this.lstTextBuffer[intJ],beforeKeywords,intI+1,intI+strBuffer.length);
			break;
		case 8.1:/*insertEditingBackspace_*/
			var intI=lstRedoOperation[1];	
			var intJ=lstRedoOperation[2]+diffJ;	
			lstUndoEntry[2][2]+=diffJ;
			var chrBackspaced=lstRedoOperation[3];	
			var strLine=this.lstTextBuffer[intJ];
			var beforeKeywords=this.keywordsBeforeStage_sublineModiffPro(this.lstTextBuffer[intJ],intI-1,intI+chrBackspaced.length-1);
			this.setLstTextBuffer(intJ,strLine.substring(0,intI-1)+strLine.substring(intI+chrBackspaced.length-1));
			this.keywordsAfterStage_sublineModiffPro(this.lstTextBuffer[intJ],beforeKeywords,intI-1,intI-1);
			break;
		case 8.2:/*insertEditingBackspace_*/
			var intI=lstRedoOperation[1];	
			var intJ=lstRedoOperation[2]+diffJ;	
			lstUndoEntry[2][2]+=diffJ;
			var strLine=this.lstTextBuffer[intJ];
			var strPrevLine1=lstRedoOperation[4];

			var beforeKeywords=this.keywordsBeforeStage_sublineModiff(this.lstTextBuffer[intJ-1]);
			this.setLstTextBuffer(intJ-1,this.lstTextBuffer[intJ-1]+""+strPrevLine1);
			this.keywordsAfterStage_sublineModiff(this.lstTextBuffer[intJ-1],beforeKeywords);
			this.keywordsAfterStage_linesRemoval([this.lstTextBuffer[intJ]]);
			this.removeLine_noUndo(intJ);
			break;
		case 88:/*removeCharacterUnderCursor*/
			var intI=lstRedoOperation[1];
			var intJ=lstRedoOperation[2]+diffJ;	
			lstUndoEntry[2][2]+=diffJ;
			var chrBackspaced=lstRedoOperation[3];	
			var strLine=this.lstTextBuffer[intJ];
			var beforeKeywords=this.keywordsBeforeStage_sublineModiffPro(this.lstTextBuffer[intJ],intI,intI+chrBackspaced.length);
			this.setLstTextBuffer(intJ,strLine.substring(0,intI)+strLine.substring(intI+1));
			this.keywordsAfterStage_sublineModiffPro(this.lstTextBuffer[intJ],beforeKeywords,intI,intI);
			break;
		case 127.1:/*insertEditingDelete_*/
			var intI=lstRedoOperation[1];	
			var intJ=lstRedoOperation[2]+diffJ;	
			lstUndoEntry[2][2]+=diffJ;
			var strDeleted=lstRedoOperation[3];	
			var strLine=this.lstTextBuffer[intJ];
			var beforeKeywords=this.keywordsBeforeStage_sublineModiffPro(this.lstTextBuffer[intJ],intI,intI+strDeleted.length);
			this.setLstTextBuffer(intJ,strLine.substring(0,intI)+strLine.substring(intI+strDeleted.length));
			this.keywordsAfterStage_sublineModiffPro(this.lstTextBuffer[intJ],beforeKeywords,intI,intI);
	
			break;
		case 127.2:/*insertEditingDelete_*/
			var intI=lstRedoOperation[1];	
			var intJ=lstRedoOperation[2]+diffJ;	
			lstUndoEntry[2][2]+=diffJ;
			var strLine=this.lstTextBuffer[intJ];
			var beforeKeywords=this.keywordsBeforeStage_sublineModiff(this.lstTextBuffer[intJ]);
			this.setLstTextBuffer(intJ,strLine+this.lstTextBuffer[intJ+1]);
			this.keywordsAfterStage_sublineModiff(this.lstTextBuffer[intJ],beforeKeywords);
			this.keywordsAfterStage_linesRemoval([this.lstTextBuffer[intJ+1]]);
			this.removeLine_noUndo(intJ+1);
			break;
		case 128:/*removeLine*/
			var intJ=lstRedoOperation[1]+diffJ;	
			lstUndoEntry[2][1]+=diffJ;
			this.keywordsAfterStage_linesRemoval([this.lstTextBuffer[intJ]]);
			this.removeLine_noUndo(intJ);
			break;
		case 128.1:/*RemoveLines*/
			var intFrom=lstRedoOperation[1]+diffJ;	
			var intTo=lstRedoOperation[2]+diffJ;
			lstUndoEntry[2][1]+=diffJ;
			lstUndoEntry[2][2]+=diffJ;
			for(var j=0;j<=intTo-intFrom;j++){
				this.keywordsAfterStage_linesRemoval([this.lstTextBuffer[intFrom]]);
				this.removeLine_noUndo(intFrom);
			}
			break;
		case 128.2:/*RemoveSubline*/
		case 128.3:/*RemoveSelectedText one line selection*/
			var intJ=lstRedoOperation[1]+diffJ;
			lstUndoEntry[2][1]+=diffJ;
			var intFrom=lstRedoOperation[2];	
			var intTo=lstRedoOperation[3];
			var strRemovedSubline=lstRedoOperation[4];
			var strLine=this.lstTextBuffer[intJ];
			var beforeKeywords=this.keywordsBeforeStage_sublineModiffPro(this.lstTextBuffer[intJ],intFrom,intTo);
			this.setLstTextBuffer(intJ,strLine.substring(0,intFrom)+""+strLine.substring(intTo+1));
			this.keywordsAfterStage_sublineModiffPro(this.lstTextBuffer[intJ],beforeKeywords,intFrom,intFrom);
			break;
		case 128.4:/*RemoveSelectedText many lines selection*/
			var intMinJ=lstRedoOperation[1]+diffJ;
			var intMaxJ=lstRedoOperation[2]+diffJ;
			lstUndoEntry[2][1]+=diffJ;
			lstUndoEntry[2][2]+=diffJ;
			var strLineAfter=lstRedoOperation[6];	
			var beforeKeywords=this.keywordsBeforeStage_sublineModiff(this.lstTextBuffer[intMinJ]);
			this.setLstTextBuffer(intMinJ,strLineAfter);
			this.keywordsAfterStage_sublineModiff(strLineAfter,beforeKeywords);
			for(var j=1;j<=intMaxJ-intMinJ;j++){
				this.keywordsAfterStage_linesRemoval([this.lstTextBuffer[intMinJ+1]]);
				this.removeLine_noUndo(intMinJ+1);
			}
			break;
	}
	this.setLstCursor_buffer0(lstCursorAfterRedo[0]);
	this.setLstCursor_buffer1(lstCursorAfterRedo[1]);
	this.addCursorHistoryUndoItem(false);
	this.addUndoItem_fromRedo(lstUndoEntry);
	this.updateWndEditing(true);
};
TextWindow.prototype.dotLast=function(){
	if(-1==this.intUndoRedoLimit){
		this.theSuper.setStatus("-1==intUndoRedoLimit e.x. :set intUndoRedoLimit=1000");
		return;
	}
	if(0==this.lstDotHistory.length)return;
	for(var ii=this.lstDotHistory.length-1;ii>=0;ii--){
		this.dotLast_(ii);
	};
};
TextWindow.prototype.redoLast=function(){
	if(-1==this.intUndoRedoLimit){
		this.theSuper.setStatus("-1==intUndoRedoLimit e.x. :set intUndoRedoLimit=1000");
		return;
	}
	if(0==this.lstRedoHistory.length)return;
	var lstEntry=this.lstRedoHistory.pop();
	this.addUndoItem_dontClearRedo(lstEntry);
	var lstCursorAfterRedo,lstRedoOperation;
	var lstReturn=lstEntry;
	lstCursorAfterUndo=lstReturn[0];
	lstCursorAfterRedo=lstReturn[1];
	lstRedoOperation=lstReturn[2];
	switch(lstRedoOperation[0]){
		case 1:/*insertEditingChar_*/
			var intI=lstRedoOperation[1];	
			var intJ=lstRedoOperation[2];	
			var strKeys=lstRedoOperation[3];
			var strLine=this.lstTextBuffer[intJ];
			var beforeKeywords=this.keywordsBeforeStage_sublineModiffPro(this.lstTextBuffer[intJ],intI,intI);
			this.setLstTextBuffer(intJ,strLine.substring(0,intI)+strKeys+strLine.substring(intI));
			this.keywordsAfterStage_sublineModiffPro(this.lstTextBuffer[intJ],beforeKeywords,intI,intI+strKeys.length);
			break;
		case 2:/*replaceEditingChar_*/
			var intI=lstRedoOperation[1];	
			var intJ=lstRedoOperation[2];	
			var strPrevKeys=lstRedoOperation[3];
			var strNextKeys=lstRedoOperation[4];
			var intLength=strNextKeys.length;
			var strLine=this.lstTextBuffer[intJ];
			var beforeKeywords=this.keywordsBeforeStage_sublineModiffPro(this.lstTextBuffer[intJ],intI,intI+strPrevKeys.length);
			this.setLstTextBuffer(intJ,strLine.substring(0,intI)+strNextKeys+strLine.substring(intI+intLength));
			this.keywordsAfterStage_sublineModiffPro(this.lstTextBuffer[intJ],beforeKeywords,intI,intI+strNextKeys.length);

			break;
		case 3:/*replaceCharacter*/
			var intI=lstRedoOperation[1];	
			var intJ=lstRedoOperation[2];	
			var chrPrevKey=lstRedoOperation[3];
			var chrNextKey=lstRedoOperation[4];
			var strLine=this.lstTextBuffer[intJ];
			var beforeKeywords=this.keywordsBeforeStage_sublineModiffPro(this.lstTextBuffer[intJ],intI,intI+chrPrevKey.length);
			this.setLstTextBuffer(intJ,strLine.substring(0,intI)+chrNextKey+strLine.substring(intI+1));
			this.keywordsAfterStage_sublineModiffPro(this.lstTextBuffer[intJ],beforeKeywords,intI,intI+chrNextKey.length);
			break;
		case 9:/*cursorPreserveIndent*/;
			var intJFrom=lstRedoOperation[1];	
			var intJTo=lstRedoOperation[2];	
			var intIndentSize=lstRedoOperation[3];	
			this.cursorPreserveIndent_noUndo(intJFrom,intJTo);
			break;
		case 13:/*insertNewline*/;
			var intJ=lstRedoOperation[1];	
			var strPrevLine=lstRedoOperation[2];	
			var strNewline=lstRedoOperation[3];	
			if(intJ>0){
				var beforeKeywords=this.keywordsBeforeStage_sublineModiff(this.lstTextBuffer[intJ-1]);
				this.setLstTextBuffer(intJ-1,strPrevLine);
				this.keywordsAfterStage_sublineModiff(strPrevLine,beforeKeywords);
			}
			this.insertNewline_noUndo(intJ,strNewline);
			this.keywordsAfterStage_insertNewline(strNewline);
			break;
		case 13.1:/*prependNewline*/;
			var intJ=lstRedoOperation[1];	
			var strPrevLine=lstRedoOperation[2];	
			var strNewline=lstRedoOperation[3];	
			if(intJ>0){
				var beforeKeywords=this.keywordsBeforeStage_sublineModiff(this.lstTextBuffer[intJ]);
				this.setLstTextBuffer(intJ,strPrevLine);
				this.keywordsAfterStage_sublineModiff(this.lstTextBuffer[intJ],beforeKeywords);
			}
			this.insertNewline_noUndo(intJ,strNewline);
			this.keywordsAfterStage_insertNewline(strNewline);
			break;
		case 13.2:/*insertNewlines*/;
			var intJ=lstRedoOperation[1];	
			var strPrevLine=lstRedoOperation[2];	
			var lstNewlines=lstRedoOperation[3];	
			this.insertNewlines_noUndo(intJ,lstNewlines);
			this.keywordsAfterStage_insertNewlines(lstNewlines);
			break;
		case 16.1:
			var intJ=lstRedoOperation[1];	
			var lstBuffer=lstRedoOperation[2];
			var intLines=lstBuffer.length;	
			var strLine;
			for(var ii=0;ii<intLines;ii++){
				strLine=lstBuffer[lstBuffer.length-1-ii][0];
				if(undefined!=strLine){
					this.insertNewline_noUndo(intJ,strLine);
					this.keywordsAfterStage_insertNewline(strLine);
				}
			}
			break;
		case 16.2:
			var intJ=lstRedoOperation[1];	
			var lstBuffer=lstRedoOperation[2];
			var intLines=lstBuffer.length;	
			var strLine;
			for(var ii=0;ii<intLines;ii++){
				strLine=lstBuffer[ii][0];
				if(undefined!=strLine){
					this.insertNewline_noUndo(intJ+ii,strLine);
					this.keywordsAfterStage_insertNewline(strLine);
				}
			}
			break;
		case 16.3:/*paste chars before*/;
			var intI=lstRedoOperation[1];	
			var intJ=lstRedoOperation[2];	
			var strBuffer=lstRedoOperation[3][0];
			var intChars=strBuffer.length;	
			var strLine=this.lstTextBuffer[intJ];
			var beforeKeywords=this.keywordsBeforeStage_sublineModiffPro(this.lstTextBuffer[intJ],intI,intI);
			this.setLstTextBuffer(intJ,strLine.substring(0,intI)+strBuffer+strLine.substring(intI));
			this.keywordsAfterStage_sublineModiffPro(this.lstTextBuffer[intJ],beforeKeywords,intI,intI+strBuffer.length);
			break;
		case 16.4:/*paste chars after*/;
			var intI=lstRedoOperation[1];	
			var intJ=lstRedoOperation[2];	
			var strBuffer=lstRedoOperation[3][0];
			var intChars=strBuffer.length;	
			var strLine=this.lstTextBuffer[intJ];
			var beforeKeywords=this.keywordsBeforeStage_sublineModiffPro(this.lstTextBuffer[intJ],intI,intI);
			this.setLstTextBuffer(intJ,strLine.substring(0,intI+1)+strBuffer+strLine.substring(intI+1));
			this.keywordsAfterStage_sublineModiffPro(this.lstTextBuffer[intJ],beforeKeywords,intI+1,intI+strBuffer.length);
			break;
		case 8.1:/*insertEditingBackspace_*/
			var intI=lstRedoOperation[1];	
			var intJ=lstRedoOperation[2];	
			var chrBackspaced=lstRedoOperation[3];	
			var strLine=this.lstTextBuffer[intJ];
			var beforeKeywords=this.keywordsBeforeStage_sublineModiffPro(this.lstTextBuffer[intJ],intI-1,intI+chrBackspaced.length-1);
			this.setLstTextBuffer(intJ,strLine.substring(0,intI-1)+strLine.substring(intI+chrBackspaced.length-1));
			this.keywordsAfterStage_sublineModiffPro(this.lstTextBuffer[intJ],beforeKeywords,intI-1,intI-1);
			break;
		case 8.2:/*insertEditingBackspace_*/
			var intI=lstRedoOperation[1];	
			var intJ=lstRedoOperation[2];	
			var strLine=this.lstTextBuffer[intJ];
			var strPrevLine1=lstRedoOperation[4];

			var beforeKeywords=this.keywordsBeforeStage_sublineModiff(this.lstTextBuffer[intJ-1]);
			this.setLstTextBuffer(intJ-1,this.lstTextBuffer[intJ-1]+""+strPrevLine1);
			this.keywordsAfterStage_sublineModiff(this.lstTextBuffer[intJ-1],beforeKeywords);
			this.keywordsAfterStage_linesRemoval([this.lstTextBuffer[intJ]]);
			this.removeLine_noUndo(intJ);
			break;
		case 88:/*removeCharacterUnderCursor*/
			var intI=lstRedoOperation[1];
			var intJ=lstRedoOperation[2];	
			var chrBackspaced=lstRedoOperation[3];	
			var strLine=this.lstTextBuffer[intJ];
			var beforeKeywords=this.keywordsBeforeStage_sublineModiffPro(this.lstTextBuffer[intJ],intI,intI+chrBackspaced.length);
			this.setLstTextBuffer(intJ,strLine.substring(0,intI)+strLine.substring(intI+1));
			this.keywordsAfterStage_sublineModiffPro(this.lstTextBuffer[intJ],beforeKeywords,intI,intI);
			break;
		case 127.1:/*insertEditingDelete_*/
			var intI=lstRedoOperation[1];	
			var intJ=lstRedoOperation[2];	
			var strDeleted=lstRedoOperation[3];	
			var strLine=this.lstTextBuffer[intJ];
			var beforeKeywords=this.keywordsBeforeStage_sublineModiffPro(this.lstTextBuffer[intJ],intI,intI+strDeleted.length);
			this.setLstTextBuffer(intJ,strLine.substring(0,intI)+strLine.substring(intI+strDeleted.length));
			this.keywordsAfterStage_sublineModiffPro(this.lstTextBuffer[intJ],beforeKeywords,intI,intI);
	
			break;
		case 127.2:/*insertEditingDelete_*/
			var intI=lstRedoOperation[1];	
			var intJ=lstRedoOperation[2];	
			var strLine=this.lstTextBuffer[intJ];
			var beforeKeywords=this.keywordsBeforeStage_sublineModiff(this.lstTextBuffer[intJ]);
			this.setLstTextBuffer(intJ,strLine+this.lstTextBuffer[intJ+1]);
			this.keywordsAfterStage_sublineModiff(this.lstTextBuffer[intJ],beforeKeywords);
			this.keywordsAfterStage_linesRemoval([this.lstTextBuffer[intJ+1]]);
			this.removeLine_noUndo(intJ+1);
			break;
		case 128:/*removeLine*/
			var intJ=lstRedoOperation[1];	
			this.keywordsAfterStage_linesRemoval([this.lstTextBuffer[intJ]]);
			this.removeLine_noUndo(intJ);
			break;
		case 128.1:/*RemoveLines*/
			var intFrom=lstRedoOperation[1];	
			var intTo=lstRedoOperation[2];
			for(var j=0;j<=intTo-intFrom;j++){
				this.keywordsAfterStage_linesRemoval([this.lstTextBuffer[intFrom]]);
				this.removeLine_noUndo(intFrom);
			}
			break;
		case 128.2:/*RemoveSubline*/
		case 128.3:/*RemoveSelectedText one line selection*/
			var intJ=lstRedoOperation[1];
			var intFrom=lstRedoOperation[2];	
			var intTo=lstRedoOperation[3];
			var strRemovedSubline=lstRedoOperation[4];
			var strLine=this.lstTextBuffer[intJ];
			var beforeKeywords=this.keywordsBeforeStage_sublineModiffPro(this.lstTextBuffer[intJ],intFrom,intTo);
			this.setLstTextBuffer(intJ,strLine.substring(0,intFrom)+""+strLine.substring(intTo+1));
			this.keywordsAfterStage_sublineModiffPro(this.lstTextBuffer[intJ],beforeKeywords,intFrom,intFrom);
			break;
		case 128.4:/*RemoveSelectedText many lines selection*/
			var intMinJ=lstRedoOperation[1];
			var intMaxJ=lstRedoOperation[2];
			var strLineAfter=lstRedoOperation[6];	
			var beforeKeywords=this.keywordsBeforeStage_sublineModiff(this.lstTextBuffer[intMinJ]);
			this.setLstTextBuffer(intMinJ,strLineAfter);
			this.keywordsAfterStage_sublineModiff(strLineAfter,beforeKeywords);
			for(var j=1;j<=intMaxJ-intMinJ;j++){
				this.keywordsAfterStage_linesRemoval([this.lstTextBuffer[intMinJ+1]]);
				this.removeLine_noUndo(intMinJ+1);
			}
			break;
	}
	this.setLstCursor_buffer0(lstCursorAfterRedo[0]);
	this.setLstCursor_buffer1(lstCursorAfterRedo[1]);
	this.addCursorHistoryUndoItem(false);
	this.updateWndEditing(true);
};
TextWindow.prototype.prependNewline=function(intJ,strNewline){
	this.addUndoItem([[this.lstCursor_buffer[0],this.lstCursor_buffer[1]],[this.lstCursor_buffer[0],this.lstCursor_buffer[1]],[13.1,intJ,this.lstTextBuffer[this.lstCursor_buffer[1]]+"",strNewline]]);
	this.keywordsAfterStage_insertNewline(strNewline);
	this.lstTextBuffer.push(this.lstTextBuffer[this.lstTextBuffer.length-1]);
	for(var j=this.lstTextBuffer.length-2;j>=intJ;j--){
		this.setLstTextBuffer(j+1,this.lstTextBuffer[j]);
	}
	/*this.blnModiff=true;*/
	this.setLstTextBuffer(intJ,strNewline);
};
TextWindow.prototype.insertNewline=function(intJ,strNewline){
	this.addUndoItem([[this.lstCursor_buffer[0],this.lstCursor_buffer[1]],[0,this.lstCursor_buffer[1]+1],[13,intJ,this.lstTextBuffer[this.lstCursor_buffer[1]]+"",strNewline]]);
	this.keywordsAfterStage_insertNewline(strNewline);
	this.pushLstTextBuffer(this.lstTextBuffer[this.lstTextBuffer.length-1]);
	for(var j=this.lstTextBuffer.length-2;j>=intJ;j--){
		this.setLstTextBuffer_ref(j+1,this.lstTextBuffer[j]);
	}
	/*this.blnModiff=true;*/
	this.setLstTextBuffer(intJ,strNewline);
};

TextWindow.prototype.insertNewline_fastCruncher=function(intJ,strNewline){
	netspace.wndEditing.pushLstTextBuffer_fastCruncher(netspace.wndEditing.lstTextBuffer_fastCruncher[this.lstTextBuffer.length-1]);
	for(var j=netspace.wndEditing.lstTextBuffer_fastCruncher.length-2;j>=intJ;j--){
		netspace.wndEditing.setLstTextBuffer_fastCruncher_ref(j+1,netspace.wndEditing.lstTextBuffer_fastCruncher[j]);
	}
	netspace.wndEditing.setLstTextBuffer_fastCruncher(intJ,strNewline);
};
TextWindow.prototype.insertNewline_noUndo=function(intJ,strNewline){
	this.pushLstTextBuffer(this.lstTextBuffer[this.lstTextBuffer.length-1]);
	for(var j=this.lstTextBuffer.length-2;j>=intJ;j--){
		this.setLstTextBuffer_ref(j+1,this.lstTextBuffer[j]);
	}
	/*this.blnModiff=true;*/
	this.setLstTextBuffer(intJ,strNewline);
};
TextWindow.prototype.insertNewlines=function(intJ,lstNewlines){
	this.addUndoItem([[this.lstCursor_buffer[0],this.lstCursor_buffer[1]],[0,this.lstCursor_buffer[1]+lstNewlines.length],[13.2,intJ,this.lstTextBuffer[this.lstCursor_buffer[1]]+"",lstNewlines]]);
	this.keywordsAfterStage_insertNewlines(lstNewlines);
	for(var j=0;j<lstNewlines.length;j++){
		this.insertNewline_noUndo(intJ+j,lstNewlines[j]);
	}
};
TextWindow.prototype.insertNewlines_noUndo=function(intJ,lstNewlines){
	for(var j=0;j<lstNewlines.length;j++){
		this.insertNewline_noUndo(intJ+j,lstNewlines[j]);
	}
};
TextWindow.prototype.removeLine=function(intJ){
	this.addUndoItem([[this.lstCursor_buffer[0],this.lstCursor_buffer[1]],[this.lstCursor_buffer[0],this.lstCursor_buffer[1]],[128,intJ,""+this.lstTextBuffer[intJ]]]);
	this.keywordsAfterStage_linesRemoval([""+this.lstTextBuffer[intJ]]);
	for(var j=intJ;j<this.lstTextBuffer.length-1;j++){
		this.setLstTextBuffer_ref(j,this.lstTextBuffer[j+1]);	
	};
	this.lstTextBuffer.splice(this.lstTextBuffer.length-1,1);
	if(0==this.lstTextBuffer.length)
		this.pushLstTextBuffer("");
	/*this.blnModiff=true;*/
};
TextWindow.prototype.removeLine_noKeywords=function(intJ){
	this.addUndoItem([[this.lstCursor_buffer[0],this.lstCursor_buffer[1]],[this.lstCursor_buffer[0],this.lstCursor_buffer[1]],[128,intJ,""+this.lstTextBuffer[intJ]]]);
	for(var j=intJ;j<this.lstTextBuffer.length-1;j++){
		this.setLstTextBuffer_ref(j,this.lstTextBuffer[j+1]);	
	};
	this.lstTextBuffer.splice(this.lstTextBuffer.length-1,1);
	if(0==this.lstTextBuffer.length)
		this.pushLstTextBuffer("");
	/*this.blnModiff=true;*/
};
TextWindow.prototype.removeLine_noUndo=function(intJ){
	for(var j=intJ;j<this.lstTextBuffer.length-1;j++){
		this.setLstTextBuffer_ref(j,this.lstTextBuffer[j+1]);	
	};
	this.lstTextBuffer.splice(this.lstTextBuffer.length-1,1);
	if(0==this.lstTextBuffer.length)
		this.pushLstTextBuffer("");
	/*this.blnModiff=true;*/
};


TextWindow.prototype.removeLine_fastCruncher=function(intJ){
	for(var j=intJ;j<netspace.wndEditing.lstTextBuffer_fastCruncher.length-1;j++){
		netspace.wndEditing.setLstTextBuffer_fastCruncher_ref(j,netspace.wndEditing.lstTextBuffer_fastCruncher[j+1]);	
	};
	netspace.wndEditing.lstTextBuffer_fastCruncher.splice(netspace.wndEditing.lstTextBuffer_fastCruncher.length-1,1);
	if(0==netspace.wndEditing.lstTextBuffer_fastCruncher.length)
		netspace.wndEditing.pushLstTextBuffer_fastCruncher("");
	/*netspace.wndEditing.blnModiff=true;*/
};

TextWindow.prototype.indentSizeToPreserve=function(intJFrom){
	var strLine=this.lstTextBuffer[intJFrom];
	var ii;
	if(undefined==strLine)
		ii=0;
	else{
		for (ii=0;ii<strLine.length;ii++)
			if(String.fromCharCode(9)!=strLine[ii]&&String.fromCharCode(32)!=strLine[ii])
				break;
	}
	return ii;
};

TextWindow.prototype.indentSizeToPreserve_fastCruncher=function(intJFrom){
	var strLine=netspace.wndEditing.lstTextBuffer_fastCruncher[intJFrom];
	var ii;
	if(undefined==strLine)
		ii=0;
	else{
		for (ii=0;ii<strLine.length;ii++)
			if(String.fromCharCode(9)!=strLine[ii]&&String.fromCharCode(32)!=strLine[ii])
				break;
	}
	return ii;
};

TextWindow.prototype.indentWhitespacesToPreserve=function(intJFrom){
	var strLine=this.lstTextBuffer[intJFrom];
	var strTabs="";
	if(undefined==strLine)
		return "";
	
	else{
		for (var ii=0;ii<strLine.length;ii++)
			if(String.fromCharCode(9)==strLine[ii]||String.fromCharCode(32)==strLine[ii])
				strTabs+=strLine[ii];
			else return strTabs;
	}
	return strTabs;
};
TextWindow.prototype.cursorPreserveIndent=function(intJFrom,intJTo){
	var strIndent="";
	var strLine=this.lstTextBuffer[intJFrom];
	var ii;
	if(undefined==strLine){
		ii=0;
		strIndent="";
	}
	else{
		for (ii=0;ii<strLine.length;ii++)
			if(String.fromCharCode(9)==strLine[ii]||String.fromCharCode(32)==strLine[ii])
				strIndent+=strLine[ii];
			else break;
	}
	this.setLstCursor_buffer0(ii);
	if(undefined!=this.lstTextBuffer[intJTo])
		this.setLstTextBuffer(intJTo,strIndent+this.lstTextBuffer[intJTo]);
	/*this.blnModiff=true;*/
	this.addUndoItem([[0,intJTo],[ii,intJTo],[9,intJFrom,intJTo,ii]]);

};

TextWindow.prototype.cursorPreserveIndent_fastCruncher=function(intJFrom,intJTo){
	var strIndent="";
	var strLine=netspace.wndEditing.lstTextBuffer_fastCruncher[intJFrom];
	var ii;
	if(undefined==strLine){
		ii=0;
		strIndent="";
	}
	else{
		for (ii=0;ii<strLine.length;ii++)
			if(String.fromCharCode(9)==strLine[ii]||String.fromCharCode(32)==strLine[ii])
				strIndent+=strLine[ii];
			else break;
	}
	netspace.wndEditing.setLstCursor_buffer0_fastCruncher(ii);
	if(undefined!=netspace.wndEditing.lstTextBuffer_fastCruncher[intJTo])
		netspace.wndEditing.setLstTextBuffer_fastCruncher(intJTo,strIndent+netspace.wndEditing.lstTextBuffer_fastCruncher[intJTo]);

};

TextWindow.prototype.cursorPreserveIndent_noUndo=function(intJFrom,intJTo){
	var strIndent="";
	var strLine=this.lstTextBuffer[intJFrom];
	var ii;
	if(undefined==strLine){
		ii=0;
		strIndent="";
	}
	else{
		for (ii=0;ii<strLine.length;ii++)
			if(String.fromCharCode(9)==strLine[ii]||String.fromCharCode(32)==strLine[ii])
				strIndent+=strLine[ii];
			else break;
	}
	this.setLstCursor_buffer0(ii);
	if(undefined!=this.lstTextBuffer[intJTo])
		this.setLstTextBuffer(intJTo,strIndent+this.lstTextBuffer[intJTo]);
	/*this.blnModiff=true;*/
};
TextWindow.prototype.setInsertMode=function(chrInsert){
	this.theSuper.setMode(1);
	if("I"==chrInsert)
		this.setLstCursor_buffer0(this.indentSizeToPreserve(this.lstCursor_buffer[1]));
	this.updateWndEditing(true);
};	
TextWindow.prototype.setAppendMode=function(chrAppend){
	this.theSuper.setMode(1);
	var strLine=this.lstTextBuffer[this.lstCursor_buffer[1]];
	if("a"==chrAppend)
		this.setLstCursor_buffer0(this.lstCursor_buffer[0]+1);
	if("A"==chrAppend)
		this.setLstCursor_buffer0(strLine.length);
	this.updateWndEditing(true);
};
TextWindow.prototype.setReplaceMode=function(){
	this.theSuper.setMode(1);
	this.blnReplaceMode=true;
};
TextWindow.prototype.AppendNewline=function(){
	this.insertNewline(this.lstCursor_buffer[1]+1,"");	
	this.setLstCursor_buffer1(this.lstCursor_buffer[1]+1);
	this.setInsertMode("I");
	this.cursorPreserveIndent(this.lstCursor_buffer[1]-1,this.lstCursor_buffer[1]);
	this.updateWndEditing(true);

};
TextWindow.prototype.PrependNewline=function(){
	this.prependNewline(this.lstCursor_buffer[1],"");	
	this.setInsertMode("I");
	this.cursorPreserveIndent(this.lstCursor_buffer[1]+1,this.lstCursor_buffer[1]);
	this.updateWndEditing(true);
};
TextWindow.prototype.RemoveLine=function(){
	this.setLstCursor_buffer0(this.indentSizeToPreserve(this.lstCursor_buffer[1]+1));
	this.removeLine(this.lstCursor_buffer[1]);
	if(this.lstCursor_buffer[1]>=this.lstTextBuffer.length)
		this.setLstCursor_buffer1(this.lstCursor_buffer[1]-1);
	this.updateWndEditing(true);
};
TextWindow.prototype.RemoveLinesMark=function(intFrom,intTo){
	var lstRemovedLines=[];
	var lstCursorBefore=this.copyList(this.lstCursor_buffer);
	for(var j=intFrom;j<=intTo;j++){
		lstRemovedLines.push(""+this.lstTextBuffer[intFrom]);
		this.removeLine_noUndo(intFrom);
	}
	var theLstCursor_buffer1=this.lstCursor_buffer[1]-(lstRemovedLines.length-1);
	if(theLstCursor_buffer1<0)theLstCursor_buffer1=0;
	if(theLstCursor_buffer1>=this.lstTextBuffer.length){
		theLstCursor_buffer1=-(this.lstTextBuffer.length-theLstCursor_buffer1+1);
	}
	this.setLstCursor_buffer1(theLstCursor_buffer1);
	this.setLstCursor_buffer0(this.indentSizeToPreserve(this.lstCursor_buffer[1]));
	var lstCursorAfter=this.copyList(this.lstCursor_buffer);
	this.addUndoItem([lstCursorBefore,lstCursorAfter,[128.1,intFrom,intTo,lstRemovedLines]]);
	this.keywordsAfterStage_linesRemoval(lstRemovedLines);
	this.updateWndEditing(true);
};
TextWindow.prototype.RemoveLines=function(intFrom,intTo){
	var lstRemovedLines=[];
	var lstCursorBefore=this.copyList(this.lstCursor_buffer);
	for(var j=intFrom;j<=intTo;j++){
		lstRemovedLines.push(""+this.lstTextBuffer[intFrom]);
		this.removeLine_noUndo(intFrom);
	}
	if(this.lstCursor_buffer[1]<0)this.setLstCursor_buffer1(0);
	if(this.lstCursor_buffer[1]>=this.lstTextBuffer.length)
		this.setLstCursor_buffer1(this.lstCursor_buffer[1]-(this.lstTextBuffer.length-this.lstCursor_buffer[1]+1));
	this.setLstCursor_buffer0(this.indentSizeToPreserve(this.lstCursor_buffer[1]));
	var lstCursorAfter=this.copyList(this.lstCursor_buffer);
	this.addUndoItem([lstCursorBefore,lstCursorAfter,[128.1,intFrom,intTo,lstRemovedLines]]);
	this.keywordsAfterStage_linesRemoval(lstRemovedLines);
	this.updateWndEditing(true);
};
TextWindow.prototype.RemoveLines_noUndo=function(intFrom,intTo){
	for(var j=intFrom;j<=intTo;j++){
		this.removeLine_noUndo(intFrom);
	}
	this.updateWndEditing(true);
};
TextWindow.prototype.RemoveLinesFromList=function(lstLineNumbers,blnUndo){
	while(lstLineNumbers.length>0){
		if(true==blnUndo)this.removeLine(lstLineNumbers[0]);
		else this.removeLine_noUndo(lstLineNumbers[0]);
		for(var jj=1;jj<lstLineNumbers.length;jj++){
			if(lstLineNumbers[jj]>=lstLineNumbers[0])lstLineNumbers[jj]--;
		}
		lstLineNumbers.splice(0,1);
	}	
};
TextWindow.prototype.RemoveLinesBackward=function(intTo,intFrom){
	var lstRemovedLines=[];
	var lstCursorBefore=this.copyList(this.lstCursor_buffer);
	for(var j=intFrom;j<=intTo;j++){
		lstRemovedLines.push(""+this.lstTextBuffer[intFrom]);
		this.removeLine_noUndo(intFrom);
	}
	var theLstCursor_buffer1=this.lstCursor_buffer[1]-lstRemovedLines.length;
	if(theLstCursor_buffer1<0)theLstCursor_buffer1=0;
	if(theLstCursor_buffer1>=this.lstTextBuffer.length)
		theLstCursor_buffer1=-(this.lstTextBuffer.length-theLstCursor_buffer1+1);
	this.setLstCursor_buffer1(theLstCursor_buffer1);
	this.setLstCursor_buffer0(this.indentSizeToPreserve(this.lstCursor_buffer[1]));
	var lstCursorAfter=this.copyList(this.lstCursor_buffer);
	this.addUndoItem([lstCursorBefore,lstCursorAfter,[128.1,intFrom,intTo,lstRemovedLines]]);
	this.keywordsAfterStage_linesRemoval(lstRemovedLines);
	this.updateWndEditing(true);
};
TextWindow.prototype.RemoveSubline=function(intFrom,intTo){
	var lstCursorBefore=this.copyList(this.lstCursor_buffer);
	var strLine=this.lstTextBuffer[this.lstCursor_buffer[1]];
	var beforeKeywords=this.keywordsBeforeStage_sublineModiff(""+strLine);
	var strRemovedSubline=strLine.substring(intFrom,intTo+1);
	this.setLstTextBuffer(this.lstCursor_buffer[1],strLine.substring(0,intFrom)+""+strLine.substring(intTo+1));
	intJ=this.lstCursor_buffer[1];
	var intIndent=this.indentSizeToPreserve(this.lstCursor_buffer[1]);
	var strLineAfter=this.lstTextBuffer[this.lstCursor_buffer[1]];
	if(this.lstCursor_buffer[0]<intIndent)
		this.setLstCursor_buffer0(intIndent);
	if(this.lstCursor_buffer[0]>=strLineAfter.length)
		if(strLineAfter.length>0)
			this.setLstCursor_buffer0(strLineAfter.length-1);
		else this.setLstCursor_buffer0(0);
	var lstCursorAfter=this.copyList(this.lstCursor_buffer);
	this.addUndoItem([lstCursorBefore,lstCursorAfter,[128.2,intJ,intFrom,intTo,strRemovedSubline]]);
	this.keywordsAfterStage_sublineModiff(""+strLineAfter,beforeKeywords);
	this.updateWndEditing(true);
};
TextWindow.prototype.RemoveSublineBackward=function(intTo,intFrom){
	var lstCursorBefore=this.copyList(this.lstCursor_buffer);
	var strLine=this.lstTextBuffer[this.lstCursor_buffer[1]];
	var beforeKeywords=this.keywordsBeforeStage_sublineModiff(""+strLine);
	var strRemovedSubline=strLine.substring(intFrom,intTo+1);
	var strRemovedSubline=strLine.substring(intFrom,intTo+1);
	this.setLstTextBuffer(this.lstCursor_buffer[1],strLine.substring(0,intFrom)+""+strLine.substring(intTo+1));
	intJ=this.lstCursor_buffer[1];
	var intIndent=this.indentSizeToPreserve(this.lstCursor_buffer[1]);
	var strLineAfter=this.lstTextBuffer[this.lstCursor_buffer[1]];
	var theLstCursor_buffer0=this.lstCursor_buffer[0]-(intTo-intFrom);
	if(theLstCursor_buffer0<intIndent)
		theLstCursor_buffer0=intIndent;
	if(theLstCursor_buffer0>=strLineAfter.length)
		theLstCursor_buffer0=strLineAfter.length-1;
	this.setLstCursor_buffer0(theLstCursor_buffer0);
	var lstCursorAfter=this.copyList(this.lstCursor_buffer);
	this.addUndoItem([lstCursorBefore,lstCursorAfter,[128.2,intJ,intFrom,intTo,strRemovedSubline]]);
	this.keywordsAfterStage_sublineModiff(""+strLineAfter,beforeKeywords);
	this.updateWndEditing(true);
};
TextWindow.prototype.RemoveSublineBackwardMinusOne=function(intTo,intFrom){
	var lstCursorBefore=this.copyList(this.lstCursor_buffer);
	var strLine=this.lstTextBuffer[this.lstCursor_buffer[1]];
	var beforeKeywords=this.keywordsBeforeStage_sublineModiff(""+strLine);
	var strRemovedSubline=strLine.substring(intFrom,intTo+1);
	this.setLstTextBuffer(this.lstCursor_buffer[1],strLine.substring(0,intFrom)+""+strLine.substring(intTo+1));
	intJ=this.lstCursor_buffer[1];
	var intIndent=this.indentSizeToPreserve(this.lstCursor_buffer[1]);
	var strLineAfter=this.lstTextBuffer[this.lstCursor_buffer[1]];
	var theLstCursor_buffer0=this.lstCursor_buffer[0]-((intTo-intFrom)+1);
	if(theLstCursor_buffer0<intIndent)
		theLstCursor_buffer0=intIndent;
	if(theLstCursor_buffer0>=strLineAfter.length)
		theLstCursor_buffer0=strLineAfter.length-1;
	this.setLstCursor_buffer0(theLstCursor_buffer0);
	var lstCursorAfter=this.copyList(this.lstCursor_buffer);
	this.addUndoItem([lstCursorBefore,lstCursorAfter,[128.2,intJ,intFrom,intTo,strRemovedSubline]]);
	this.keywordsAfterStage_sublineModiff(""+strLineAfter,beforeKeywords);
	this.updateWndEditing(true);
};
TextWindow.prototype.removeCharsAfter=function(intChars){
	this.RemoveSubline(this.lstCursor_buffer[0],this.lstCursor_buffer[0]+intChars-1);
};
TextWindow.prototype.removeCharsBefore=function(intChars){
	this.RemoveSublineBackwardMinusOne(this.lstCursor_buffer[0]-1,this.lstCursor_buffer[0]-intChars);
};
TextWindow.prototype.removeLinesAfter=function(intLines){
	this.RemoveLines(this.lstCursor_buffer[1],this.lstCursor_buffer[1]+intLines-1);
};
TextWindow.prototype.removeLinesBefore=function(intLines){
	if(this.lstCursor_buffer[1]>0)
		this.RemoveLinesBackward(this.lstCursor_buffer[1]-1,this.lstCursor_buffer[1]-intLines);
};
TextWindow.prototype.copyLinesBefore=function(intClipboardNumber,intLines){
	this.theSuper.lstCPbuffer[intClipboardNumber]=[];
	var strLine;
	for(var ii=intLines;ii>0;ii--){
		strLine=this.lstTextBuffer[this.lstCursor_buffer[1]-ii];
		if(undefined!=strLine)
			this.theSuper.lstCPbuffer[intClipboardNumber].push([strLine]);
	}	
	if(0==intClipboardNumber)
		this.copy0bufferToTxtFunFunFun();
};
TextWindow.prototype.copyLinesBefore_with=function(intClipboardNumber,intLines){
	this.theSuper.lstCPbuffer[intClipboardNumber]=[];
	var strLine;
	for(var ii=intLines;ii>=0;ii--){
		strLine=this.lstTextBuffer[this.lstCursor_buffer[1]-ii];
		if(undefined!=strLine)
			this.theSuper.lstCPbuffer[intClipboardNumber].push([strLine]);
	}	
	if(0==intClipboardNumber)
		this.copy0bufferToTxtFunFunFun();
};
TextWindow.prototype.copyLinesAfter=function(intClipboardNumber,intLines){
	this.theSuper.lstCPbuffer[intClipboardNumber]=[];
	var strLine;
	for(var ii=0;ii<intLines;ii++){
		strLine=this.lstTextBuffer[this.lstCursor_buffer[1]+ii];
		if(undefined!=strLine)
			this.theSuper.lstCPbuffer[intClipboardNumber].push([strLine]);
	}	
	if(0==intClipboardNumber)
		this.copy0bufferToTxtFunFunFun();
};
TextWindow.prototype.removeLineToTheBeginning=function(blnIndent){
	if(true==blnIndent){
		var intIndent=this.indentSizeToPreserve(this.lstCursor_buffer[1]);
		if(this.lstCursor_buffer[0]>intIndent)
			this.RemoveSublineBackwardMinusOne(this.lstCursor_buffer[0]-1,intIndent);
		else{
			if(this.lstCursor_buffer[0]>0)
				this.RemoveSublineBackwardMinusOne(this.lstCursor_buffer[0]-1,0);
		}
	}else{
		if(this.lstCursor_buffer[0]>0)
			this.RemoveSublineBackwardMinusOne(this.lstCursor_buffer[0]-1,0);

	}
};
TextWindow.prototype.removeLineToTheEnd=function(){
	var strLine=this.lstTextBuffer[this.lstCursor_buffer[1]];
	this.RemoveSubline(this.lstCursor_buffer[0],strLine.length-1);
};
TextWindow.prototype.copyLineToTheBeginning=function(intClipboardNumber,blnIndent){
	this.theSuper.lstCPbuffer[intClipboardNumber]=[];
	var strLine;
	if(true==blnIndent){
		var intIndentSize=this.indentSizeToPreserve(this.lstCursor_buffer[1]);
		strLine=this.lstTextBuffer[this.lstCursor_buffer[1]].substring(intIndentSize,this.lstCursor_buffer[0]);
	}
	else strLine=this.lstTextBuffer[this.lstCursor_buffer[1]].substring(0,this.lstCursor_buffer[0]);
	if(undefined!=strLine)
		this.theSuper.lstCPbuffer[intClipboardNumber].push(strLine);
	if(0==intClipboardNumber)
		this.copy0bufferToTxtFunFunFun();
};
TextWindow.prototype.get0bufferToStrFunFunFun=function(){
	var strLine;
	var txtFunFunFun=document.getElementById("txtFunFunFun");
	//modiff--
	//strTxtFunFunFun="";
	var strTxtFunFunFun="";
	var intLines=this.theSuper.lstCPbuffer[0].length;
	for(var ii=0;ii<intLines;ii++){
		strLine=this.theSuper.lstCPbuffer[0][ii];
		if(ii>0)strTxtFunFunFun+=this.chrEnter;
		strTxtFunFunFun+=strLine;
	}
	return strTxtFunFunFun;
};
TextWindow.prototype.copy0bufferToTxtFunFunFun=function(){
	var strTxtFunFunFun=this.get0bufferToStrFunFunFun();
	txtFunFunFun.value=strTxtFunFunFun;	
};
TextWindow.prototype.copyLineToTheEnd=function(intClipboardNumber){
	this.theSuper.lstCPbuffer[intClipboardNumber]=[];
	var strLine;
	strLine=this.lstTextBuffer[this.lstCursor_buffer[1]].substring(this.lstCursor_buffer[0]);
	if(undefined!=strLine)
		this.theSuper.lstCPbuffer[intClipboardNumber].push(strLine);
	if(0==intClipboardNumber)
		this.copy0bufferToTxtFunFunFun();
};
TextWindow.prototype.copyCharsBefore=function(intClipboardNumber,intChars){
	this.theSuper.lstCPbuffer[intClipboardNumber]=[];
	var strCopy="";
	var chrCopy="";
	var strLine=this.lstTextBuffer[this.lstCursor_buffer[1]];
	for(var ii=intChars;ii>0;ii--){
		chrCopy=strLine[this.lstCursor_buffer[0]-ii];
		if(undefined!=chrCopy)
			strCopy+=chrCopy;
	}
	this.theSuper.lstCPbuffer[intClipboardNumber].push(strCopy);
	var theLstCursor_buffer0=this.lstCursor_buffer[0]-intChars;
	if(this.lstCursor_buffer[0]<0)this.setLstCursor_buffer0(this.indentSizeToPreserve(this.lstCursor_buffer[1]));
	this.setLstCursor_buffer0(theLstCursor_buffer0);
	if(0==intClipboardNumber)
		this.copy0bufferToTxtFunFunFun();
	this.updateWndEditing(true);
};
TextWindow.prototype.copyCharsBefore_with=function(intClipboardNumber,intChars){
	this.theSuper.lstCPbuffer[intClipboardNumber]=[];
	var strCopy="";
	var chrCopy="";
	var strLine=this.lstTextBuffer[this.lstCursor_buffer[1]];
	for(var ii=intChars;ii>=0;ii--){
		chrCopy=strLine[this.lstCursor_buffer[0]-ii];
		if(undefined!=chrCopy)
			strCopy+=chrCopy;
	}
	this.theSuper.lstCPbuffer[intClipboardNumber].push(strCopy);
	var theLstCursor_buffer0=this.lstCursor_buffer[0]-intChars;
	if(this.lstCursor_buffer[0]<0)this.setLstCursor_buffer0(this.indentSizeToPreserve(this.lstCursor_buffer[1]));
	this.setLstCursor_buffer0(theLstCursor_buffer0);
	if(0==intClipboardNumber)
		this.copy0bufferToTxtFunFunFun();
	this.updateWndEditing(true);
};
TextWindow.prototype.copyCharsAfter=function(intClipboardNumber,intChars){
	this.theSuper.lstCPbuffer[intClipboardNumber]=[];
	var strCopy="";
	var chrCopy="";
	var strLine=this.lstTextBuffer[this.lstCursor_buffer[1]];
	for(var ii=0;ii<intChars;ii++){
		chrCopy=strLine[this.lstCursor_buffer[0]+ii];
		if(undefined!=chrCopy)
			strCopy+=chrCopy;
	}
	this.theSuper.lstCPbuffer[intClipboardNumber].push(strCopy);
	if(0==intClipboardNumber)
		this.copy0bufferToTxtFunFunFun();
};
TextWindow.prototype.copyWordsBefore=function(intClipboardNumber,intWords){
	this.theSuper.lstCPbuffer[intClipboardNumber]=[];
	var strWordsBefore="";
	var strCopy="";
	var chrCopy="";
	var strLine=this.lstTextBuffer[this.lstCursor_buffer[1]];
	var blnEndOfLine=false;
	var intActualPosition,intPrevWordPosition;
	intActualPosition=this.lstCursor_buffer[0]-1;
	for(var jj=0;jj<intWords;jj++){
		strCopy="";
		intPrevWordPosition=this.getPrevWordStartingPosition(intActualPosition,this.lstCursor_buffer[1]);
		intChars=intActualPosition-intPrevWordPosition;
		
		for(var ii=intChars;ii>=0;ii--){
			chrCopy=strLine[intActualPosition-ii];
			if(undefined!=chrCopy)
				strCopy+=chrCopy;
			else{blnEndOfLine=true;break;}
			
		}
		if(true==blnEndOfLine){
			break;
		}
		if(0==intChars){
			break;
		}
		intActualPosition=intPrevWordPosition-1;
		strWordsBefore=strCopy+strWordsBefore;
	}
	this.theSuper.lstCPbuffer[intClipboardNumber].push(strWordsBefore);
	if(0==intClipboardNumber)
		this.copy0bufferToTxtFunFunFun();
};
TextWindow.prototype.getWordsBeforePosition=function(intWords){
	var strWordsBefore="";
	var strCopy="";
	var chrCopy="";
	var strLine=this.lstTextBuffer[this.lstCursor_buffer[1]];
	var blnEndOfLine=false;
	var intActualPosition,intPrevWordPosition;
	intActualPosition=this.lstCursor_buffer[0]-1;
	for(var jj=0;jj<intWords;jj++){
		strCopy="";
		intPrevWordPosition=this.getPrevWordStartingPosition(intActualPosition,this.lstCursor_buffer[1]);
		intChars=intActualPosition-intPrevWordPosition;
		
		for(var ii=intChars;ii>=0;ii--){
			chrCopy=strLine[intActualPosition-ii];
			if(undefined==chrCopy){blnEndOfLine=true;break;}
			
		}
		if(true==blnEndOfLine){
			break;
		}
		if(0==intChars){
			break;
		}
		intActualPosition=intPrevWordPosition-1;
	}
	return intActualPosition;
};
TextWindow.prototype.copyWordsAfter=function(intClipboardNumber,intWords){
	this.theSuper.lstCPbuffer[intClipboardNumber]=[];
	var strCopy="";
	var chrCopy="";
	var strLine=this.lstTextBuffer[this.lstCursor_buffer[1]];
	var blnEndOfLine=false;
	var intActualPosition,intNextWordPosition;
	intActualPosition=this.lstCursor_buffer[0];
	for(var jj=0;jj<intWords;jj++){
		intNextWordPosition=this.getNextWordPosition(intActualPosition,this.lstCursor_buffer[1]);
		intChars=intNextWordPosition-intActualPosition;
		
		for(var ii=0;ii<intChars;ii++){
			chrCopy=strLine[intActualPosition+ii];
			if(undefined!=chrCopy)
				strCopy+=chrCopy;
			else{blnEndOfLine=true;break;}
			
		}
		if(true==blnEndOfLine){
			break;
		}
		if(0==intChars){
			break;
		}
		intActualPosition=intNextWordPosition;
	}
	this.theSuper.lstCPbuffer[intClipboardNumber].push(strCopy);
	if(0==intClipboardNumber)
		this.copy0bufferToTxtFunFunFun();
};
TextWindow.prototype.getWordsAfterPosition=function(intWords){
	var strCopy="";
	var chrCopy="";
	var strLine=this.lstTextBuffer[this.lstCursor_buffer[1]];
	var blnEndOfLine=false;
	var intActualPosition,intNextWordPosition;
	intActualPosition=this.lstCursor_buffer[0];
	for(var jj=0;jj<intWords;jj++){
		intNextWordPosition=this.getNextWordPosition(intActualPosition,this.lstCursor_buffer[1]);
		intChars=intNextWordPosition-intActualPosition;
		
		for(var ii=0;ii<intChars;ii++){
			chrCopy=strLine[intActualPosition+ii];
			if(undefined==chrCopy){blnEndOfLine=true;break;}
			
		}
		if(true==blnEndOfLine){
			break;
		}
		if(0==intChars){
			break;
		}
		intActualPosition=intNextWordPosition;
	}
	return intActualPosition;
};
TextWindow.prototype.removeWordsBefore=function(intWords){
	var intPosition=this.getWordsBeforePosition(intWords);
	this.RemoveSublineBackwardMinusOne(this.lstCursor_buffer[0]-1,intPosition+1);
};
TextWindow.prototype.removeWordsAfter=function(intWords){
	var intPosition=this.getWordsAfterPosition(intWords);
	this.RemoveSubline(this.lstCursor_buffer[0],intPosition-1);
};
TextWindow.prototype.copyList=function(lstBufferSrc){
	var lstBufferDst=[];	
	for(var ii=0;ii<lstBufferSrc.length;ii++){
		lstBufferDst.push(lstBufferSrc[ii]);
	}
	return lstBufferDst;
};
TextWindow.prototype.isList=function(lstBufferSrc){
	if("object"!=typeof(lstBufferSrc))return false;
	if(lstBufferSrc.constructor==[].constructor)return true;
	return false;
};
TextWindow.prototype.copyListRecursive=function(lstBufferSrc){
	var lstBufferDst=[];	
	for(var ii=0;ii<lstBufferSrc.length;ii++){
		if(true==this.isList(lstBufferSrc[ii]))
			lstBufferDst.push(this.copyListRecursive(lstBufferSrc[ii]));
		else
		lstBufferDst.push(lstBufferSrc[ii]);
	}
	return lstBufferDst;
};
TextWindow.prototype.copyString=function(strSrc){
	return strSrc.split("").join("");
};
TextWindow.prototype.copyStringList=function(lstBufferSrc){
	var lstBufferDst=[];	
	for(var ii=0;ii<lstBufferSrc.length;ii++){
		lstBufferDst.push(this.copyString(lstBufferSrc[ii]));
	}
	return lstBufferDst;
};
TextWindow.prototype.copyDictionary=function(dctSrc){
	var dctDst={};
	//mhdmodiff--
	//for(x in dctSrc){
	for(var x in dctSrc){
		dctDst[x]=dctSrc[x];
	}
	return dctDst;
};
TextWindow.prototype.concatenateLists=function(list1,list2){
	var list3=[];	
	for(var ii=0;ii<list1.length;ii++)
		list3.push(list1[ii]);
	for(var ii=0;ii<list2.length;ii++)
		list3.push(list2[ii]);
	return list3;
};
TextWindow.prototype.pasteBufferBefore=function(intClipboardNumber){
	var strFunFunFun=this.get0bufferToStrFunFunFun();
	var txtFunFunFun=document.getElementById("txtFunFunFun");
	if(0==intClipboardNumber&&strFunFunFun!=txtFunFunFun.value)
		this.paste0bufferFromTxtFunFunFun();
	var strLine;
	var strLinesToKeyword=[];
	if(this.theSuper.lstCPbuffer[intClipboardNumber].length>0){
		if("string"!=typeof(this.theSuper.lstCPbuffer[intClipboardNumber][0])){
			for(var ii=0;ii<this.theSuper.lstCPbuffer[intClipboardNumber].length;ii++){
				strLine=this.theSuper.lstCPbuffer[intClipboardNumber][this.theSuper.lstCPbuffer[intClipboardNumber].length-1-ii][0];
				if(undefined!=strLine)
					strLinesToKeyword.push(strLine);
				if(undefined!=strLine){
					this.insertNewline_noUndo(this.lstCursor_buffer[1],strLine);
				}
			}				
			var intIndent=this.indentSizeToPreserve(this.lstCursor_buffer[1]);
			this.addUndoItem([[this.lstCursor_buffer[0],this.lstCursor_buffer[1]],[intIndent,this.lstCursor_buffer[1]],[16.1,this.lstCursor_buffer[1],this.copyList(this.theSuper.lstCPbuffer[intClipboardNumber])]]);
			this.keywordsAfterStage_insertNewlines(strLinesToKeyword);
			this.setLstCursor_buffer0(intIndent);
		}else{
			strLine=this.lstTextBuffer[this.lstCursor_buffer[1]];
			var beforeKeywords=this.keywordsBeforeStage_sublineModiff(""+strLine);
			this.setLstTextBuffer(this.lstCursor_buffer[1],strLine.substring(0,this.lstCursor_buffer[0])+this.theSuper.lstCPbuffer[intClipboardNumber][0]+strLine.substring(this.lstCursor_buffer[0]));
			this.addUndoItem([[this.lstCursor_buffer[0],this.lstCursor_buffer[1]],[this.lstCursor_buffer[0],this.lstCursor_buffer[1]],[16.3,this.lstCursor_buffer[0],this.lstCursor_buffer[1],this.copyList(this.theSuper.lstCPbuffer[intClipboardNumber])]]);
			var strLineAfter=this.lstTextBuffer[this.lstCursor_buffer[1]];
			this.keywordsAfterStage_sublineModiff(""+strLineAfter,beforeKeywords);
		}
	}
	this.updateWndEditing(true);
};
TextWindow.prototype.paste0bufferFromTxtFunFunFun=function(){
	var txtFunFunFun=document.getElementById("txtFunFunFun");
	var strTxtFunFunFun=txtFunFunFun.value;
	var chrEnter=this.detectEnters(strTxtFunFunFun);
	var strLines=strTxtFunFunFun.split(chrEnter);
	this.theSuper.lstCPbuffer[0]=[];
	if(1==strLines.length)
		this.theSuper.lstCPbuffer[0][0]=strLines[0];
	else{
		for(var ii=0;ii<strLines.length;ii++)
			this.theSuper.lstCPbuffer[0].push([strLines[ii]]);
	}
};
TextWindow.prototype.pasteBufferAfter=function(intClipboardNumber){
	var strFunFunFun=this.get0bufferToStrFunFunFun();
	var txtFunFunFun=document.getElementById("txtFunFunFun");
	if(0==intClipboardNumber&&strFunFunFun!=txtFunFunFun.value)
		this.paste0bufferFromTxtFunFunFun();
	var strLine;
	var strLinesToKeyword=[];
	if(this.theSuper.lstCPbuffer[intClipboardNumber].length>0){
		if("string"!=typeof(this.theSuper.lstCPbuffer[intClipboardNumber][0])){
			for(var ii=0;ii<this.theSuper.lstCPbuffer[intClipboardNumber].length;ii++){
				strLine=this.theSuper.lstCPbuffer[intClipboardNumber][ii][0];
				if(undefined!=strLine)
					strLinesToKeyword.push(strLine);
				if(undefined!=strLine){
					this.insertNewline_noUndo(this.lstCursor_buffer[1]+ii+1,strLine);
				}
			}				
			var intIndent=this.indentSizeToPreserve(this.lstCursor_buffer[1]+1);
			this.addUndoItem([[this.lstCursor_buffer[0],this.lstCursor_buffer[1]],[intIndent,this.lstCursor_buffer[1]+this.theSuper.lstCPbuffer[intClipboardNumber].length],[16.2,this.lstCursor_buffer[1]+1,this.copyList(this.theSuper.lstCPbuffer[intClipboardNumber])]]);
			this.keywordsAfterStage_insertNewlines(strLinesToKeyword);
			this.setLstCursor_buffer1(this.lstCursor_buffer[1]+this.theSuper.lstCPbuffer[intClipboardNumber].length);

			this.setLstCursor_buffer0(intIndent);
		}else{
			strLine=this.lstTextBuffer[this.lstCursor_buffer[1]];
			var beforeKeywords=this.keywordsBeforeStage_sublineModiff(""+strLine);
			this.setLstTextBuffer(this.lstCursor_buffer[1],strLine.substring(0,this.lstCursor_buffer[0]+1)+this.theSuper.lstCPbuffer[intClipboardNumber][0]+strLine.substring(this.lstCursor_buffer[0]+1));
			this.addUndoItem([[this.lstCursor_buffer[0],this.lstCursor_buffer[1]],[this.lstCursor_buffer[0]+(this.theSuper.lstCPbuffer[intClipboardNumber][0].length),this.lstCursor_buffer[1]],[16.4,this.lstCursor_buffer[0],this.lstCursor_buffer[1],this.copyList(this.theSuper.lstCPbuffer[intClipboardNumber])]]);
			var strLineAfter=this.lstTextBuffer[this.lstCursor_buffer[1]];
			this.keywordsAfterStage_sublineModiff(""+strLineAfter,beforeKeywords);
			this.setLstCursor_buffer0(this.lstCursor_buffer[0]+(this.theSuper.lstCPbuffer[intClipboardNumber][0]).length);
		}
	}
	this.updateWndEditing(true);
};
TextWindow.prototype.removeKeyword_=function(strKeyword){
	if(true==this.notAkeyword(strKeyword))return;
	if(strKeyword in this.dctKeywords)delete this.dctKeywords[strKeyword];
};
TextWindow.prototype.removeKeyword=function(strKeyword){
	this.removeKeyword_(strKeyword);
	var wndSharedBuffer=null;
	for(var ii=0;ii<this.lstSharedBufferWnd.length;ii++){
		wndSharedBuffer=this.lstSharedBufferWnd[ii];
		if(null!=wndSharedBuffer){
			wndSharedBuffer.removeKeyword_(strKeyword);
		}
	}

};
TextWindow.prototype.incKeyword_=function(strKeyword){
	if(true==this.notAkeyword(strKeyword))return;
	if(strKeyword in this.dctKeywords)this.dctKeywords[strKeyword]++;
	else this.dctKeywords[strKeyword]=1;
};
TextWindow.prototype.incKeyword=function(strKeyword){
	this.incKeyword_(strKeyword);
	var wndSharedBuffer=null;
	for(var ii=0;ii<this.lstSharedBufferWnd.length;ii++){
		wndSharedBuffer=this.lstSharedBufferWnd[ii];
		if(null!=wndSharedBuffer){
			wndSharedBuffer.incKeyword_(strKeyword);
		}
	}
};
TextWindow.prototype.decKeyword_=function(strKeyword){
	if(true==this.notAkeyword(strKeyword))return;
	if(strKeyword in this.dctKeywords){
		if(this.dctKeywords[strKeyword]>1)this.dctKeywords[strKeyword]--;
		else this.removeKeyword(strKeyword);
	}
};
TextWindow.prototype.decKeyword=function(strKeyword){
	this.decKeyword_(strKeyword);
	var wndSharedBuffer=null;
	for(var ii=0;ii<this.lstSharedBufferWnd.length;ii++){
		wndSharedBuffer=this.lstSharedBufferWnd[ii];
		if(null!=wndSharedBuffer){
			wndSharedBuffer.decKeyword_(strKeyword);
		}
	}
};
TextWindow.prototype.decKeywords=function(lstKeywords){
	for(var ii=0;ii<lstKeywords.length;ii++)this.decKeyword(lstKeywords[ii][0]);
};
TextWindow.prototype.incKeywords=function(lstKeywords){
	for(var ii=0;ii<lstKeywords.length;ii++)this.incKeyword(lstKeywords[ii][0]);
};
TextWindow.prototype.maximizeWindow=function(){
	this.setNewDimensions(0,1,this.base.intScreenWidth_text,this.base.intScreenHeight_text-1,this.intBorderSize);
	this.updateWndEditing(true);
};
TextWindow.prototype.setBlnWrap=function(){
	if(true==this.blnWrap)this.blnWrap=false;
	else this.blnWrap=true;
	this.theSuper.wndMenu.mnuView.lstTextBuffer[2]="blnWrap="+this.blnWrap;
	this.theSuper.wndMenu.mnuView.updateWndEditing(true);
	this.updateWndEditing(true);
};
TextWindow.prototype.setBlnHighlightSearch=function(){
	if(true==this.blnHighlightSearch)this.blnHighlightSearch=false;
	else this.blnHighlightSearch=true;
	this.theSuper.wndMenu.mnuView.lstTextBuffer[3]="blnHighlightSearch="+this.blnHighlightSearch;
	this.theSuper.wndMenu.mnuView.updateWndEditing(true);
	this.updateWndEditing(true);
};
TextWindow.prototype.gotoLineInputBox=function(){
	var strGoto=prompt("Goto line number:");
	if(null==strGoto||undefined==strGoto)return;
	var intGoto=parseInt(strGoto);
	if(false==netspace.nonNumber(intGoto)){
		if(intGoto>=1&&intGoto<=this.lstTextBuffer.length){
			this.setLstCursor_buffer1(intGoto-1);
			this.setLstCursor_buffer0_indent(true);
			this.addCursorHistoryUndoItem(true);
			this.updateWndEditing(true);
		}
		if(intGoto<=-1&&intGoto>=-this.lstTextBuffer.length+1){
			this.setLstCursor_buffer1(this.lstTextBuffer.length+intGoto);
			this.setLstCursor_buffer0_indent(true);
			this.addCursorHistoryUndoItem(true);
			this.updateWndEditing(true);
		}
	}
};
TextWindow.prototype.selectAll=function(){
	var lstCursorEnd=[];
	lstCursorEnd[1]=this.lstTextBuffer.length-1;
	lstCursorEnd[0]=this.lstTextBuffer[lstCursorEnd[1]].length-1;
	if(lstCursorEnd[0]<0)lstCursorEnd[0]=0;
	this.lstSelectionHighlights_text=[[0,0],lstCursorEnd];
	this.updateHighlightSelection();
	this.updateWndEditing(true);
};
TextWindow.prototype.newTextFile=function(){
	var chrEnter=String.fromCharCode(10);
	this.loadText(""+chrEnter);
	this.textDefaults();
	this.dctKeywords={};
	this.theFileInfo="new_"+performance.now();
	this.setSharedBuffers();
	this.updateWndEditing(true);
};
TextWindow.prototype.setMark=function(chrKey){
	this.objMarks[chrKey]=this.copyList(this.lstCursor_buffer);
};
TextWindow.prototype.gotoMark=function(chrKey){
	if(chrKey in this.objMarks){
		var lstMark=this.objMarks[chrKey];
		this.setLstCursor_buffer0(lstMark[0]);
		this.setLstCursor_buffer1(lstMark[1]);
		this.addCursorHistoryUndoItem(true);
		this.updateWndEditing(true);	
	}
};
TextWindow.prototype.getTabRangeFromMarks=function(chrMarkA,chrMarkB){
	var lstMarkA=null,lstMarkB=null;
	if(String.fromCharCode(39)==chrMarkA){
		lstMarkA=this.copyList(this.lstCursor_buffer);
	}else{
		if(true==this.wordCharacter(chrMarkA)&&false==this.isDigit(chrMarkA)&&chrMarkA in this.objMarks){
			lstMarkA=this.copyList(this.objMarks[chrMarkA]);
		}
	}
	if(String.fromCharCode(39)==chrMarkB){
		lstMarkB=this.copyList(this.lstCursor_buffer);
	}else{
		if(true==this.wordCharacter(chrMarkB)&&false==this.isDigit(chrMarkB)&&chrMarkB in this.objMarks){
			lstMarkB=this.copyList(this.objMarks[chrMarkB]);
		}
	}
	if(null==lstMarkA||null==lstMarkB)return;
	var intRangeStart=(lstMarkA[1]<lstMarkB[1])?lstMarkA[1]:lstMarkB[1];
	var intRangeEnd=(lstMarkA[1]>lstMarkB[1])?lstMarkA[1]:lstMarkB[1];
	intRangeStart++;
	intRangeEnd++;
	return [intRangeStart,intRangeEnd];
};
TextWindow.prototype.tabMarkedBlockPP=function(chrMarkA,chrMarkB){
	var lstReturn=this.getTabRangeFromMarks(chrMarkA,chrMarkB);
	var intRangeStart=lstReturn[0],intRangeEnd=lstReturn[1];
	this.tabLinesRangePP(intRangeStart,intRangeEnd);	
};
TextWindow.prototype.tabMarkedBlockMM=function(chrMarkA,chrMarkB){
	var lstReturn=this.getTabRangeFromMarks(chrMarkA,chrMarkB);
	var intRangeStart=lstReturn[0],intRangeEnd=lstReturn[1];
	this.tabLinesRangeMM(intRangeStart,intRangeEnd);	
};
TextWindow.prototype.tabNextLinesPP=function(intCommandCounter){
	var intRangeStart=this.lstCursor_buffer[1];
	var intRangeEnd=intRangeStart+intCommandCounter;
	this.tabLinesRangePP(intRangeStart,intRangeEnd);	
};
TextWindow.prototype.tabNextLinesMM=function(intCommandCounter){
	var intRangeStart=this.lstCursor_buffer[1];
	var intRangeEnd=intRangeStart+intCommandCounter;
	this.tabLinesRangeMM(intRangeStart,intRangeEnd);	
};
TextWindow.prototype.tabLinesRangePP=function(intRangeStart,intRangeEnd){
	intRangeStart--;
	intRangeEnd--;
	if(intRangeStart>=this.lstTextBuffer.length)return;
	if(intRangeEnd>=this.lstTextBuffer.length)intRangeEnd=this.lstTextBuffer.length-1;
	for(var j=intRangeStart;j<=intRangeEnd;j++){
		this.setLstTextBuffer(j,String.fromCharCode(9)+this.lstTextBuffer[j]);
	}
	this.updateWndEditing(true);
};
TextWindow.prototype.tabLinesRangeMM=function(intRangeStart,intRangeEnd){
	intRangeStart--;
	intRangeEnd--;
	if(intRangeStart>=this.lstTextBuffer.length)return;
	if(intRangeEnd>=this.lstTextBuffer.length)intRangeEnd=this.lstTextBuffer.length-1;
	for(var j=intRangeStart;j<=intRangeEnd;j++){
		if(String.fromCharCode(9)==this.lstTextBuffer[j][0])
			this.setLstTextBuffer(j,this.lstTextBuffer[j].substring(1));
	}
	this.updateWndEditing(true);
};
TextWindow.prototype.deleteMarkedText=function(chrKey){
	if(true==this.wordCharacter(chrKey)&&false==this.isDigit(chrKey)&&chrKey in this.objMarks){
		var lstMark=this.objMarks[chrKey];
		if(this.lstCursor_buffer[1]==lstMark[1]){
			if(this.lstCursor_buffer[0]<=lstMark[0])
				this.RemoveSubline(this.lstCursor_buffer[0],lstMark[0]);
			else this.RemoveSubline(lstMark[0],this.lstCursor_buffer[0]);
		}else{
			if(this.lstCursor_buffer[1]<lstMark[1])
				this.RemoveLinesMark(this.lstCursor_buffer[1],lstMark[1]);
			else this.RemoveLinesMark(lstMark[1],this.lstCursor_buffer[1]);
		}
	}
};
TextWindow.prototype.copyMarkedText=function(intClipboardNumber,chrKey){
	if(true==this.wordCharacter(chrKey)&&false==this.isDigit(chrKey)&&chrKey in this.objMarks){
		var lstMark=this.objMarks[chrKey];
		if(this.lstCursor_buffer[1]==lstMark[1]){
			if(this.lstCursor_buffer[0]<=lstMark[0])
				if(this.lstCursor_buffer[0]==lstMark[0])
					this.copyCharsAfter(intClipboardNumber,1);
				else this.copyCharsAfter(intClipboardNumber,lstMark[0]-this.lstCursor_buffer[0]+1);
			else this.copyCharsBefore_with(intClipboardNumber,this.lstCursor_buffer[0]-lstMark[0]);
		}else{
			if(this.lstCursor_buffer[1]<lstMark[1])
				this.copyLinesAfter(intClipboardNumber,lstMark[1]-this.lstCursor_buffer[1]+1);
			else this.copyLinesBefore_with(intClipboardNumber,this.lstCursor_buffer[1]-lstMark[1]);
		}
	}
};
TextWindow.prototype.removeCharacterUnderCursor=function(){
	var strLine=this.lstTextBuffer[this.lstCursor_buffer[1]];
	if(undefined==strLine)return;
	if(0==strLine.length){
		this.removeLine(this.lstCursor_buffer[1]);
		if(this.lstCursor_buffer[1]>0){
			this.setLstCursor_buffer1(this.lstCursor_buffer[1]-1);
			this.setLstCursor_buffer0(this.lstTextBuffer[this.lstCursor_buffer[1]].length-1);
		}
		this.updateWndEditing(true);
		return;
	}
	this.addUndoItem([[this.lstCursor_buffer[0],this.lstCursor_buffer[1]],[this.lstCursor_buffer[0],this.lstCursor_buffer[1]],[88,this.lstCursor_buffer[0],this.lstCursor_buffer[1],this.lstTextBuffer[this.lstCursor_buffer[1]][this.lstCursor_buffer[0]]]]);

	var beforeKeywords=this.keywordsBeforeStage_charRemoval(0);

	this.setLstTextBuffer(this.lstCursor_buffer[1],strLine.substring(0,this.lstCursor_buffer[0])+strLine.substring(this.lstCursor_buffer[0]+1));
	/*this.blnModiff=true;*/
	this.keywordsAfterStage_charRemoval(0,beforeKeywords);
	if(this.lstCursor_buffer[0]>=strLine.length-1&&this.lstTextBuffer[this.lstCursor_buffer[1]].length>0){
		this.setLstCursor_buffer0(this.lstCursor_buffer[0]-1);
	}
	this.updateWndEditing(true);
};
TextWindow.prototype.replaceCharacter=function(chrChar){
	var strLine=this.lstTextBuffer[this.lstCursor_buffer[1]];
	if(undefined==strLine)return;
	if(this.lstCursor_buffer[0]>=strLine.length)return;
	var chrPrevKey=strLine[this.lstCursor_buffer[0]];
	var chrNextKey=""+chrChar;
	var beforeKeywords=this.keywordsBeforeStage_charEditing(0);
	this.addUndoItem([[this.lstCursor_buffer[0],this.lstCursor_buffer[1]],[this.lstCursor_buffer[0],this.lstCursor_buffer[1]],[3,this.lstCursor_buffer[0],this.lstCursor_buffer[1],chrPrevKey,chrNextKey]]);
	this.setLstTextBuffer(this.lstCursor_buffer[1],strLine.substring(0,this.lstCursor_buffer[0])+chrChar+strLine.substring(this.lstCursor_buffer[0]+1));
	/*this.blnModiff=true;*/

	this.keywordsAfterStage_charEditing(0,beforeKeywords);
	this.updateWndEditing(true);
};
TextWindow.prototype.insertEditingEnter_=function(){
	if(this.lstSelectionHighlights_text.length>0){
		this.removeSelectedText();
	}
	var strLine=""+this.lstTextBuffer[this.lstCursor_buffer[1]];
	var strNewline="";
	var intTabsToPreserve=this.indentSizeToPreserve(this.lstCursor_buffer[1]);
	var strLineBeginning="";
	if(strLine.length==this.lstCursor_buffer[0]){
		this.insertNewline(this.lstCursor_buffer[1]+1,strLineBeginning+strNewline);
	}
	else{
		var beforeKeywords=this.keywordsBeforeStage_enter(1);
		this.setLstTextBuffer(this.lstCursor_buffer[1],strLine.substring(0,this.lstCursor_buffer[0]));
		/*this.blnModiff=true;*/
		strNewline=""+strLine.substring(this.lstCursor_buffer[0]);
		this.insertNewline(this.lstCursor_buffer[1]+1,strLineBeginning+strNewline);
		this.keywordsAfterStage_enter(1,beforeKeywords);
	}
	this.cursorPreserveIndent(this.lstCursor_buffer[1],this.lstCursor_buffer[1]+1);
	this.setLstCursor_buffer0(intTabsToPreserve);
	this.setLstCursor_buffer1(this.lstCursor_buffer[1]+1);
	this.updateWndEditing(true);
};

TextWindow.prototype.insertEditingEnter_fastCruncher=function(){
	/*
	if(netspace.wndEditing.lstSelectionHighlights_text.length>0){
		netspace.wndEditing.removeSelectedText();
	}
	*/
	var strTmpLine0="";
	var strTmpLine1="";
	var strLine=""+netspace.wndEditing.lstTextBuffer_fastCruncher[netspace.wndEditing.lstCursor_buffer_fastCruncher[1]];
	var strNewline="";
	var intTabsToPreserve=netspace.wndEditing.indentSizeToPreserve_fastCruncher(netspace.wndEditing.lstCursor_buffer_fastCruncher[1]);
	var strLineBeginning="";
	if(strLine.length==netspace.wndEditing.lstCursor_buffer_fastCruncher[0]){
		strTmpLine0=strLineBeginning+strNewline;
		strTmpLine0=strTmpLine0.split('').join('');
		netspace.wndEditing.insertNewline_fastCruncher(netspace.wndEditing.lstCursor_buffer_fastCruncher[1]+1,strTmpLine0);
	}
	else{
		strTmpLine0=strLine.substring(0,netspace.wndEditing.lstCursor_buffer_fastCruncher[0]);
		strTmpLine0=strTmpLine0.split('').join('');
		netspace.wndEditing.setLstTextBuffer_fastCruncher(netspace.wndEditing.lstCursor_buffer_fastCruncher[1],strTmpLine0);
		/*netspace.wndEditing.blnModiff=true;*/
		strNewline=""+strLine.substring(netspace.wndEditing.lstCursor_buffer_fastCruncher[0]);
		strTmpLine1=strLineBeginning+strNewline;
		strTmpLine1=strTmpLine1.split('').join('');
		netspace.wndEditing.insertNewline_fastCruncher(netspace.wndEditing.lstCursor_buffer_fastCruncher[1]+1,strTmpLine1);
	}
	netspace.wndEditing.cursorPreserveIndent_fastCruncher(netspace.wndEditing.lstCursor_buffer_fastCruncher[1],netspace.wndEditing.lstCursor_buffer_fastCruncher[1]+1);
	netspace.wndEditing.setLstCursor_buffer0_fastCruncher(intTabsToPreserve);
	netspace.wndEditing.setLstCursor_buffer1_fastCruncher(netspace.wndEditing.lstCursor_buffer_fastCruncher[1]+1);
	/*delete strTmpLine0;delete strTmpLine1;delete strNewline;delete strLine;delete strLineBeginning;*/
};

TextWindow.prototype.keywordsBeforeStage_lineRemoval_ij=function(intMinus,intI,intJ){
	var lstWords0,lstWords1;
	/*backspace intMinus=-1*/
	/*delete intMinus=0*/
	var strPrevLine0=""+this.lstTextBuffer[intJ+intMinus];
	var strPrevLine1=""+this.lstTextBuffer[intJ+1+intMinus];
	lstWords0=this.getWordsFromLine(strPrevLine0);
	lstWords1=this.getWordsFromLine(strPrevLine1);
	var beforeKeywords=[lstWords0,lstWords1];
	return beforeKeywords;
};
TextWindow.prototype.keywordsBeforeStage_lineRemoval=function(intMinus){
	return this.keywordsBeforeStage_lineRemoval_ij(intMinus,this.lstCursor_buffer[0],this.lstCursor_buffer[1]);
};
TextWindow.prototype.keywordsAfterStage_lineRemoval_ij=function(intMinus,beforeKeywords,intI,intJ){
	var lstWords2=this.getWordsFromLine(this.lstTextBuffer[this.lstCursor_buffer[1]+intMinus]);
	var lstWords0,lstWords1;
	var lstReturn=beforeKeywords;
	lstWords0=lstReturn[0];
	lstWords1=lstReturn[1];
	this.decKeywords(lstWords0);
	this.decKeywords(lstWords1);
	this.incKeywords(lstWords2);
};
TextWindow.prototype.keywordsAfterStage_lineRemoval=function(intMinus,beforeKeywords){
	this.keywordsAfterStage_lineRemoval_ij(intMinus,beforeKeywords,this.lstCursor_buffer[0],this.lstCursor_buffer[1]);
};
TextWindow.prototype.keywordsAfterStage_linesRemoval=function(lstLines){
	var strLine="";
	var lstWords=null;
	for(var ii=0;ii<lstLines.length;ii++){
		strLine=lstLines[ii];
		lstWords=this.getWordsFromLine(strLine);
		this.decKeywords(lstWords);
	}
};
TextWindow.prototype.keywordsBeforeStage_sublineModiff=function(strLineBefore){
	var lstWords=this.getWordsFromLine(strLineBefore);
	var beforeKeywords=[lstWords];
	return beforeKeywords;
};
TextWindow.prototype.keywordsBeforeStage_sublineModiffPro=function(strLineBefore,intFrom,intTo){
	var strSubstring=this.computeInfluencedKeywordsSubstring(strLineBefore,intFrom,intTo);
	var lstWords=this.getWordsFromLine(strSubstring);
	var beforeKeywords=[lstWords];
	return beforeKeywords;
};
TextWindow.prototype.keywordsAfterStage_sublineModiff=function(strLineAfter,beforeKeywords){
	var lstWords0,lstWords1;
	var lstReturn=beforeKeywords;	
	lstWords0=lstReturn[0];
	lstWords1=this.getWordsFromLine(strLineAfter);
	this.decKeywords(lstWords0);
	this.incKeywords(lstWords1);
};
TextWindow.prototype.keywordsAfterStage_sublineModiffPro=function(strLineAfter,beforeKeywords,intFrom,intTo){
	var strSubstring=this.computeInfluencedKeywordsSubstring(strLineAfter,intFrom,intTo);
	var lstWords0,lstWords1;
	var lstReturn;
	if(null!=beforeKeywords){
		lstReturn=beforeKeywords;
		lstWords0=lstReturn[0];
	}
	else lstWords0=null;
	lstWords1=this.getWordsFromLine(strSubstring);
	if(null!=lstWords0){
		this.decKeywords(lstWords0);
	}
	if(null!=lstWords1){
		this.incKeywords(lstWords1);
	}
};
TextWindow.prototype.keywordsAfterStage_insertNewline=function(strLine){
	var lstWords=this.getWordsFromLine(strLine);
	this.incKeywords(lstWords);
};
TextWindow.prototype.keywordsAfterStage_insertNewlines=function(lstLines){
	var strLine;
	var lstWords=null;
	for(var ii=0;ii<lstLines.length;ii++){
		strLine=lstLines[ii];
		lstWords=this.getWordsFromLine(strLine);
		this.incKeywords(lstWords);
	}
};
TextWindow.prototype.keywordsBeforeStage_charRemoval_ij=function(intMinus,intI,intJ){
	var lstKeyword0,lstKeyword1,lstKeyword4;
	lstKeyword0=this.getWordUnderPosition(intI+intMinus,intJ);
	lstKeyword1=this.getWordUnderPosition(intI+1+intMinus,intJ);
	lstKeyword4=this.getWordUnderPosition(intI-1+intMinus,intJ);
	var beforeKeywords=[lstKeyword0,lstKeyword1,lstKeyword4];
	return beforeKeywords;
};
TextWindow.prototype.keywordsBeforeStage_charRemoval=function(intMinus){
	return this.keywordsBeforeStage_charRemoval_ij(intMinus,this.lstCursor_buffer[0],this.lstCursor_buffer[1]);
};
TextWindow.prototype.keywordsAfterStage_charRemoval_ij=function(intMinus,beforeKeywords,intI,intJ){
	var lstKeyword0,lstKeyword1,lstKeyword2,lstKeyword3,lstKeyword4;
	lstKeyword2=this.getWordUnderPosition(intI,intJ);
	lstKeyword3=this.getWordUnderPosition(intI-1,intJ);
	var lstReturn=beforeKeywords;
	lstKeyword0=lstReturn[0];
	lstKeyword1=lstReturn[1];
	lstKeyword4=lstReturn[2];
	if(null!=lstKeyword0&&null!=lstKeyword1){
		if(false==this.keywordsEqual(lstKeyword0,lstKeyword1)){
			this.decKeyword(lstKeyword0[0]);
			this.decKeyword(lstKeyword1[0]);
		}else{this.decKeyword(lstKeyword0[0]);}
	}else{
		if(null==lstKeyword0){
			if(null!=lstKeyword1){this.decKeyword(lstKeyword1[0]);}
		}else{this.decKeyword(lstKeyword0[0]);}

	}
	if(null!=lstKeyword4)if(false==this.keywordsEqual(lstKeyword4,lstKeyword0)&&false==this.keywordsEqual(lstKeyword4!=lstKeyword1)){this.decKeyword(lstKeyword4[0]);}
	if(null==lstKeyword3){
		if(null!=lstKeyword2){this.incKeyword(lstKeyword2[0]);}
	}else{this.incKeyword(lstKeyword3[0]);}
};
TextWindow.prototype.keywordsAfterStage_charRemoval=function(intMinus,beforeKeywords){
	this.keywordsAfterStage_charRemoval_ij(intMinus,beforeKeywords,this.lstCursor_buffer[0],this.lstCursor_buffer[1]);
};
TextWindow.prototype.keywordsBeforeStage_charEditing_ij=function(intMinus,intI,intJ){
	/*intMinus=+1, in inserting, 0 in replacing*/
	var lstKeyword0,lstKeyword1,lstKeyword_2;
	lstKeyword0=this.getWordUnderPosition(this.lstCursor_buffer[0]-1,this.lstCursor_buffer[1]);
	lstKeyword1=this.getWordUnderPosition(this.lstCursor_buffer[0],this.lstCursor_buffer[1]);
	if(0==intMinus)lstKeyword_2=this.getWordUnderPosition(this.lstCursor_buffer[0]+1,this.lstCursor_buffer[1]);
	else lstKeyword_2=null;
	
	var beforeKeywords=[lstKeyword0,lstKeyword1,lstKeyword_2];
	return beforeKeywords;
};
TextWindow.prototype.keywordsBeforeStage_charEditing=function(intMinus){
	return this.keywordsBeforeStage_charEditing_ij(intMinus,this.lstCursor_buffer[0],this.lstCursor_buffer[1]);
};
TextWindow.prototype.keywordsAfterStage_charEditing_ij=function(intMinus,beforeKeywords,intI,intJ){
	/*intMinus=+1, in inserting, 0 in replacing*/
	var lstKeyword1,lstKeyword2,lstKeyword_2,lstKeyword3,lstKeyword4;
	//mhdmodiff--
	var lstKeyword0;
	lstKeyword2=this.getWordUnderPosition(intI,intJ);
	lstKeyword3=this.getWordUnderPosition(intI+1,intJ);
	lstKeyword4=this.getWordUnderPosition(intI-1,intJ);
	var lstReturn=beforeKeywords;
	lstKeyword0=lstReturn[0];
	lstKeyword1=lstReturn[1];
	lstKeyword_2=lstReturn[2];
	if(null!=lstKeyword0&&null!=lstKeyword1){
		if(false==this.keywordsEqual(lstKeyword0,lstKeyword1)){
			this.decKeyword(lstKeyword0[0]);
			this.decKeyword(lstKeyword1[0]);
		}else{this.decKeyword(lstKeyword0[0]);}
	}else{
		if(null==lstKeyword0){
			if(null!=lstKeyword1){this.decKeyword(lstKeyword1[0]);}
		}else{this.decKeyword(lstKeyword0[0]);}
	}
	if(null!=lstKeyword_2)if(false==this.keywordsEqual(lstKeyword_2,lstKeyword0)&&false==this.keywordsEqual(lstKeyword_2!=lstKeyword1)){this.decKeyword(lstKeyword_2[0]);}

	if(null==lstKeyword2&&null!=lstKeyword3&&null!=lstKeyword4){
		if(false==this.keywordsEqual(lstKeyword3,lstKeyword4)){
			this.incKeyword(lstKeyword3[0]);
			lstKeyword3=null;
			this.incKeyword(lstKeyword4[0]);
			lstKeyword4=null;
		}
	}else{
		if(null!=lstKeyword2){this.incKeyword(lstKeyword2[0]);}
		else{if(null!=lstKeyword3)this.incKeyword(lstKeyword3[0]);}
	}

	if(null!=lstKeyword4)if(false==this.keywordsEqual(lstKeyword4,lstKeyword2)&&false==this.keywordsEqual(lstKeyword4,lstKeyword3)){this.incKeyword(lstKeyword4[0]);}
};
TextWindow.prototype.keywordsAfterStage_charEditing=function(intMinus,beforeKeywords){
	this.keywordsAfterStage_charEditing_ij(intMinus,beforeKeywords,this.lstCursor_buffer[0],this.lstCursor_buffer[1]);
};
TextWindow.prototype.keywordsBeforeStage_enter_ij=function(intMinus,intI,intJ){
	/*intMinus not significant, compatibility*/
	var lstWords0;
	var strPrevLine0=""+this.lstTextBuffer[intJ];
	lstWords0=this.getWordsFromLine(strPrevLine0);
	var beforeKeywords=[lstWords0];
	return beforeKeywords;
};
TextWindow.prototype.keywordsBeforeStage_enter=function(intMinus){
	return this.keywordsBeforeStage_enter_ij(intMinus,this.lstCursor_buffer[0],this.lstCursor_buffer[1]);
};
TextWindow.prototype.keywordsAfterStage_enter_ij=function(intMinus,beforeKeywords,intI,intJ){
	var lstWords0,lstWords1,lstWords2;
	var strNextLine0=""+this.lstTextBuffer[this.lstCursor_buffer[1]];
	var strNextLine1=""+this.lstTextBuffer[this.lstCursor_buffer[1]+1];
	lstWords1=this.getWordsFromLine(strNextLine0);
	lstWords2=this.getWordsFromLine(strNextLine1);
	var lstReturn=beforeKeywords;
	lstWords0=lstReturn[0];
	this.decKeywords(lstWords0);	
	this.incKeywords(lstWords1);	
	/*lstWords2 incremented in insertNewline*/
};
TextWindow.prototype.keywordsAfterStage_enter=function(intMinus,beforeKeywords){
	this.keywordsAfterStage_enter_ij(intMinus,beforeKeywords,this.lstCursor_buffer[0],this.lstCursor_buffer[1]);
};
TextWindow.prototype.insertEditingBackspace_=function(){
	if(this.lstSelectionHighlights_text.length>0){
		this.removeSelectedText();
		return;
	}
	var strLine=this.lstTextBuffer[this.lstCursor_buffer[1]];
	if(undefined==strLine)return;
	if(0==this.lstCursor_buffer[0]){
		if(this.lstCursor_buffer[1]>0){
			var intLineEnd=this.lstTextBuffer[this.lstCursor_buffer[1]-1].length;
			var strPrevLine0=""+this.lstTextBuffer[this.lstCursor_buffer[1]-1];
			var strPrevLine1=""+this.lstTextBuffer[this.lstCursor_buffer[1]];
			var beforeKeywords=this.keywordsBeforeStage_lineRemoval(-1);
			this.setLstTextBuffer(this.lstCursor_buffer[1]-1,this.lstTextBuffer[this.lstCursor_buffer[1]-1]+""+strLine);
			this.removeLine_noUndo(this.lstCursor_buffer[1]);
			this.addUndoItem([[this.lstCursor_buffer[0],this.lstCursor_buffer[1]],[intLineEnd,this.lstCursor_buffer[1]-1],[8.2,this.lstCursor_buffer[0],this.lstCursor_buffer[1],strPrevLine0,strPrevLine1]]);
			this.keywordsAfterStage_lineRemoval(-1,beforeKeywords);
			this.setLstCursor_buffer1(this.lstCursor_buffer[1]-1);
			this.setLstCursor_buffer0(intLineEnd);
		}
		this.updateWndEditing(true);
	}else{
		var beforeKeywords=this.keywordsBeforeStage_charRemoval(-1);
		this.addUndoItem([[this.lstCursor_buffer[0],this.lstCursor_buffer[1]],[this.lstCursor_buffer[0]-1,this.lstCursor_buffer[1]],[8.1,this.lstCursor_buffer[0],this.lstCursor_buffer[1],this.lstTextBuffer[this.lstCursor_buffer[1]][this.lstCursor_buffer[0]-1]]]);
		this.setLstTextBuffer(this.lstCursor_buffer[1],strLine.substring(0,this.lstCursor_buffer[0]-1)+strLine.substring(this.lstCursor_buffer[0]));
		/*this.blnModiff=true;*/
		this.setLstCursor_buffer0(this.lstCursor_buffer[0]-1);
		this.keywordsAfterStage_charRemoval(-1,beforeKeywords);
		this.updateWndEditing(true);
	}
};


TextWindow.prototype.insertEditingBackspace_fastCruncher=function(){
	var strLine=netspace.wndEditing.lstTextBuffer_fastCruncher[netspace.wndEditing.lstCursor_buffer_fastCruncher[1]];
	if(undefined==strLine)return;
	if(0==netspace.wndEditing.lstCursor_buffer_fastCruncher[0]){
		if(netspace.wndEditing.lstCursor_buffer_fastCruncher[1]>0){
			var intLineEnd=netspace.wndEditing.lstTextBuffer_fastCruncher[netspace.wndEditing.lstCursor_buffer_fastCruncher[1]-1].length;
			netspace.wndEditing.setLstTextBuffer_fastCruncher(netspace.wndEditing.lstCursor_buffer_fastCruncher[1]-1,netspace.wndEditing.lstTextBuffer_fastCruncher[netspace.wndEditing.lstCursor_buffer_fastCruncher[1]-1]+""+strLine);
			netspace.wndEditing.removeLine_fastCruncher(netspace.wndEditing.lstCursor_buffer_fastCruncher[1]);
			netspace.wndEditing.setLstCursor_buffer1_fastCruncher(netspace.wndEditing.lstCursor_buffer_fastCruncher[1]-1);
			netspace.wndEditing.setLstCursor_buffer0_fastCruncher(intLineEnd);
		}
	}else{
		netspace.wndEditing.setLstTextBuffer_fastCruncher(netspace.wndEditing.lstCursor_buffer_fastCruncher[1],strLine.substring(0,netspace.wndEditing.lstCursor_buffer_fastCruncher[0]-1)+strLine.substring(netspace.wndEditing.lstCursor_buffer_fastCruncher[0]));
		netspace.wndEditing.setLstCursor_buffer0_fastCruncher(netspace.wndEditing.lstCursor_buffer_fastCruncher[0]-1);
	}
};

TextWindow.prototype.initFastCruncher=function(blnCopyLstTextBuffer){
	netspace.wndEditing=this;
	console.log("blnCopyLstTextBuffer="+blnCopyLstTextBuffer);
	if(false==blnCopyLstTextBuffer){
		netspace.wndEditing.lstTextBuffer_fastCruncher=this.lstTextBuffer;
		netspace.wndEditing.lstCursor_buffer_fastCruncher=this.lstCursor_buffer;
	}else{
		netspace.wndEditing.lstTextBuffer_fastCruncher=netspace.wndEditing.copyStringList(this.lstTextBuffer);
		netspace.wndEditing.lstCursor_buffer_fastCruncher=netspace.wndEditing.copyList(this.lstCursor_buffer);
	}
	netspace.wndEditing.intPrevUndoRedoLimit=this.intUndoRedoLimit;
	netspace.wndEditing.intUndoRedoLimit=-1;
};
TextWindow.prototype.initFastCruncher_=function(strCommand){
	var blnCopyLstTextBuffer=false;	
	var lstCommand=strCommand.split(" ");
	if(2==lstCommand.length){
		if("true"==lstCommand[1])blnCopyLstTextBuffer=true;
		if("false"==lstCommand[1])blnCopyLstTextBuffer=false;
	}
	this.initFastCruncher(blnCopyLstTextBuffer);
};
TextWindow.prototype.freeFastCruncher=function(){
	console.log("freeFastCruncher =?=");
	if(netspace.wndEditing.lstTextBuffer_fastCruncher!=this.lstTextBuffer){
		console.log("freeFastCruncher !=");
		delete netspace.wndEditing.lstTextBuffer_fastCruncher;
		delete netspace.wndEditing.lstCursor_buffer_fastCruncher;
		this.intUndoRedoLimit=netspace.wndEditing.intPrevUndoRedoLimit;
		delete netspace.wndEditing.intPrevUndoRedoLimit;
		netspace.wndEditing=null;
	}
};
TextWindow.prototype.replaceEditingBackspace_=function(){
	if(0==this.lstCursor_buffer[0]){
		if(this.lstCursor_buffer[1]>0){
			this.setLstCursor_buffer1(this.lstCursor_buffer[1]-1);
			this.setLstCursor_buffer0(this.lstTextBuffer[this.lstCursor_buffer[1]].length);
		}
		this.updateWndEditing(true);
	}else{
		this.setLstCursor_buffer0(this.lstCursor_buffer[0]-1);
		this.updateWndEditing(true);
	}
};
TextWindow.prototype.insertEditingDelete_=function(){
	if(this.lstSelectionHighlights_text.length>0){
		this.removeSelectedText();
		return;
	}
	var strLine=this.lstTextBuffer[this.lstCursor_buffer[1]];
	if(undefined==strLine)return;
	if(0==this.lstCursor_buffer[0]&&0==strLine.length){
		if(this.lstCursor_buffer[1]>0){
			this.removeLine(this.lstCursor_buffer[1]);
			if(this.lstCursor_buffer[1]>=this.lstTextBuffer.length){
				if(this.lstCursor_buffer[1]>0)this.setLstCursor_buffer1(this.lstTextBuffer.length-1);
				else{
					this.pushLstTextBuffer("");
					/*this.blnModiff=true;*/
				}
			}
			this.updateWndEditing(true);
			return;
		}
	}
	if(strLine.length==this.lstCursor_buffer[0]){
		if(this.lstCursor_buffer[1]<this.lstTextBuffer.length-1){
			var strPrevLine0=""+this.lstTextBuffer[this.lstCursor_buffer[1]];
			var strPrevLine1=""+this.lstTextBuffer[this.lstCursor_buffer[1]+1];
			var beforeKeywords=this.keywordsBeforeStage_lineRemoval(0);
			this.setLstTextBuffer(this.lstCursor_buffer[1],strLine+this.lstTextBuffer[this.lstCursor_buffer[1]+1]);
			/*this.blnModiff=true;*/
			this.removeLine_noUndo(this.lstCursor_buffer[1]+1);
			this.addUndoItem([[this.lstCursor_buffer[0],this.lstCursor_buffer[1]],[this.lstCursor_buffer[0],this.lstCursor_buffer[1]],[127.2,this.lstCursor_buffer[0],this.lstCursor_buffer[1],strPrevLine0,strPrevLine1]]);
			this.keywordsAfterStage_lineRemoval(0,beforeKeywords);
			this.updateWndEditing(true);
			return;
		}
	}
	if(this.lstCursor_buffer[0]>=0&&this.lstCursor_buffer[0]<strLine.length){
		this.addUndoItem([[this.lstCursor_buffer[0],this.lstCursor_buffer[1]],[this.lstCursor_buffer[0],this.lstCursor_buffer[1]],[127.1,this.lstCursor_buffer[0],this.lstCursor_buffer[1],this.lstTextBuffer[this.lstCursor_buffer[1]][this.lstCursor_buffer[0]]]]);
		var beforeKeywords=this.keywordsBeforeStage_charRemoval(0);
		this.setLstTextBuffer(this.lstCursor_buffer[1],strLine.substring(0,this.lstCursor_buffer[0])+strLine.substring(this.lstCursor_buffer[0]+1));
		/*this.blnModiff=true;*/
		this.keywordsAfterStage_charRemoval(0,beforeKeywords);
		this.updateWndEditing(true);
	}
};
TextWindow.prototype.appendKeywordComplement=function(strWord,strKeyword){
	var strKeys=strKeyword.substring(strWord.length);
	for(var ii=0;ii<strKeys.length;ii++){
		this.insertEditingChar_(strKeys[ii]);
	}
};
TextWindow.prototype.backspaceKeywordComplement=function(strWord,strKeyword){
	var strKeys=strKeyword.substring(strWord.length);
	for(var ii=0;ii<strKeys.length;ii++){
		this.insertEditingBackspace_();
	}
};
TextWindow.prototype.replaceKeywordComplement=function(strWord,lstPrevCursor_buffer,strKeyword){
	var strKeys=strKeyword.substring(strWord.length);
	this.setLstCursor_buffer0(lstPrevCursor_buffer[0]);
	this.setLstCursor_buffer1(lstPrevCursor_buffer[1]);
	for(var ii=0;ii<strKeys.length;ii++){
		this.replaceEditingChar_(strKeys[ii]);
	}
};
TextWindow.prototype.showKeywordComplementsWindow=function(lstKeywordComplements,strWord,lstPrevCursor_buffer){
	var intMaxKeywordHintsWidth=10;
	var intKeywordHintsHeight=(lstKeywordComplements.length>=this.intMaxKeywordHintsHeight)?this.intMaxKeywordHintsHeight:lstKeywordComplements.length;
	var intRootY=(this.lstCursor_screen[1]+intKeywordHintsHeight<=this.base.intScreenHeight_text)?this.lstCursor_screen[1]:this.lstCursor_screen[1]-intKeywordHintsHeight;
	var strVisibleContent="";
	for(var ii=0;ii<=intKeywordHintsHeight;ii++){
		strVisibleContent+=lstKeywordComplements[ii];
		if(ii<intKeywordHintsHeight)strVisibleContent+=this.chrEnter;
	}
	var wndKeywordsHints=new TextWindow(this.computer,this.base,this.theSuper,this.lstCursor_screen[0],intRootY,intMaxKeywordHintsWidth+2,intKeywordHintsHeight+2,"",strVisibleContent,1);
	wndKeywordsHints.strPrevKeywordHint=lstKeywordComplements[0];
	wndKeywordsHints.lstKeywordComplements=lstKeywordComplements;
	wndKeywordsHints.strWord=strWord;
	wndKeywordsHints.lstPrevCursor_buffer=lstPrevCursor_buffer;
	wndKeywordsHints.intKeywordHintNumber=0;
	wndKeywordsHints.intMenuHighlight=0;
	var that=this.theSuper;
	wndKeywordsHints.doHighlight=function(chrChar,i,j){
		if(j-this.intInnerY!=this.intMenuHighlight)return false;
		return true;
	};
	wndKeywordsHints.setKeywordHintNumber=function(intKeywordHintNumber){
		this.intKeywordHintNumber=intKeywordHintNumber;
		this.intMenuHighlight=intKeywordHintNumber%this.intInnerHeight;
		var intFirstElement=intKeywordHintNumber-this.intMenuHighlight;
		for(var ii=0;ii<=this.intInnerHeight;ii++){
			if(intFirstElement+ii<this.lstKeywordComplements.length){
				this.lstTextBuffer[ii]=this.lstKeywordComplements[intFirstElement+ii];
			}else this.lstTextBuffer[ii]="";
		}
		this.updateWndEditing(true);
		
	};
	wndKeywordsHints.onKeyDown=function(evtKey){
		switch(evtKey.key){
			case "Enter":
				that.wndEditing.backspaceKeywordComplement(this.strWord,this.strPrevKeywordHint);
				that.wndEditing.appendKeywordComplement(this.strWord,this.lstKeywordComplements[this.intKeywordHintNumber]);
				this.strPrevKeywordHint=this.lstKeywordComplements[this.intKeywordHintNumber];
				that.lstTextWindows.splice(that.lstTextWindows.indexOf(this),1);
				this.addCursorHistoryUndoItem(false);
				return true;
			break;
			case "ArrowUp":
				if(this.intKeywordHintNumber>0)
					this.setKeywordHintNumber(--this.intKeywordHintNumber);
				return true;
			break;
			case "ArrowRight":
				return false;
			break;
			case "ArrowDown":
				if(this.intKeywordHintNumber<this.lstKeywordComplements.length-1)
					this.setKeywordHintNumber(++this.intKeywordHintNumber);
				return true;
			break;
			case "ArrowLeft":
				return false;
			break;
			default:
				that.wndEditing.insertEditingChar(evtKey);
				that.lstTextWindows.splice(that.lstTextWindows.indexOf(this),1);
				this.addCursorHistoryUndoItem(false);
				return true;
			break;
		}
		return false;
	};
	this.theSuper.lstTextWindows.push(wndKeywordsHints);
	this.theSuper.bringToFront(wndKeywordsHints);
};
TextWindow.prototype.computeKeywordComplements=function(strKeyword0){
	var lstKeywordComplements=[];
	//mhdmodiff--
	//for(strKey in this.dctKeywords){
	for(var strKey in this.dctKeywords){
		if(strKey.substring(0,strKeyword0.length)==strKeyword0&&strKey!=strKeyword0)lstKeywordComplements.push(strKey);
	}
	return lstKeywordComplements;
};
TextWindow.prototype.sortMostPopularFirst=function(lstKeywordComplements){
	var lstSortedKeywordHints=[];
	var lstSortedKeywordPopularities=[];
	var intActualPopularity=0;
	var intKeywordPopularity=0;
	var strKeywordHint="";
	var blnKeywordHintInserted=false;
	for(var ii=0;ii<lstKeywordComplements.length;ii++){
		blnKeywordHintInserted=false;
		strKeywordHint=lstKeywordComplements[ii];
		intKeywordPopularity=this.dctKeywords[strKeywordHint];
		for(var jj=0;jj<lstSortedKeywordHints.length;jj++){
			if(lstSortedKeywordPopularities[jj]<=intKeywordPopularity){
				lstSortedKeywordHints.push(lstSortedKeywordHints[lstSortedKeywordHints.length-1]);
				lstSortedKeywordPopularities.push(lstSortedKeywordPopularities[lstSortedKeywordPopularities.length-1]);
				for(var kk=lstSortedKeywordHints.length-2;kk>=jj;kk--){
					lstSortedKeywordHints[kk+1]=lstSortedKeywordHints[kk];
					lstSortedKeywordPopularities[kk+1]=lstSortedKeywordPopularities[kk];
				}
				lstSortedKeywordHints[jj]=strKeywordHint;
				lstSortedKeywordPopularities[jj]=intKeywordPopularity;
				blnKeywordHintInserted=true;
				break;
			}
		}
		if(false==blnKeywordHintInserted){
			lstSortedKeywordHints.push(strKeywordHint);
			lstSortedKeywordPopularities.push(intKeywordPopularity);
		}
	}
	return lstSortedKeywordHints;
};
TextWindow.prototype.keywordsHints=function(){
	var lstKeyword0=this.getWordUnderPosition(this.lstCursor_buffer[0]-1,this.lstCursor_buffer[1]);
	var lstPrevCursor_buffer=this.copyList(this.lstCursor_buffer);
	if(null!=lstKeyword0){
		var lstKeywordComplements=this.computeKeywordComplements(lstKeyword0[0]);
		if(lstKeywordComplements.length>0){
			lstKeywordComplements=this.sortMostPopularFirst(lstKeywordComplements);
			this.appendKeywordComplement(lstKeyword0[0],lstKeywordComplements[0]);
			if(lstKeywordComplements.length>1){
				this.showKeywordComplementsWindow(lstKeywordComplements,lstKeyword0[0],lstPrevCursor_buffer);
			}
		}
	}
	
};
TextWindow.prototype.insertEditingChar_=function(chrKey){
	if(this.lstSelectionHighlights_text.length>0){
		this.removeSelectedText();
	}
	var strLine=this.lstTextBuffer[this.lstCursor_buffer[1]];
	var beforeKeywords=this.keywordsBeforeStage_charEditing(1);

	this.addUndoItem([[this.lstCursor_buffer[0],this.lstCursor_buffer[1]],[this.lstCursor_buffer[0]+1,this.lstCursor_buffer[1]],[1,this.lstCursor_buffer[0],this.lstCursor_buffer[1],chrKey]]);
	this.setLstTextBuffer(this.lstCursor_buffer[1],strLine.substring(0,this.lstCursor_buffer[0])+chrKey+strLine.substring(this.lstCursor_buffer[0]));
	/*this.blnModiff=true;*/
	this.keywordsAfterStage_charEditing(1,beforeKeywords);
	this.setLstCursor_buffer0(this.lstCursor_buffer[0]+chrKey.length);
	this.updateWndEditing(true);
};
TextWindow.prototype.insertEditingChar_slower=function(chrKey){
	if(this.lstSelectionHighlights_text.length>0){
		this.removeSelectedText();
	}
	var strLine=this.lstTextBuffer[this.lstCursor_buffer[1]];
	var beforeKeywords=this.keywordsBeforeStage_sublineModiffPro(this.lstTextBuffer[this.lstCursor_buffer[1]],this.lstCursor_buffer[0],this.lstCursor_buffer[0]);

	this.addUndoItem([[this.lstCursor_buffer[0],this.lstCursor_buffer[1]],[this.lstCursor_buffer[0]+1,this.lstCursor_buffer[1]],[1,this.lstCursor_buffer[0],this.lstCursor_buffer[1],chrKey]]);
	this.setLstTextBuffer(this.lstCursor_buffer[1],strLine.substring(0,this.lstCursor_buffer[0])+chrKey+strLine.substring(this.lstCursor_buffer[0]));
	/*this.blnModiff=true;*/
	this.keywordsAfterStage_sublineModiffPro(this.lstTextBuffer[this.lstCursor_buffer[1]],beforeKeywords,this.lstCursor_buffer[0]+1,this.lstCursor_buffer[0]+1);
	this.setLstCursor_buffer0(this.lstCursor_buffer[0]+1);
	this.updateWndEditing(true);
};

TextWindow.prototype.insertEditingChar_fastCruncher=function(chrKey){
	var strLine=netspace.wndEditing.lstTextBuffer_fastCruncher[netspace.wndEditing.lstCursor_buffer_fastCruncher[1]];
	netspace.wndEditing.setLstTextBuffer_fastCruncher(netspace.wndEditing.lstCursor_buffer_fastCruncher[1],strLine.substring(0,netspace.wndEditing.lstCursor_buffer_fastCruncher[0])+chrKey+strLine.substring(netspace.wndEditing.lstCursor_buffer_fastCruncher[0]));
	netspace.wndEditing.setLstCursor_buffer0_fastCruncher(netspace.wndEditing.lstCursor_buffer_fastCruncher[0]+chrKey.length);
};

TextWindow.prototype.prependTab_fastCruncher=function(){
	var strLine=netspace.wndEditing.lstTextBuffer_fastCruncher[netspace.wndEditing.lstCursor_buffer_fastCruncher[1]];
	var strNewline=String.fromCharCode(9)+strLine;
	netspace.wndEditing.setLstTextBuffer_fastCruncher(netspace.wndEditing.lstCursor_buffer_fastCruncher[1],strNewline);
	netspace.wndEditing.setLstCursor_buffer0_fastCruncher(netspace.wndEditing.lstCursor_buffer_fastCruncher[0]+1);
};
TextWindow.prototype.replaceEditingChar_=function(chrKey){
	var strLine=this.lstTextBuffer[this.lstCursor_buffer[1]];
	var chrPrevKey=strLine[this.lstCursor_buffer[0]];
	var chrNextKey=""+chrKey;
	var beforeKeywords=this.keywordsBeforeStage_charEditing(0);
	this.addUndoItem([[this.lstCursor_buffer[0],this.lstCursor_buffer[1]],[this.lstCursor_buffer[0]+1,this.lstCursor_buffer[1]],[2,this.lstCursor_buffer[0],this.lstCursor_buffer[1],chrPrevKey,chrNextKey]]);
	this.setLstTextBuffer(this.lstCursor_buffer[1],strLine.substring(0,this.lstCursor_buffer[0])+chrKey+strLine.substring(this.lstCursor_buffer[0]+1));
	/*this.blnModiff=true;*/
	this.keywordsAfterStage_charEditing(0,beforeKeywords);
	this.setLstCursor_buffer0(this.lstCursor_buffer[0]+chrKey.length);
	this.updateWndEditing(true);
};
TextWindow.prototype.insertEditingChar__=function(evtEvent){
	var chrKey=evtEvent.key;
	if("CapsLock"==evtEvent.key)return false;
	if(true==evtEvent.altKey&&("n"==evtEvent.key||"h"==evtEvent.key)){
		this.keywordsHints();
		return true;
	}
	if("Enter"==chrKey){
		this.insertEditingEnter_();
		return true;
	}
	if("Backspace"==chrKey){
		this.insertEditingBackspace_();
		return true;
	}
	if("Delete"==chrKey){
		this.insertEditingDelete_();
		return true;
	}
	if(1==chrKey.length||chrKey.charCodeAt(0)>255){
		this.insertEditingChar_(chrKey);
		return true;
	}
	if("Tab"==evtEvent.key){
		this.insertEditingChar_(String.fromCharCode(9));
		return true;
	}
};
TextWindow.prototype.replaceEditingChar__=function(evtEvent){
	var chrKey=evtEvent.key;
	if("CapsLock"==evtEvent.key)return false;
	if(true==evtEvent.altKey&&("n"==evtEvent.key||"h"==evtEvent.key)){
		this.keywordsHints();
		return true;
	}
	if("Enter"==chrKey){
		this.insertEditingEnter_();
		return true;
	}
	if("Backspace"==chrKey){
		this.replaceEditingBackspace_();
		return true;
	}
	if("Delete"==chrKey){
		this.insertEditingDelete_();
		return true;
	}
	if(1==chrKey.length||chrKey.charCodeAt(0)>255){
		this.replaceEditingChar_(chrKey);
		return true;
	}
	if("Tab"==evtEvent.key){
		this.replaceEditingChar_(String.fromCharCode(9));
		return true;
	}
};
TextWindow.prototype.insertEditingChar=function(evtEvent){
	if(false==this.blnReplaceMode)
		this.insertEditingChar__(evtEvent);
	else this.replaceEditingChar__(evtEvent);
	this.addCursorHistoryUndoItem(false);
};
TextWindow.prototype.isDigit=function(chrChar){
	var intCharCode=chrChar.charCodeAt(0);
	if(intCharCode>=48&&intCharCode<=57)return true;
	return false;
};
TextWindow.prototype.wordCharacter=function(chrChar){
	if(undefined==chrChar)return false;
	var intCharCode=chrChar.charCodeAt(0);
	if(intCharCode>=48&&intCharCode<=57)return true;
	if(intCharCode>=65&&intCharCode<=90)return true;
	if(intCharCode>=97&&intCharCode<=122)return true;
	return false;
};
TextWindow.prototype.isDigitOnly=function(strWord){
	var blnDigitOnly=true;
	for (var ii=0;ii<strWord.length;ii++)
		if(false==this.isDigit(strWord[ii]))blnDigitOnly=false;
	return blnDigitOnly;
};
TextWindow.prototype.notAkeyword=function(strWord){
	for(var ii=0;ii<strWord.length;ii++)
		if(false==this.wordCharacter(strWord[ii]))return true;
	if(true==this.isDigitOnly(strWord))return true;
	return false;
};
TextWindow.prototype.whitespaceChar=function(chrChar){
	/*if(undefined==chrChar)return false;*/
	if(String.fromCharCode(32)==chrChar)return true;
	if(String.fromCharCode(9)==chrChar)return true;
	return false;
};
TextWindow.prototype.getWordUnderPositionFromString=function(strLine,intPositionI){
	if(undefined==strLine)return null;
	if(undefined==strLine[intPositionI])return null;
	if(false==this.wordCharacter(strLine[intPositionI]))return null;		
	var intWordStart=0,intWordEnd=strLine.length-1;
	for(var ii=intPositionI;ii<strLine.length;ii++)
		if(false==this.wordCharacter(strLine[ii])){intWordEnd=ii-1;break;}
	for(var ii=intPositionI;ii>=0;ii--){
		if(false==this.wordCharacter(strLine[ii])){intWordStart=ii+1;break;}
	}
	return [strLine.substring(intWordStart,intWordEnd+1),intWordStart,intWordEnd];
};
TextWindow.prototype.getTokenUnderPositionFromString=function(strLine,intPositionI){
	if(undefined==strLine)return null;
	if(undefined==strLine[intPositionI])return null;
	var intWordStart=0,intWordEnd=strLine.length-1;
	for(var ii=intPositionI;ii<strLine.length;ii++)
		if(false==this.wordCharacter(strLine[ii])){intWordEnd=ii-1;break;}
	for(var ii=intPositionI;ii>=0;ii--){
		if(false==this.wordCharacter(strLine[ii])){intWordStart=ii+1;break;}
	}
	return [strLine.substring(intWordStart,intWordEnd+1),intWordStart,intWordEnd];
};
TextWindow.prototype.computeInfluencedKeywordsSubstring=function(strLine,intFrom,intTo){
	var fromKeyword=this.getTokenUnderPositionFromString(strLine,intFrom);
	var toKeyword=this.getTokenUnderPositionFromString(strLine,intTo);
	var intFrom,intTo;
	if(null!=fromKeyword){
		intFrom=fromKeyword[1];
	}else{
		intFrom=0;
	}

	if(null!=toKeyword){
		intTo=toKeyword[2];
	}else{
		intTo=strLine.length-1;
	}
	return strLine.substring(intFrom,intTo+1);
};
TextWindow.prototype.getWordUnderPosition=function(intPositionI,intPositionJ){
	var strLine=this.lstTextBuffer[intPositionJ];
	return this.getWordUnderPositionFromString(strLine,intPositionI);
};
TextWindow.prototype.keywordsEqual=function(lstKeyword0,lstKeyword1){
	if(null==lstKeyword0){
		if(null==lstKeyword1)return true;
		else return false;
	}
	if(null==lstKeyword1)return false;
	if(lstKeyword0[0]!=lstKeyword1[0])return false;
	if(lstKeyword0[1]!=lstKeyword1[1])return false;
	if(lstKeyword0[2]!=lstKeyword1[2])return false;
	return true;
};
TextWindow.prototype.getWordsFromLine=function(strLine){
	var lstWords=[];
	if(undefined==strLine)return [];
	var lstWord;
	var intPositionI=0;
	var strWord=null;;
	while(intPositionI<strLine.length){	
		lstWord=this.getWordUnderPositionFromString(strLine,intPositionI);
		if(null==lstWord)intPositionI++;
		else{
			lstWords.push(lstWord);
			intPositionI+=lstWord[0].length;
		}
	};
	return lstWords;
	
};
TextWindow.prototype.getNextWordPosition=function(intActualPositionI,intActualPositionJ){
	var strLine=this.lstTextBuffer[intActualPositionJ];
	if(true==this.whitespaceChar(strLine[intActualPositionI])){
		for(var ii=intActualPositionI+1;ii<strLine.length;ii++){
			if(false==this.whitespaceChar(strLine[ii]))
				return ii;
		}
	}else{
		for(var ii=intActualPositionI;ii<strLine.length;ii++){
			if(false==this.wordCharacter(strLine[ii]))if(intActualPositionI!=ii)return ii;else return ii+1;
		}
	}
	return strLine.length;
};
TextWindow.prototype.getPrevWordPosition=function(intActualPositionI,intActualPositionJ){
	var strLine=this.lstTextBuffer[intActualPositionJ];
	if(true==this.whitespaceChar(strLine[intActualPositionI])){
		for(var ii=intActualPositionI-1;ii>=0;ii--){
			if(undefined==strLine[ii]||false==this.whitespaceChar(strLine[ii]))
				return ii;
		}
	}else{
		for(var ii=intActualPositionI;ii>=0;ii--){
			if(undefined==strLine[ii]||false==this.wordCharacter(strLine[ii])){
				if(intActualPositionI==ii)return ii-1;
				if(intActualPositionI-1==ii)return ii;
				return ii+1;
			}
		}
	}
	return -1;
};
TextWindow.prototype.getPrevWordStartingPosition=function(intActualPositionI,intActualPositionJ){
	var strLine=this.lstTextBuffer[intActualPositionJ];
	if(true==this.whitespaceChar(strLine[intActualPositionI])){
		for(var ii=intActualPositionI-1;ii>=0;ii--){
			if(false==this.whitespaceChar(strLine[ii]))
				return ii;
		}
	}else{
		for(var ii=intActualPositionI;ii>=0;ii--){
			if(false==this.wordCharacter(strLine[ii])){
				if(intActualPositionI==ii){
					return this.getPrevWordStartingPosition(ii-1,intActualPositionJ);;
				}
				if(intActualPositionI-1==ii){
					return ii;
				}
				return ii+1;
			}
		}
	}
	return -1;
};
TextWindow.prototype.moveToThePreviousCursorPosition=function(){
	if(-1==this.intUndoRedoLimit)return;
	if(2>this.lstCursorUndoHistory.length)return;
	var lstEntry=this.lstCursorUndoHistory.pop();
	this.addCursorHistoryRedoItem(lstEntry);
	lstEntry=this.lstCursorUndoHistory.pop();
	this.addCursorHistoryRedoItem(lstEntry);
	
	this.setLstCursor_buffer(lstEntry[0][0],lstEntry[0][1]);
	this.updateWndEditing(true);
};
TextWindow.prototype.moveToTheNextCursorPosition=function(){
	if(-1==this.intUndoRedoLimit)return;
	if(0==this.lstCursorRedoHistory.length)return;
	var lstEntry=this.lstCursorRedoHistory.pop();
	this.addCursorHistoryUndoItem_dontClearRedo(lstEntry);
	lstEntry=this.lstCursorRedoHistory.pop();
	this.addCursorHistoryUndoItem_dontClearRedo(lstEntry);
	this.setLstCursor_buffer(lstEntry[0][0],lstEntry[0][1]);
	this.updateWndEditing(true);
};
TextWindow.prototype.moveWordForward=function(){
	var strLine=this.lstTextBuffer[this.lstCursor_buffer[1]];
	if(undefined==strLine)return;
	if(0==strLine.length&&this.lstCursor_buffer[1]<this.lstTextBuffer.length-1){
		this.setLstCursor_buffer1(this.lstCursor_buffer[1]+1);
		this.setLstCursor_buffer0(this.indentSizeToPreserve(this.lstCursor_buffer[1]));
		this.updateWndEditing(true);
		return;
	}
	var intNextWordPosition=this.getNextWordPosition(this.lstCursor_buffer[0],this.lstCursor_buffer[1]);
	if(intNextWordPosition<strLine.length){
		this.setLstCursor_buffer0(intNextWordPosition);
	}
	else{
		if(intNextWordPosition-this.lstCursor_buffer[0]>=2){
			this.setLstCursor_buffer0(strLine.length-1);
			this.updateWndEditing(true);
			return;
		}
		if(this.lstCursor_buffer[1]<this.lstTextBuffer.length-1){
			this.setLstCursor_buffer1(this.lstCursor_buffer[1]+1);
			this.setLstCursor_buffer0(this.indentSizeToPreserve(this.lstCursor_buffer[1]));
		}
	}
	this.updateWndEditing(true);
};
TextWindow.prototype.moveWordBackward=function(){
	var strLine=this.lstTextBuffer[this.lstCursor_buffer[1]];
	var intIndentSize;
	if(undefined==strLine)return;
	if(0==strLine.length&&this.lstCursor_buffer[1]>0){
		this.setLstCursor_buffer1(this.lstCursor_buffer[1]-1);
		this.setLstCursor_buffer0(this.lstTextBuffer[this.lstCursor_buffer[1]].length);
		this.updateWndEditing(true);
		return;
	}
	var intPrevWordPosition=this.getPrevWordPosition(this.lstCursor_buffer[0],this.lstCursor_buffer[1]);
	if(intPrevWordPosition>=0)
		if(this.lstCursor_buffer[1]>0){
			intIndentSize=this.indentSizeToPreserve(this.lstCursor_buffer[1]);
			if(intPrevWordPosition>=intIndentSize){
				this.setLstCursor_buffer0(intPrevWordPosition);
			}else{
				this.setLstCursor_buffer1(this.lstCursor_buffer[1]-1);
				if(this.lstTextBuffer[this.lstCursor_buffer[1]].length>0)
					this.setLstCursor_buffer0(this.lstTextBuffer[this.lstCursor_buffer[1]].length-1);
				else this.setLstCursor_buffer0(0);
			}
		}else this.setLstCursor_buffer0(intPrevWordPosition);
	else{
		if(this.lstCursor_buffer[1]>0){
			this.setLstCursor_buffer1(this.lstCursor_buffer[1]-1);
			if(this.lstTextBuffer[this.lstCursor_buffer[1]].length>0)
				this.setLstCursor_buffer0(this.lstTextBuffer[this.lstCursor_buffer[1]].length-1);
			else this.setLstCursor_buffer0(0);
		}
	}
	this.updateWndEditing(true);
};
TextWindow.prototype.searchForwardNextStringPosition=function(strFind,intCursorI,intCursorJ){
	var blnFoundOnce=false;
	var strLine;
	var intIndex=-1;
	var intI=intCursorI;
	for(var j=intCursorJ;j<this.lstTextBuffer.length;j++){
		strLine=this.lstTextBuffer[j];
		if(undefined==strLine)return null;
		intIndex=strLine.substring(intI).indexOf(strFind);
		if(-1!=intIndex)return [intI+intIndex,j];
		intI=0;
	}
	for(var j=0;j<intCursorJ+1;j++){
		strLine=this.lstTextBuffer[j];
		if(undefined==strLine)return null;
		intIndex=strLine.substring(intI).indexOf(strFind);
		if(-1!=intIndex)return [intIndex,j];
		intI=0;
	}
	return null;
};
TextWindow.prototype.searchForwardNextStringPosition_fastCruncher=function(strFind,intCursorI,intCursorJ){
	var blnFoundOnce=false;
	var strLine;
	var intIndex=-1;
	var intI=intCursorI;
	for(var j=intCursorJ;j<netspace.wndEditing.lstTextBuffer_fastCruncher.length;j++){
		strLine=netspace.wndEditing.lstTextBuffer_fastCruncher[j];
		if(undefined==strLine)return null;
		intIndex=strLine.substring(intI).indexOf(strFind);
		if(-1!=intIndex){
			strLine=null;
			return [intI+intIndex,j];
		}
		intI=0;
	}
	for(var j=0;j<intCursorJ+1;j++){
		strLine=netspace.wndEditing.lstTextBuffer_fastCruncher[j];
		if(undefined==strLine)return null;
		intIndex=strLine.substring(intI).indexOf(strFind);
		if(-1!=intIndex){
			strLine=null;
			return [intIndex,j];
		}
		intI=0;
	}
	return null;
};




TextWindow.prototype.backwardIndexOf=function(strLine,strSearchString){
	var intCharsMatch=0;
	for(var jj=strLine.length-strSearchString.length-1;jj>=0;jj--){
		intCharsMatch=0;
		for(var ii=0;ii<strSearchString.length;ii++){
			if(strLine[jj+ii]==strSearchString[ii]){
				intCharsMatch++;
			}else break;
		}
		if(strSearchString.length==intCharsMatch)
			return jj;
	}
	return -1;
};
TextWindow.prototype.searchBackwardNextStringPosition=function(strFind,intCursorI,intCursorJ){
	var blnFoundOnce=false;
	var strLine;
	var intIndex=-1;
	var intI=intCursorI;
	for(var j=intCursorJ;j>=0;j--){
		strLine=this.lstTextBuffer[j];
		if(undefined==strLine)return null;
		intIndex=this.backwardIndexOf(strLine.substring(0,intI),strFind);
		if(-1!=intIndex)return [intIndex,j];
		if(j>0)intI=this.lstTextBuffer[j-1].length;
	}
	intI=this.lstTextBuffer[this.lstTextBuffer.length-1].length;
	for(var j=this.lstTextBuffer.length-1;j>=intCursorJ;j--){
		strLine=this.lstTextBuffer[j];
		if(undefined==strLine)return null;
		intIndex=this.backwardIndexOf(strLine.substring(0,intI),strFind);
		if(-1!=intIndex)return [intIndex,j];
		intI=this.lstTextBuffer[j-1].length;
	}
	return null;
};
TextWindow.prototype.gotoString=function(strFind){
	this.strSearchString=strFind;	
	var lstNextPos=this.searchForwardNextStringPosition(strFind,this.lstCursor_buffer[0],this.lstCursor_buffer[1]);
	if(null==lstNextPos)return false;
	this.setLstCursor_buffer0(lstNextPos[0]);
	this.setLstCursor_buffer1(lstNextPos[1]);
	this.addCursorHistoryUndoItem(true);
	this.updateWndEditing(true);
	return true;
};
TextWindow.prototype.gotoNextString_=function(intCursorI,intCursorJ){
	if(""==this.strSearchString)return;
	var strFind=this.strSearchString;
	var intNextI,intNextJ;
	var strLine=this.lstTextBuffer[intCursorJ];
	if(undefined==strLine)return false;
	if(intCursorI<strLine.length-1){
		intNextI=intCursorI+1;
		intNextJ=intCursorJ;
	}else{
		if(intCursorJ<this.lstTextBuffer.length-1){
			intNextI=0;
			intNextJ=intCursorJ+1;
		}else{
			intNextI=0;
			intNextJ=0;
		}
	}
	var lstNextPos=this.searchForwardNextStringPosition(strFind,intNextI,intNextJ);
	if(null==lstNextPos)return false;
	this.setLstCursor_buffer0(lstNextPos[0]);
	this.setLstCursor_buffer1(lstNextPos[1]);
	this.addCursorHistoryUndoItem(true);
	this.updateWndEditing(true);
	return true;
};
TextWindow.prototype.gotoNextString=function(){
	this.gotoNextString_(this.lstCursor_buffer[0],this.lstCursor_buffer[1]);
};
TextWindow.prototype.gotoPrevString=function(){
	if(""==this.strSearchString)return;
	var strFind=this.strSearchString;
	var intNextI,intNextJ;
	var strLine=this.lstTextBuffer[this.lstCursor_buffer[1]];
	if(undefined==strLine)return false;

	if(this.lstCursor_buffer[0]>0){
		intNextI=this.lstCursor_buffer[0]-1;
		intNextJ=this.lstCursor_buffer[1];
	}else{
		if(this.lstCursor_buffer[1]>0){
			intNextJ=this.lstCursor_buffer[1]-1;
			intNextI=this.lstTextBuffer[intNextJ].length-1;
		}else{
			intNextJ=this.lstTextBuffer.length-1;
			intNextI=this.lstTextBuffer[intNextJ].length-1;
		}

	}
	var lstPrevPos=this.searchBackwardNextStringPosition(strFind,intNextI,intNextJ);
	if(null==lstPrevPos)return false;
	this.setLstCursor_buffer0(lstPrevPos[0]);
	this.setLstCursor_buffer1(lstPrevPos[1]);
	this.addCursorHistoryUndoItem(true);
	this.updateWndEditing(true);
	return true;
};
TextWindow.prototype.getWordUnderCursor=function(){
	var intIstart, intIend;
	var strLine=this.lstTextBuffer[this.lstCursor_buffer[1]];
	if(undefined==strLine)return null;
	if(false==this.wordCharacter(strLine[this.lstCursor_buffer[0]])){
		return null;
	}
	for(var i=this.lstCursor_buffer[0];i<strLine.length;i++){
		if(false==this.wordCharacter(strLine[i])){
			intIend=i;
			break;
		}
	}
	for(var i=this.lstCursor_buffer[0];i>=0;i--){
		if(false==this.wordCharacter(strLine[i])){
			intIstart=i+1;
			break;
		}
	}
	return strLine.substring(intIstart,intIend);
};
TextWindow.prototype.gotoDefinition=function(){
	var strWord=this.getWordUnderCursor();
	if(null==strWord)return;
	this.strSearchString=strWord;
	this.gotoNextString_(0,1);
};
var InchesKeyboard=function(textEditor){
	this.textEditor=textEditor;
	this.blnWordChoiceMode=false;
	this.strReplaceEntry=null;
	this.intReplaceEntryIndex=null;
	this.intReplaceEntrySubindex=null;
	this.strTextBefore="";
     	this.strTextOnCursor="";
     	this.strTextAfter="";
	this.intPrevCursorPos=-1;
	this.varDictionary=null;
     	this.varDictionaryKeys=null;
	this.varDictionaryEntries=null;
	this.wndKeywordsHints=null;
};
InchesKeyboard.prototype.inits=function(){
	netspace.computer.inchesKeyboard=this;
	this.openFile(this.loadDictionaryFile);
};
InchesKeyboard.prototype.changeChkInches=function(){
	netspace.computer.blnInchesKeyboardMode=!netspace.computer.blnInchesKeyboardMode;
	var chkInchesKeyboard1=document.getElementById("chkInchesKeyboard1");
	var chkInchesKeyboard2=document.getElementById("chkInchesKeyboard2");
	if(undefined!=chkInchesKeyboard1)
		chkInchesKeyboard1.checked=netspace.computer.blnInchesKeyboardMode;
	if(undefined!=chkInchesKeyboard2)
		chkInchesKeyboard2.checked=netspace.computer.blnInchesKeyboardMode;
	this.chkInchesChanged();
};
InchesKeyboard.prototype.chkInchesChanged=function(){
	if(null==this.varDictionary){
		this.inits();
	}
	if(false==netspace.computer.blnInchesKeyboardMode)
		this.blnWordChoiceModeEqFalse();
	this.resetStrTexts();
};
InchesKeyboard.prototype.getString=function(strSubstring){
	var int34_0,int34_1,int39_0,int39_1;
	int34_0=strSubstring.indexOf(String.fromCharCode(34));
	int34_1=strSubstring.substring(int34_0+1).indexOf(String.fromCharCode(34));
	int39_0=strSubstring.indexOf(String.fromCharCode(39));
	int39_1=strSubstring.substring(int39_0+1).indexOf(String.fromCharCode(39));
	if(!((-1!=int34_0&&-1!=int34_1)||(-1!=int39_0&&-1!=int39_1))){
		console.log(strSubstring+ "not a substring");
		return null;
	}
	if(-1!=int34_0){
		int34_1+=int34_0+1;
		return strSubstring.substring(int34_0+1,int34_1);
	}else{
		int39_1+=int39_0+1;
		return strSubstring.substring(int39_0+1,int39_1);
	}
};
InchesKeyboard.prototype.getLastIndexOf=function(strSubstring,strSearch){
	var intIndex=strSubstring.indexOf(strSearch);
	if(-1==intIndex)return -1;
	//mhdmodiff--
	//intPrevIndex=intIndex;
	var intPrevIndex=intIndex;
	while(-1!=intIndex){
		intIndex=strSubstring.substring(intPrevIndex+1).indexOf(strSearch);
		if(-1!=intIndex)intPrevIndex+=(intIndex+1);
	}
	return intPrevIndex;
};
InchesKeyboard.prototype.getFirstList=function(strSubstring){
	var lstReturn=[];
	var int91,int93;
	int91=strSubstring.indexOf("[");
	int93=strSubstring.indexOf("]");
	if(-1==int91||-1==int93||int91>=int93){
		return [null,null];
	}
	var strList=strSubstring.substring(int91+1,int93);
	var lstList=strList.split(",");
	for(var ii=0;ii<lstList.length;ii++){
		lstReturn.push(this.getString(lstList[ii]));
	}
	return [lstReturn,int93+1];
};
InchesKeyboard.prototype.getLists=function(strSubstring){
	var lstReturn=[];
	var int91,int93;
	int91=strSubstring.indexOf("[");
	int93=this.getLastIndexOf(strSubstring,"]");
	if(-1==int91||-1==int93||int91==int93){
		console.log(strSubstring+ " not a list of lists");
		return;
	}
	var strList=strSubstring.substring(int91+1,int93);
	var lstSublist,intNewSearchPosition;
	[lstSublist,intNewSearchPosition]=this.getFirstList(strList);
	while(null!=lstSublist){
		lstReturn.push(lstSublist);
		strList=strList.substring(intNewSearchPosition);
		[lstSublist,intNewSearchPosition]=this.getFirstList(strList);
	}
	return lstReturn;
};
InchesKeyboard.prototype.parseContents=function(contents){
	//mhdmodiff--
	//varDictionary={};
	var varDictionary={};
	var int123,int125,int58;
	int123=contents.indexOf("{");
	int125=contents.indexOf("}");
	var strContents=contents.substring(int123+1,int125-1);
	var lstLines=strContents.split(String.fromCharCode(10));
	var strLine,strKey,lstValues;
	for(var ii=0;ii<lstLines.length;ii++){
		strLine=lstLines[ii];
		int58=strLine.indexOf(":");
		if(-1==int58)continue;
		strKey=this.getString(strLine.substring(0,int58));
		if(0==strKey.length)continue;
		if(","==strKey)continue;
		lstValues=this.getLists(strLine.substring(int58+1));
		if(undefined==varDictionary[strKey]){
			varDictionary[strKey]=[];
			for(var jj=0;jj<lstValues.length;jj++)
				varDictionary[strKey].push(lstValues[jj]);
		}else for(var jj=0;jj<lstValues.length;jj++)
				varDictionary[strKey].push(lstValues[jj]);

	}
	/*console.log("varDictionary");
	console.log(varDictionary);*/
	return varDictionary;
};
InchesKeyboard.prototype.loadDictionaryFile=function(contents) {
     	var that=netspace.computer.inchesKeyboard;
	//mhdmodiff--
	var strContent;
	/*that.varDictionary=JSON.parse(contents);*/
	var intFirst123=contents.indexOf("{");
	var intSecond123=contents.substring(intFirst123+1).indexOf("{");
	if(-1!=intSecond123)strContent=contents.substring(intFirst123,intSecond123);
	else strContent=contents.substring(intFirst123);
	that.varDictionary=that.parseContents(contents);
	that.varDictionaryKeys=Object.keys(that.varDictionary);
};
InchesKeyboard.prototype.clickElem=function(elem){
        var eventMouse=document.createEvent("MouseEvents");
        eventMouse.initMouseEvent("click",true,false,window,0,0,0,0,0,false,false,false,false,0,null);
        elem.dispatchEvent(eventMouse);
};
InchesKeyboard.prototype.openFile=function(func){
	//mhdmodiff--
	//readFile=function(e) {
	var readFile=function(e) {
		var file = e.target.files[0];
		if (!file) {
			return;
		}       
		var reader= new FileReader();

		reader.onload=function(e) {
			var contents=e.target.result;
			fileInput.func(contents);
			document.body.removeChild(fileInput);
		};
		reader.readAsText(file);
	};
	var fileInput=document.createElement("input");
	fileInput.type='file';
	fileInput.style.display='none';
	fileInput.onchange=readFile;
	fileInput.func=func;
	document.body.appendChild(fileInput);
	this.clickElem(fileInput);
};
InchesKeyboard.prototype.showKeywordComplementsWindow=function(lstKeywordComplements,intKeywordHintNumber){
	var intMaxKeywordHintsWidth=10;
	var intKeywordHintsHeight=(lstKeywordComplements.length>=this.textEditor.wndEditing.intMaxKeywordHintsHeight)?this.textEditor.wndEditing.intMaxKeywordHintsHeight:lstKeywordComplements.length;
	var intRootY=(this.textEditor.wndEditing.lstCursor_screen[1]+intKeywordHintsHeight<=this.textEditor.base.intScreenHeight_text)?(this.textEditor.wndEditing.lstCursor_screen[1]+1):(this.textEditor.wndEditing.lstCursor_screen[1]+1-intKeywordHintsHeight);
	var strVisibleContent="";
	for(var ii=0;ii<=intKeywordHintsHeight;ii++){
		strVisibleContent+=lstKeywordComplements[ii];
		if(ii<intKeywordHintsHeight)strVisibleContent+=this.textEditor.wndEditing.chrEnter;
	}
	this.wndKeywordsHints=new TextWindow(netspace.computer,this.textEditor.base,this.textEditor.wndEditing,this.textEditor.wndEditing.lstCursor_screen[0]+1,intRootY,intMaxKeywordHintsWidth+2,intKeywordHintsHeight+2,"",strVisibleContent,1);
	this.wndKeywordsHints.strPrevKeywordHint=lstKeywordComplements[0];
	this.wndKeywordsHints.lstKeywordComplements=lstKeywordComplements;
	this.wndKeywordsHints.intKeywordHintNumber=0;
	this.wndKeywordsHints.intMenuHighlight=0;
     	this.wndKeywordsHints.theSuper=this.textEditor;
	this.wndKeywordsHints.doHighlight=function(chrChar,i,j){
		if(j-this.intInnerY!=this.intMenuHighlight)return false;
		return true;
	};
	this.wndKeywordsHints.setKeywordHintNumber=function(intKeywordHintNumber){
		this.intKeywordHintNumber=intKeywordHintNumber;
		this.intMenuHighlight=intKeywordHintNumber%this.intInnerHeight;
		var intFirstElement=intKeywordHintNumber-this.intMenuHighlight;
		for(var ii=0;ii<=this.intInnerHeight;ii++){
			if(intFirstElement+ii<this.lstKeywordComplements.length){
				this.lstTextBuffer[ii]=this.lstKeywordComplements[intFirstElement+ii];
			}else this.lstTextBuffer[ii]="";
		}
		this.updateWndEditing(true);
		
	};
     	this.wndKeywordsHints.setKeywordHintNumber(intKeywordHintNumber);
	this.textEditor.lstTextWindows.push(this.wndKeywordsHints);
	this.textEditor.bringToFront(this.wndKeywordsHints);
};
InchesKeyboard.prototype.hideKeywordComplementsWindow=function(){
     	if(null!=this.wndKeywordsHints){
		this.textEditor.lstTextWindows.splice(this.textEditor.lstTextWindows.indexOf(this.wndKeywordsHints),1);
		this.textEditor.wndEditing.addCursorHistoryUndoItem(false);
     		this.wndKeywordsHints=null;
     	}
};
InchesKeyboard.prototype.clearDivInches=function(){
	this.strReplaceEntry=null;
	this.intReplaceEntryIndex=null;
	this.intReplaceEntrySubindex=null;
     	this.hideKeywordComplementsWindow();
};
InchesKeyboard.prototype.blnWordChoiceModeEqFalse=function(){
	this.blnWordChoiceMode=false;
	this.clearDivInches();
	this.resetStrTexts();
};
InchesKeyboard.prototype.cellClicked=function(intIndex,strCurrentWord){
	this.renderDivInches(strCurrentWord,intIndex);
	this.replaceText();
	this.renderTxtInput();
	this.blnWordChoiceModeEqFalse();
	this.clearDivInches();
	this.resetStrTexts();
};
InchesKeyboard.prototype.keyInKeys=function(tblKeys,strKey){
	for (var i=0;i<tblKeys.length;i++){
		if (strKey==tblKeys[i]) return i;
	}
	return -1;
};
InchesKeyboard.prototype.renderDivInches=function(strCurrentWord,intSubentry){
	var intIndex=this.keyInKeys(this.varDictionaryKeys,strCurrentWord);
	if (-1==intIndex){
		this.clearDivInches();
		return;
	}
	//mhdmodiff--
	//varInches=varDictionary[strCurrentWord];
	var varInches=this.varDictionary[strCurrentWord];
	this.intReplaceEntryIndex=intIndex;
	if(undefined==intSubentry)
		this.intReplaceEntrySubindex=0;
	else this.intReplaceEntrySubindex=intSubentry;
	if(this.intReplaceEntrySubindex<0)this.intReplaceEntrySubindex=varInches.length-1;
	if(this.intReplaceEntrySubindex>=varInches.length)this.intReplaceEntrySubindex=0;
	this.strReplaceEntry=varInches[this.intReplaceEntrySubindex][0];
	var lstKeywordComplements=[];
	for (var i=0; i<varInches.length;i++){
     		lstKeywordComplements.push(varInches[i][0]);
	}
     	if(null!=this.wndKeywordsHints)
		this.hideKeywordComplementsWindow();
	this.showKeywordComplementsWindow(lstKeywordComplements,this.intReplaceEntrySubindex);
};
InchesKeyboard.prototype.resetStrTexts=function(){
	this.strTextBefore="";
	this.strTextOnCursor="";
	this.strTextAfter="";
     	this.intPrevCursorPos=-1;
};
InchesKeyboard.prototype.replaceText=function(){
	if(null!=this.strReplaceEntry){
		this.strTextOnCursor=this.strReplaceEntry;
		var intTextLength=this.strReplaceEntry.length;
     		if(-1!=this.intPrevCursorPos){
     			this.textEditor.wndEditing.setLstCursor_buffer0(this.intPrevCursorPos+intTextLength);
     		}
     		return true;
	}
     	return false;
};
InchesKeyboard.prototype.spacePressed=function(evtKey){
	if(false==netspace.computer.blnInchesKeyboardMode)return;
	if(false==this.blnWordChoiceMode)return;
     	var blnTextReplaced=false;
	blnTextReplaced=this.replaceText();
	if(undefined!=evtKey.preventDefault)
		evtKey.preventDefault();
	this.renderTxtInput();
	this.blnWordChoiceModeEqFalse();
	this.resetStrTexts();
     	if(false==blnTextReplaced)
     		this.resumeTextEditorOnKeyDown_(evtKey);
};
InchesKeyboard.prototype.enterPressed=function(){
	this.blnWordChoiceModeEqFalse();
};
InchesKeyboard.prototype.renderTxtInput=function(){
     	this.textEditor.wndEditing.setLstTextBuffer(this.textEditor.wndEditing.lstCursor_buffer[1],this.strTextBefore+this.strTextOnCursor+this.strTextAfter);
	this.textEditor.wndEditing.updateWndEditing(true);
};
InchesKeyboard.prototype.computeStrTextBeforeAfter=function(){
     	var cursorPos=this.textEditor.wndEditing.lstCursor_buffer[0];
	var strLine=this.textEditor.wndEditing.lstTextBuffer[this.textEditor.wndEditing.lstCursor_buffer[1]];
	this.strTextBefore=strLine.substring(0,cursorPos);
	this.strTextAfter=strLine.substring(cursorPos,strLine.length);
	this.strTextOnCursor="";
	this.intPrevCursorPos=this.textEditor.wndEditing.lstCursor_buffer[0];
};
InchesKeyboard.prototype.resumeTextEditorOnKeyDown_=function(evtKey){
	if(false==this.textEditor.blnSimpleMode)this.textEditor.onKeyDown_(evtKey);
	else this.textEditor.onKeyDownSimple(evtKey);
};
InchesKeyboard.prototype.txtInputKeypressed=function(evtKey){
	if(" "==evtKey.key){
     		if(false==this.blnWordChoiceMode)
     			this.resumeTextEditorOnKeyDown_(evtKey);
		this.spacePressed(evtKey);
		return;
	}
	if("Enter"==evtKey.key){
     		if(false==this.blnWordChoiceMode)
     			this.resumeTextEditorOnKeyDown_(evtKey);
		this.enterPressed();
		return;
	}
	var intCharCode=evtKey.key.charCodeAt(0);
	if(1==evtKey.key.length){
		if(true==netspace.computer.blnInchesKeyboardMode){
			if(false==this.blnWordChoiceMode){
				this.computeStrTextBeforeAfter(); 
			};
			this.blnWordChoiceMode=true;
			if(undefined!=evtKey.preventDefault)
				evtKey.preventDefault();
			this.strTextOnCursor+=evtKey.key;
			this.textEditor.wndEditing.setLstCursor_buffer0(this.textEditor.wndEditing.lstCursor_buffer[0]+1);
			this.renderDivInches(this.strTextOnCursor);
			this.renderTxtInput();
		}
		
	}
};
InchesKeyboard.prototype.arrowUpPressed=function(evtKey){
	if(null==this.intReplaceEntrySubindex)return;
	if(true==this.blnWordChoiceMode)
		if(undefined!=evtKey.preventDefault)
			evtKey.preventDefault();
	this.intReplaceEntrySubindex--;
	this.renderDivInches(this.strTextOnCursor,this.intReplaceEntrySubindex);
};
InchesKeyboard.prototype.arrowDownPressed=function(evtKey){
	if(-1==this.intReplaceEntrySubindex)return;
	if(true==this.blnWordChoiceMode)
		if(undefined!=evtKey.preventDefault)
			evtKey.preventDefault();
	this.intReplaceEntrySubindex++;
	this.renderDivInches(this.strTextOnCursor,this.intReplaceEntrySubindex);
};
InchesKeyboard.prototype.txtInputKeyDown=function(evtKey){
	if("ArrowLeft"==evtKey.key){
		this.blnWordChoiceModeEqFalse();
     		this.resumeTextEditorOnKeyDown_(evtKey);
		return;
	}
	if("ArrowRight"==evtKey.key){
		this.blnWordChoiceModeEqFalse();
     		this.resumeTextEditorOnKeyDown_(evtKey);
		return;
	}
	if("ArrowUp"==evtKey.key||"-"==evtKey.key){
		this.arrowUpPressed(evtKey);
		return;
	}
	if("ArrowDown"==evtKey.key||"+"==evtKey.key){
		this.arrowDownPressed(evtKey);
		return;
	}
	if("Backspace"==evtKey.key){
		this.blnWordChoiceModeEqFalse();
     		this.resumeTextEditorOnKeyDown_(evtKey);
		return;
	}
	if("Delete"==evtKey.key){
		this.blnWordChoiceModeEqFalse();
     		this.resumeTextEditorOnKeyDown_(evtKey);
		return;
	}
	if("Escape"==evtKey.key){
     		if(false==this.blnWordChoiceMode)
     			this.textEditor.intMode=0;
		this.blnWordChoiceModeEqFalse();
		return;
	}
	this.txtInputKeypressed(evtKey);
};
var Program_TextEditorConstructor=function(that,computer,base){
	that.computer=computer;
	that.base=base;
	that.computer.clearScreen_text();
	that.prevStrArgs=null;
	that.strArgs="";
	that.intMode=0;
	that.intActiveWindow=1;
	that.lstScripts=[];
	/*that.initialCommands=["set key "+String.fromCharCode(34)+"~"+String.fromCharCode(34)+"="+String.fromCharCode(34)+"Escape,Escape"+String.fromCharCode(34)+""];*/
	that.initialCommands=[];
	that.theKeyAliases={};
	that.theKeyCodeAliases={};
	that.lstCPbuffer=[[],[],[],[],[],[],[],[],[],[]];
	that.blnSimpleMode=false;
	that.wndEditing=null;
	that.wndMenu=null;
	that.lstEditingWindows=[];
	that.fltMouseSpeed=0.5;
	that.prevMouseX=null;
	that.prevMouseY=null;
	that.fltMouseX=0;
	that.fltMouseY=0;
	that.blnMouseBlocked=false;
	that.fltDoubleClickDelay=0.5;
	that.fltLastClickTimestamp=null;
	that.intScrollSize=5;
	that.wndPendingMouseEvent=null;
	that.inchesKeyboard=new InchesKeyboard(that);
	that.lstInternalCodeExtensionFunctions=[];
	that.setInternalCodeExtensions();
	that.lstExtensionFunctionNames=[];
	that.lstExtensionFunctions=[];
	that.loadInternalCodeExtensions();
};
var Program_TextEditorConstructor_strF=function(that,computer,base){
};
var Program_TextEditor=function(computer,base){
	Program_TextEditorConstructor(this,computer,base);
	Program_TextEditorConstructor_strF(this,computer,base);
};
Program_TextEditor.prototype.setInternalCodeExtensions=function(){
	//mhdmodiff--
	var strToCodeoneliner='function toCodeoneliner_(that,strArgs){'+
'	/**'+
'	* That function is subfunction only - use toCodeoneliner instead.'+
'	* Transform C-style code to its equivalent oneliner'+
'	* one line of code version. In that version it only removes quickly'+
'	* the newlines.'+
'	* Commandline call:'+
'	*	:=>toCodeoneliner_'+
'	* TODO: else enter instruction; and all the = ; checks'+
'	* to ensure that the JavaScript oneliner is always correct'+
'	*/'+
'	alert("toCodeoneliner");'+
'	var intIndent;'+
'	var intCounter=0;'+
'	var intCounterLimit=netspace.wndEditing.lstTextBuffer_fastCruncher.length+1;'+
'	var strOneliner="";'+
'	var strLine="";'+
'	var intCounterProgress=Math.floor(0.01*(intCounterLimit-2));'+
'	var intPercent=0;'+
'	console.log("Progress="+intPercent+"% intCounter="+intCounter);'+
'	for(var jj=0;jj<netspace.wndEditing.lstTextBuffer_fastCruncher.length;jj++){'+
'		strLine=netspace.wndEditing.lstTextBuffer_fastCruncher[jj];'+
'		intIndent=netspace.wndEditing.indentSizeToPreserve(jj);'+
'		strLine=strLine.substring(intIndent);'+
'		strOneliner+=netspace.wndEditing.copyString(strLine);'+
'		if(intCounter>intCounterLimit){'+
'			console.log("intCounter>intCounterLimit");'+
'			break;'+
'		}'+
'		intCounter++;'+
'		if(0==intCounter%intCounterProgress){'+
'			intPercent+=1;'+
'			console.log("Progress="+intPercent+"% intCounter="+intCounter);'+
'		}'+
'	}'+
'	netspace.wndEditing.lstTextBuffer_fastCruncher=[];'+
'	netspace.wndEditing.lstTextBuffer_fastCruncher[0]=strOneliner;'+
'	/*wndEditing.loadEditingText(strOneliner,"toCodeoneliner_fast");*/'+
'	/*wndEditing.intUndoRedoLimit=intPreviousLineIndent;*/'+
'	console.log("toCodeoneliner_ done");'+
'}'+
'function toCodeoneliner(that,strArgs){'+
'	/**'+
'	* Transform C-style code to its equivalent oneliner'+
'	* one line of code version. In that version it only removes quickly'+
'	* the newlines.'+
'	* Commandline call:'+
'	*	:=>toCodeoneliner'+
'	* TODO: else enter instruction; and all the = ; checks'+
'	* to ensure that the JavaScript oneliner is always correct'+
'	*/'+
'	that.wndEditing.initFastCruncher(false);'+
'	/*that.wndEditing.initFastCruncher(true);*/'+
'	that.runExtension("=>toCodeoneliner_");'+
'	netspace.wndEditing.loadEditingText_fastCruncher();'+
'	netspace.wndEditing.updateWndEditing(true);'+
'	netspace.wndEditing.freeFastCruncher();'+
'}';
	this.lstInternalCodeExtensionFunctions.push(strToCodeoneliner);
	//mhdmodiff--
	var strInsertDay='function insertDay(that,strArgs){'+
'	/**'+
'	* Insert hours of the day. Part of the calendar extension.'+
'	* Default commandline call:'+
'	*	:=>insertDay'+
'	* inserts hours from 00:00 to 23:00.'+
'	* With optional arguments:'+
'	*	:=>insertDay intMinH intMaxH'+
'	* it inserts hours from intMinH to intMaxH, also if intMinH>intMaxH - then the next day hours are inserted.'+
'	*/'+
'	/*functions from the global TheNetspaces namespace have to be rewritten*/'+
'	var flush=function(strInput,intMax){'+
'        	return(strInput.length<intMax)?flush("0"+strInput,intMax):strInput;'+
'	};'+
'	var nonNumber=function(a){'+
'        	if("number"!=typeof(a))return true;'+
'        	if(true==Number.isNaN(a))return true;'+
'        	return false;'+
'	};'+
'	var insertGreatDay=function(intFrom,intTo){'+
'		var strLine="";'+
'		for(var h=intFrom;h<intTo+1;h++){'+
'			strLine=flush(""+h,2)+":00 ";'+
'			that.wndEditing.setLstTextBuffer(that.wndEditing.lstCursor_buffer[1],strLine);'+
'			that.wndEditing.setLstCursor_buffer0(strLine.length+1);'+
'			that.updateWndEditing(true);'+
'			that.wndEditing.insertEditingEnter_();'+
'		}'+
'	};'+
'	var intMinH=0, intMaxH=23;'+
'	var lstHours=strArgs.split(" ");'+
'	if(2==lstHours.length){'+
'		intMinH=parseInt(lstHours[0]);'+
'		intMaxH=parseInt(lstHours[1]);'+
'		if(true==nonNumber(intMinH))intMinH=0;'+
'		if(true==nonNumber(intMaxH))intMaxH=23;'+
'		'+
'	}'+
'	/*that.wndEditing.insertEditingEnter_();*/'+
'	if(intMinH<=intMaxH){'+
'		insertGreatDay(intMinH,intMaxH);'+
'	}else{'+
'		insertGreatDay(intMinH,23);'+
'		insertGreatDay(0,intMaxH);'+
'	}'+
'}';
	this.lstInternalCodeExtensionFunctions.push(strInsertDay);
	//mhdmodiff--
	var strInsertMonth='function insertMonth(that,strArgs){'+
'	/**'+
'	* Insert calendar month in the month weekdays view. Part of the calendar extension.'+
'	* Default commandline call:'+
'	*	:=>insertMonth'+
'	* inserts actual month.'+
'	* With optional arguments:'+
'	*	:=>insertMonth intMonth intYear'+
'	* it inserts the intMonth/intYear month. Arguments provided in most popular'+
'	* calendar convention, not in diverse computer science conventions,'+
'	* so e.x. months are numbered from 1 instead of 0 etc.'+
'	* You can also quickly set the formatting of the month by setting the internal strInchySpaces variable, by default set to:'+
'	* var strInchySpaces="   ";'+
'	*/'+
'	/*functions from the global TheNetspaces namespace have to be rewritten*/'+
'	var flush=function(strInput,intMax){'+
'        	return(strInput.length<intMax)?flush("0"+strInput,intMax):strInput;'+
'	};'+
'	var nonNumber=function(a){'+
'        	if("number"!=typeof(a))return true;'+
'        	if(true==Number.isNaN(a))return true;'+
'        	return false;'+
'	};'+
'	var getLastDay=function(intMonth,intYear){'+
'		var intLastDay=(intMonth==(new Date(intYear,intMonth,31,0,0,0,0)).getMonth())?31:30;'+
'		if(2==intMonth)intLastDay=28;'+
'		return intLastDay;'+
'	};'+
'	var getWeek=function(intMonthDay,intMonth,intYear,strInchySpaces){'+
'		var strWeek=strInchySpaces;'+
'		var dateCounter=new Date(intYear,intMonth,intMonthDay,0,0,0,0);'+
'		var intWeekDay=dateCounter.getDay();'+
'		var intMonthDayCounter=intMonthDay-intWeekDay;'+
'		for(var d=0;d<intWeekDay;d++){'+
'			strWeek+=" "+flush(""+(new Date(intYear,intMonth,intMonthDayCounter,0,0,0,0)).getDate(),2)+strInchySpaces;'+
'			intMonthDayCounter++;'+
'		}'+
'		for(var d=intWeekDay;d<7;d++){'+
'			strWeek+=" "+flush(""+(new Date(intYear,intMonth,intMonthDayCounter,0,0,0,0)).getDate(),2)+strInchySpaces;'+
'			intMonthDayCounter++;'+
'		}'+
'		return strWeek;'+
'	};'+
'	var lstDate=strArgs.split(" ");'+
'	var intMonth;'+
'	var intYear;'+
'	var nowDate=new Date();'+
'	intMonth=nowDate.getMonth();'+
'	intYear=nowDate.getFullYear();'+
'	if(2==lstDate.length){'+
'		intMonth=parseInt(lstDate[0])-1;'+
'		intYear=parseInt(lstDate[1]);'+
'		if(true==nonNumber(intMonth))intMonth=nowDate.getMonth();'+
'		if(true==nonNumber(intYear))intYear=nowDate.getFullYear();'+
'	}'+
'	var theDate=new Date(intYear,intMonth,1,0,0,0,0);'+
'	var intWeeks=5;'+
'	if(1==intMonth&&0==theDate.getDay())intWeeks=4;'+
'	var strInchySpaces="   ";'+
'	/*var strLine=strInchySpaces+"Mon"+strInchySpaces+"Tue"+strInchySpaces+"Wen"+strInchySpaces+"Thu"+strInchySpaces+"Fri"+strInchySpaces+"Sat"+strInchySpaces+"Sun"+strInchySpaces;*/'+
'	var strLine=strInchySpaces+"Sun"+strInchySpaces+"Mon"+strInchySpaces+"Tue"+strInchySpaces+"Wen"+strInchySpaces+"Thu"+strInchySpaces+"Fri"+strInchySpaces+"Sat"+strInchySpaces;'+
'	that.wndEditing.setLstTextBuffer(that.wndEditing.lstCursor_buffer[1],strLine);'+
'	that.wndEditing.setLstCursor_buffer0(strLine.length+1);'+
'	that.updateWndEditing(true);'+
'	that.wndEditing.insertEditingEnter_();'+
'	var intMonthDay=theDate.getDate();'+
'	var intWeekDay;'+
'	for(var w=0;w<intWeeks;w++){'+
'		theDate=new Date(intYear,intMonth,intMonthDay,0,0,0,0);'+
'		intWeekDay=theDate.getDay();'+
'		strLine=getWeek(intMonthDay,intMonth,intYear,strInchySpaces);'+
'		that.wndEditing.setLstTextBuffer(that.wndEditing.lstCursor_buffer[1],strLine);'+
'		that.wndEditing.setLstCursor_buffer0(strLine.length+1);'+
'		that.updateWndEditing(true);'+
'		that.wndEditing.insertEditingEnter_();'+
'		intMonthDay=intMonthDay+7'+
'	}'+
'}';
	this.lstInternalCodeExtensionFunctions.push(strInsertMonth);
	//mhdmodiff--
	var strNoWhitespaces='function noWhitespaces(that,strArgs){'+
'	/**'+
'	* Remove C-style programs redundant whitespaces.'+
'	* Default commandline call:'+
'	*	:=>noWhitespaces'+
'	* With optional arguments in arbitrary sequence:'+
'	*	:=>noWhitespaces emptylines-- withQuotes noComments'+
'	* emptylines--: remove also the empty lines or lines with the whitespaces only'+
'	* withQuotes: remove whitespaces also from content inside the '+String.fromCharCode(39)+'quotes'+String.fromCharCode(39)+' and "double quotes"'+
'	* noComments: don'+String.fromCharCode(39)+'t remove whitespaces from the comments '+
'	*'+
'	* Portable version of the algorithm on the strToModify string.'+
'	* Not fully tested yet, naturally previous backup of the code as always highly suggested.'+
'	*/'+
'	var intDoublequote=0,intQuote=0,intComment=0,blnDoubleComment=false;'+
'	var blnRemoveEmptyLines=false;'+
'	var blnLeaveComments=false;'+
'	var blnLeaveQuotes=true;'+
'	if(strArgs.length>0&&-1!=strArgs.indexOf("emptyLines--"))blnRemoveEmptyLines=true;'+
'	if(strArgs.length>0&&-1!=strArgs.indexOf("noComments"))blnLeaveComments=true;'+
'	if(strArgs.length>0&&-1!=strArgs.indexOf("withQuotes"))blnLeaveQuotes=false;'+
'	var isAlphanumeric=function(chrActual){'+
'		if(undefined==chrActual)return false;'+
'		intActual=chrActual.charCodeAt(0);'+
'		if(intActual>=48&&intActual<=57)return true;'+
'		if(intActual>=65&&intActual<=90)return true;'+
'		if(intActual>=97&&intActual<=122)return true;'+
'		return false;'+
'	};'+
'	var isWhitespace=function(chrActual){'+
'		if(undefined==chrActual)return false;'+
'		if(" "==chrActual||String.fromCharCode(9)==chrActual)return true;'+
'		return false;'+
'	};'+
'	var isEnter=function(chrActual){'+
'		if(undefined==chrActual)return false;'+
'		if(chrActual==String.fromCharCode(10)||chrActual==String.fromCharCode(13))return true;'+
'		return false;'+
'	};'+
'	var isQuote=function(chrActual){'+
'		if(undefined==chrActual)return false;'+
'		if(chrActual==String.fromCharCode(34)||chrActual==String.fromCharCode(39))return true;'+
'		return false;'+
'	};'+
'	var isIndent=function(ii,strToModify){'+
'		for(var jj=ii;jj>=0;jj--){'+
'			if(true==isEnter(strToModify[jj]))return true;'+
'			if(false==isWhitespace(strToModify[jj]))return false;'+
'		}'+
'		return true;'+
'	};'+
'	var isEmptyLine=function(ii,strToModify){'+
'		var lstEmptyLine=[ii,ii];'+
'		'+
'		for(var jj=ii;jj>=0;jj--){'+
'			if(true==isEnter(strToModify[jj]))break;'+
'			if(false==isWhitespace(strToModify[jj]))break;'+
'			lstEmptyLine[0]=jj;'+
'		}'+
'		for(var jj=ii;jj<strToModify.length;jj++){'+
'			if(true==isEnter(strToModify[jj]))break;'+
'			if(false==isWhitespace(strToModify[jj]))break;'+
'			lstEmptyLine[1]=jj;'+
'		}'+
'		if(ii==lstEmptyLine[0]&&ii==lstEmptyLine[1]&&false==isEnter(strToModify[lstEmptyLine[0]-1])){'+
'			return null;'+
'		}'+
'		if(true==isEnter(strToModify[lstEmptyLine[1]])){'+
'			return lstEmptyLine;'+
'		}'+
'		return null;'+
'	};'+
'	var leaveWhitespace=function(chrPrev,chrActual,chrNext,ii,strToModify){'+
'		/*true==isWhitespace(chrActual)*/'+
'		if(true==blnLeaveQuotes)'+
'			if(0!=intDoublequote||0!=intQuote)return true;'+
'		if(true==blnLeaveComments)'+
'			if(0!=intComment||true==blnDoubleComment)return true;'+
'		if(true==isIndent(ii,strToModify))return true;'+
'		if(true==isWhitespace(chrNext))return false;'+
'		if(true==isAlphanumeric(chrPrev)&&true==isAlphanumeric(chrNext))return true;'+
'		if(true==isAlphanumeric(chrPrev)&&true==isQuote(chrNext))return true;'+
'		if(true==isAlphanumeric(chrNext)&&true==isQuote(chrPrev))return true;'+
'		return false;'+
'	};'+
'	var removeWhitespaces=function(strToModify){'+
'		var chrPrev,chrII,chrNext;'+
'		var blnDoublequoteChanged=false,blnQuoteChanged=false,blnCommentChanged=false;'+
'		for(var ii=1;ii<strToModify.length;ii++){'+
'			blnDoublequoteChanged=false;blnQuoteChanged=false;blnCommentChanged=false;'+
'			chrPrev=strToModify[ii-1];'+
'			chrII=strToModify[ii];'+
'			chrNext=strToModify[ii+1];'+
'			if(undefined==chrII)break;'+
'			/*if(true==isEnter(chrII))continue;*/'+
'			if(0==intQuote&&String.fromCharCode(34)==chrII){'+
'				intDoublequote=(intDoublequote+1)%2;'+
'				blnDoublequoteChanged=true;'+
'			}'+
'			if(0==intDoublequote&&String.fromCharCode(39)==chrII){'+
'				intQuote=(intQuote+1)%2;'+
'				blnQuoteChanged=true;'+
'			}'+
'			if(String.fromCharCode(47)==chrPrev&&String.fromCharCode(42)==chrII)intComment=(intComment+1)%2;'+
'			if(String.fromCharCode(42)==chrII&&String.fromCharCode(47)==chrNext){'+
'				intComment=(intComment+1)%2;'+
'				blnCommentChanged=true;'+
'			}'+
'			if(String.fromCharCode(47)==chrPrev&&String.fromCharCode(47)==chrII)blnDoubleComment=true;'+
'			if(true==isEnter(chrII))blnDoubleComment=false;'+
'			if(true==isWhitespace(chrII)){'+
'				if(false==leaveWhitespace(chrPrev,chrII,chrNext,ii,strToModify)){'+
'					strToModify=strToModify.substring(0,ii)+strToModify.substring(ii+1);'+
'					ii--;'+
'					if(true==blnDoublequoteChanged)intDoublequote=(intDoublequote+1)%2;'+
'					if(true==blnQuoteChanged)intQuote=(intQuote+1)%2;'+
'					if(true==blnCommentChanged)intComment=(intComment+1)%2;'+
'				}'+
'			}'+
'		}'+
''+
'		if(true==blnRemoveEmptyLines){'+
'			var lstEmptyLine=null;'+
'			for(var ii=1;ii<strToModify.length;ii++){'+
'				chrPrev=strToModify[ii-1];'+
'				chrII=strToModify[ii];'+
'				if(undefined==chrII)break;'+
'				if(undefined!=chrPrev){'+
'					lstEmptyLine=isEmptyLine(ii,strToModify);'+
'					if(null!=lstEmptyLine){'+
'						strToModify=strToModify.substring(0,lstEmptyLine[0])+strToModify.substring(lstEmptyLine[1]+1);'+
'						ii=lstEmptyLine[0]-1;'+
'					}'+
'				}'+
'			}'+
'		}'+
'		if(true==isWhitespace(strToModify[0]))strToModify=strToModify.substring(1);'+
'		return strToModify;'+
'	};'+
'	var strToModify="";'+
'	strToModify=that.wndEditing.getStrContents();'+
'	strToModify=removeWhitespaces(strToModify);'+
'	that.wndEditing.loadEditingText(strToModify,"noWhitespaces");'+
'}';
	this.lstInternalCodeExtensionFunctions.push(strNoWhitespaces);
	
	//mhdmodiff--
	var strWhitespacesMM='function whitespacesMM(that,strArgs){'+
'	/**'+
'	* Remove C-style programs redundant whitespaces.'+
'	* By default'+
'	*	:=>whitespacesMM'+
'	* With optional arguments in arbitrary sequence:'+
'	*	:=>whitespacesMM emptylines-- withQuotes noComments'+
'	* emptylines--: remove also the empty lines or lines with the whitespaces only'+
'	* withQuotes: remove whitespaces also from content inside the '+String.fromCharCode(39)+'quotes'+String.fromCharCode(39)+' and "double quotes"'+
'	* noComments: don'+String.fromCharCode(39)+'t remove whitespaces from the comments '+
'	*'+
'	* Version of the algorithm on the texteditor fastCruncher.'+
'	* Not fully tested yet, naturally previous backup of the code as always highly suggested.'+
'	*/'+
'	var intDoublequote=0,intQuote=0,intComment=0,blnDoubleComment=false;'+
'	var blnRemoveEmptyLines=false;'+
'	var blnLeaveComments=false;'+
'	var blnLeaveQuotes=true;'+
'	if(strArgs.length>0&&-1!=strArgs.indexOf("emptyLines--"))blnRemoveEmptyLines=true;'+
'	if(strArgs.length>0&&-1!=strArgs.indexOf("noComments"))blnLeaveComments=true;'+
'	if(strArgs.length>0&&-1!=strArgs.indexOf("withQuotes"))blnLeaveQuotes=false;'+
'	var isAlphanumeric=function(chrActual){'+
'		if(undefined==chrActual)return false;'+
'		intActual=chrActual.charCodeAt(0);'+
'		if(intActual>=48&&intActual<=57)return true;'+
'		if(intActual>=65&&intActual<=90)return true;'+
'		if(intActual>=97&&intActual<=122)return true;'+
'		return false;'+
'	};'+
'	var isWhitespace=function(chrActual){'+
'		if(undefined==chrActual)return false;'+
'		if(" "==chrActual||String.fromCharCode(9)==chrActual)return true;'+
'		return false;'+
'	};'+
'	var isQuote=function(chrActual){'+
'		if(undefined==chrActual)return false;'+
'		if(chrActual==String.fromCharCode(34)||chrActual==String.fromCharCode(39))return true;'+
'		return false;'+
'	};'+
'	var isIndent=function(ii,strLine){'+
'		for(var intii=ii;intii>=0;intii--){'+
'			if(false==isWhitespace(strLine[intii]))return false;'+
'		}'+
'		return true;'+
'	};'+
'	var isEmptyLine=function(strLine){'+
'		var intii=0;'+
'		if(0==strLine.length)return true;'+
'		for(var ii=0;ii<strLine.length;ii++){'+
'			if(false==isWhitespace(strLine[ii]))break;'+
'			intii=ii;'+
'		}'+
'		if(intii<strLine.length-1)return false;'+
'		return true;'+
'	};'+
'	var leaveWhitespace=function(chrPrev,chrActual,chrNext,ii,strLine){'+
'		/*true==isWhitespace(chrActual)*/'+
'		if(true==blnLeaveQuotes)'+
'			if(0!=intDoublequote||0!=intQuote)return true;'+
'		if(true==blnLeaveComments)'+
'			if(0!=intComment||true==blnDoubleComment)return true;'+
'		if(true==isIndent(ii,strLine))return true;'+
'		if(true==isWhitespace(chrNext))return false;'+
'		if(true==isAlphanumeric(chrPrev)&&true==isAlphanumeric(chrNext))return true;'+
'		if(true==isAlphanumeric(chrPrev)&&true==isQuote(chrNext))return true;'+
'		if(true==isAlphanumeric(chrNext)&&true==isQuote(chrPrev))return true;'+
'		return false;'+
'	};'+
'	var removeWhitespaces=function(){'+
'		var chrPrev,chrII,chrNext;'+
'		var blnDoublequoteChanged=false,blnQuoteChanged=false,blnCommentChanged=false;'+
'		var strLine;'+
'		for(var jj=0;jj<that.wndEditing.lstTextBuffer_fastCruncher.length;jj++){'+
'			strLine=that.wndEditing.lstTextBuffer_fastCruncher[jj];'+
'			blnDoubleComment=false;'+
'			for(var ii=0;ii<strLine.length;ii++){'+
'				blnDoublequoteChanged=false;blnQuoteChanged=false;blnCommentChanged=false;'+
'				strLine=that.wndEditing.lstTextBuffer_fastCruncher[jj];'+
'				chrPrev=strLine[ii-1];'+
'				chrII=strLine[ii];'+
'				chrNext=strLine[ii+1];'+
'				if(undefined==chrII)break;'+
'				if(0==intQuote&&String.fromCharCode(34)==chrII){'+
'					intDoublequote=(intDoublequote+1)%2;'+
'					blnDoublequoteChanged=true;'+
'				}'+
'				if(0==intDoublequote&&String.fromCharCode(39)==chrII){'+
'					intQuote=(intQuote+1)%2;'+
'					blnQuoteChanged=true;'+
'				}'+
'				if(String.fromCharCode(47)==chrPrev&&String.fromCharCode(42)==chrII)intComment=(intComment+1)%2;'+
'				if(String.fromCharCode(42)==chrII&&String.fromCharCode(47)==chrNext){'+
'					intComment=(intComment+1)%2;'+
'					blnCommentChanged=true;'+
'				}'+
'				if(String.fromCharCode(47)==chrPrev&&String.fromCharCode(47)==chrII)blnDoubleComment=true;'+
'				if(true==isWhitespace(chrII)){'+
'					if(false==leaveWhitespace(chrPrev,chrII,chrNext,ii,strLine)){'+
'						that.wndEditing.setLstCursor_buffer_fastCruncher(ii+1,jj);'+
'						that.wndEditing.insertEditingBackspace_fastCruncher();'+
'						ii--;'+
'						if(true==blnDoublequoteChanged)intDoublequote=(intDoublequote+1)%2;'+
'						if(true==blnQuoteChanged)intQuote=(intQuote+1)%2;'+
'						if(true==blnCommentChanged)intComment=(intComment+1)%2;'+
'					}'+
'				}'+
'			}'+
'		}'+
'		if(true==blnRemoveEmptyLines){'+
'			for(var jj=0;jj<that.wndEditing.lstTextBuffer_fastCruncher.length;jj++){'+
'				strLine=that.wndEditing.lstTextBuffer_fastCruncher[jj];'+
'				if(true==isEmptyLine(strLine)){'+
'					that.wndEditing.setLstCursor_buffer_fastCruncher(strLine.length,jj);'+
'					for(var ii=0;ii<=strLine.length;ii++)'+
'						that.wndEditing.insertEditingBackspace_fastCruncher();'+
'					jj--;'+
'					'+
'				}'+
'			}'+
'		}'+
'		if(true==isWhitespace(that.wndEditing.lstTextBuffer_fastCruncher[0][0]))'+
'		{'+
'			that.wndEditing.setLstCursor_buffer_fastCruncher(0,1);'+
'			that.wndEditing.insertEditingBackspace_fastCruncher();'+
'		}'+
'	};'+
'	that.wndEditing.initFastCruncher(false);'+
'	removeWhitespaces();'+
'	that.wndEditing.loadEditingText_fastCruncher();'+
'	that.wndEditing.updateWndEditing(true);'+
'	that.wndEditing.freeFastCruncher();'+
'}';
	this.lstInternalCodeExtensionFunctions.push(strWhitespacesMM);
};
Program_TextEditor.prototype.loadInternalCodeExtensions=function(){
	for(var ii=0;ii<this.lstInternalCodeExtensionFunctions.length;ii++)
		this.addExtensionsContent(this.lstInternalCodeExtensionFunctions[ii]);
	
};
Program_TextEditor.prototype.interpretInitialCommands=function(){
	for(var ii=0;ii<this.initialCommands.length;ii++)
		this.interpretCommand(this.initialCommands[ii]);
};
Program_TextEditor.prototype.substringInString=function(strSubstring,strString){
	if(-1!=strString.indexOf(strSubstring))return true;	
	return false;
};
Program_TextEditor.prototype.isDigit=function(chrChar){
	if(undefined==chrChar)return false;
	var intCharCode=chrChar.charCodeAt(0);
	if(intCharCode>=48&&intCharCode<=57)return true;
	return false;
};
Program_TextEditor.prototype.analyzeCommandline=function(){
	if(this.substringInString("-mini",this.strArgs)||this.substringInString("-maxi",this.strArgs)){
		if(this.substringInString("-mini",this.strArgs)){
			this.blnSimpleMode=false;
			if(this.substringInString("-2vwin",this.strArgs)){
				this.twoMiniVerticalWindows();
				return true;
			};
			if(this.substringInString("-O",this.strArgs)){
				this.twoMiniVerticalWindows();
				return true;
			};
			if(this.substringInString("-2hwin",this.strArgs)){
				this.twoMiniHorizontalWindows();
				return true;
			}
			if(this.substringInString("-o",this.strArgs)){
				this.twoMiniHorizontalWindows();
				return true;
			}

			this.oneMiniFullscreenWindow();
			return true;	
		}
		if(this.substringInString("-maxi",this.strArgs)){
			this.blnSimpleMode=false;
			if(this.substringInString("-2vwin",this.strArgs)){
				this.twoMaxiVerticalWindows();
				return true;
			};
			if(this.substringInString("-O",this.strArgs)){
				this.twoMaxiVerticalWindows();
				return true;
			};
			if(this.substringInString("-2hwin",this.strArgs)){
				this.twoMaxiHorizontalWindows();
				return true;
			}
			if(this.substringInString("-o",this.strArgs)){
				this.twoMaxiHorizontalWindows();
				return true;
			}
			this.oneMaxiFullscreenWindow();
			return true;	
		}
	}else{
		if(this.substringInString("-2vwin",this.strArgs)){
			this.twoSimpleVerticalWindows();
			return true;
		};
		if(this.substringInString("-O",this.strArgs)){
			this.twoSimpleVerticalWindows();
			return true;
		};
		if(this.substringInString("-2hwin",this.strArgs)){
			this.twoSimpleHorizontalWindows();
			return true;
		}
		if(this.substringInString("-o",this.strArgs)){
			this.twoSimpleHorizontalWindows();
			return true;
		}
		this.oneSimpleWindow();
		return true;
	}

};
Program_TextEditor.prototype.drawMouse=function(){
	this.base.lstScreenBuffer_text[this.base.getScreenIndex_text(Math.round(this.fltMouseX),Math.round(this.fltMouseY))]=String.fromCharCode(73);
};

Program_TextEditor.prototype.emptySpaces=function(size){
	var strString="";
	for(var ii=0;ii<size;ii++)
		strString+=" ";
	return strString;
};
Program_TextEditor.prototype.MessageBox_yesno=function(strMessage,funYes,funNo,lstPosition){
	var intRootX,intRootY,intWidth,intHeight,intBorderSize;
	if(undefined==lstPosition){
		intBorderSize=1;
		var intLength=strMessage.length;
		var intInnerWidth=intLength;
		var intInnerHeight=1+2*intBorderSize+Math.ceil(intLength/(this.base.intScreenWidth_text-2*intBorderSize));
		intWidth=intInnerWidth+2*intBorderSize;
		intHeight=intInnerHeight+2*intBorderSize;
		intRootX=(this.base.intScreenWidth_text-intWidth)/2;
		intRootY=(this.base.intScreenHeight_text-intHeight)/2;
	}else{
		intRootX=lstPosition[0];
		intRootY=lstPosition[1];
		intWidth=lstPosition[2];
		intHeight=lstPosition[3];
		intBorderSize=lstPosition[4];
	}

	var lstReturn=this.MessageBox_checkStrMessageLinebreaks(intRootX,intRootY,intWidth,intHeight,intBorderSize,intInnerWidth,intInnerHeight,strMessage);
	intRootX=lstReturn[0];
	intRootY=lstReturn[1];
	intWidth=lstReturn[2];
	intHeight=lstReturn[3];
	intInnerWidth=lstReturn[4];
	intInnerHeight=lstReturn[5];
	strMessage=lstReturn[6];
	var strButtonsText=""+"Yes No";
	var strButtonsSpacing=this.emptySpaces((intWidth-strButtonsText.length)/2);
	var strText=strMessage+String.fromCharCode(10)+String.fromCharCode(10)+String.fromCharCode(10)+strButtonsSpacing+strButtonsText;
	this.lstTextWindows.push(new TextWindow(this.computer,this.base,this,intRootX,intRootY,intWidth,intHeight,"",strText,intBorderSize));
	var messageBox=this.lstTextWindows[this.lstTextWindows.length-1];
	messageBox.funYes=funYes;
	messageBox.funNo=funNo;
	var intYes=(strButtonsSpacing+strButtonsText).indexOf("Yes");
	var intNo=(strButtonsSpacing+strButtonsText).indexOf("No");
	messageBox.lstButtonIndices=[[intYes,intYes+2],[intNo,intNo+1]];
	var that=this;
	messageBox.intFocusButton=1;
	messageBox.blnMouseable=false;
	messageBox.setFocusButton=function(intButton){
		var lstCursorStart=[this.lstButtonIndices[intButton][0],this.lstTextBuffer.length-1];
		var lstCursorEnd=[this.lstButtonIndices[intButton][1],this.lstTextBuffer.length-1];
		this.lstSelectionHighlights_text=[lstCursorStart,lstCursorEnd];
		this.updateHighlightSelection();
	};
	messageBox.setFocusButton(messageBox.intFocusButton);
	messageBox.onMouseDown=function(evtMouse){
		if(Math.round(that.fltMouseX)>=this.intInnerX+this.lstButtonIndices[0][0]&&Math.round(that.fltMouseX)<=this.intInnerX+this.lstButtonIndices[0][1]&&this.intInnerY+this.lstTextBuffer.length-1==Math.round(that.fltMouseY)){
			this.funYes();
			that.lstTextWindows.splice(that.lstTextWindows.indexOf(this),1);
		}
		if(Math.round(that.fltMouseX)>=this.intInnerX+this.lstButtonIndices[1][0]&&Math.round(that.fltMouseX)<=this.intInnerX+this.lstButtonIndices[1][1]&&this.intInnerY+this.lstTextBuffer.length-1==Math.round(that.fltMouseY)){
			this.funNo();
			that.lstTextWindows.splice(that.lstTextWindows.indexOf(this),1);
		}
	};
	messageBox.onKeyDown=function(evtKey){
		switch(evtKey.key){
			case "ArrowUp":
				this.intFocusButton=(++this.intFocusButton)%2;
				this.setFocusButton(this.intFocusButton);
				return true;
			break;
			case "ArrowRight":
				this.intFocusButton=(++this.intFocusButton)%2;
				this.setFocusButton(this.intFocusButton);
				return true;
			break;
			case "ArrowDown":
				this.intFocusButton=(--this.intFocusButton)%2;
				this.setFocusButton(this.intFocusButton);
				return true;
			break;
			case "ArrowLeft":
				this.intFocusButton=(--this.intFocusButton)%2;
				this.setFocusButton(this.intFocusButton);
				return true;
			break;
			case "Enter":
				if(0==this.intFocusButton){
					this.funYes();
					that.lstTextWindows.splice(that.lstTextWindows.indexOf(this),1);
					return true;
				}
				if(1==this.intFocusButton){
					this.funNo();
					that.lstTextWindows.splice(that.lstTextWindows.indexOf(this),1);
					return true;
				}
			break;
			case " ":
				if(0==this.intFocusButton){
					this.funYes();
					that.lstTextWindows.splice(that.lstTextWindows.indexOf(this),1);
					return true;
				}
				if(1==this.intFocusButton){
					this.funNo();
					that.lstTextWindows.splice(that.lstTextWindows.indexOf(this),1);
					return true;
				}
			break;
			case "y":
				this.funYes();
				that.lstTextWindows.splice(that.lstTextWindows.indexOf(this),1);
				return true;
			break;
			case "n":
				this.funNo();
				that.lstTextWindows.splice(that.lstTextWindows.indexOf(this),1);
				return true;
			break;
		}
		return false;
	};
	this.bringToFront(messageBox);
};
Program_TextEditor.prototype.MessageBox_checkStrMessageLinebreaks=function(intRootX,intRootY,intWidth,intHeight,intBorderSize,intInnerWidth,intInnerHeight,strMessage){
	if(intRootX>=0){
		return [intRootX,intRootY,intWidth,intHeight,intInnerWidth,intInnerHeight,strMessage];
	}else{
		var intMaxMessageLength=this.base.intScreenWidth_text-2*intBorderSize;
		var intLines=Math.ceil(strMessage.length/intMaxMessageLength);	
		var strNewMessage="";
		for(var ii=0;ii<intLines;ii++){
			strNewMessage+=strMessage.substring(ii*intMaxMessageLength,(ii+1)*intMaxMessageLength);
			if(ii<intLines-1)
				strNewMessage+=String.fromCharCode(10);
		}
		var intNewRootX,intNewRootY,intNewWidth,intNewHeight;
		intNewRootX=0;
		intNewRootY=intRootY-Math.ceil((intLines-1)/2);
		intNewWidth=this.base.intScreenWidth_text;
		intNewInnerWidth=intNewWidth-2*intBorderSize;
		intNewHeight=intHeight;/*+intLines-1;*/
		intNewInnerHeight=intNewHeight-2*intBorderSize;
		return [intNewRootX,intNewRootY,intNewWidth,intNewHeight,intNewInnerWidth,intNewInnerHeight,strNewMessage];
	}
};
Program_TextEditor.prototype.MessageBox_ok=function(strMessage,funOk,lstPosition){
	var intRootX,intRootY,intWidth,intHeight,intBorderSize;
	if(undefined==lstPosition){
		intBorderSize=1;
		var intLength=strMessage.length;
		var intInnerWidth=intLength;
		var intInnerHeight=1+2*intBorderSize+Math.ceil(intLength/(this.base.intScreenWidth_text-2*intBorderSize));
		intWidth=intInnerWidth+2*intBorderSize;
		intHeight=intInnerHeight+2*intBorderSize;
		intRootX=(this.base.intScreenWidth_text-intWidth)/2;
		intRootY=(this.base.intScreenHeight_text-intHeight)/2;
	}else{
		intRootX=lstPosition[0];
		intRootY=lstPosition[1];
		intWidth=lstPosition[2];
		intHeight=lstPosition[3];
		intBorderSize=lstPosition[4];
	}
	var lstReturn=this.MessageBox_checkStrMessageLinebreaks(intRootX,intRootY,intWidth,intHeight,intBorderSize,intInnerWidth,intInnerHeight,strMessage);
	intRootX=lstReturn[0];
	intRootY=lstReturn[1];
	intWidth=lstReturn[2];
	intHeight=lstReturn[3];
	intInnerWidth=lstReturn[4];
	intInnerHeight=lstReturn[5];
	strMessage=lstReturn[6];
	var strButtonsText=""+"OK";
	var strButtonsSpacing=this.emptySpaces((intWidth-strButtonsText.length)/2);
	var strText=strMessage+String.fromCharCode(10)+String.fromCharCode(10)+String.fromCharCode(10)+strButtonsSpacing+strButtonsText;
	this.lstTextWindows.push(new TextWindow(this.computer,this.base,this,intRootX,intRootY,intWidth,intHeight,"",strText,intBorderSize));
	var messageBox=this.lstTextWindows[this.lstTextWindows.length-1];
	messageBox.funOk=funOk;
	var intOk=(strButtonsSpacing+strButtonsText).indexOf("OK");
	messageBox.lstButtonIndices=[[intOk,intOk+1]];
	var that=this;
	messageBox.intFocusButton=0;
	messageBox.blnMouseable=false;
	messageBox.setFocusButton=function(intButton){
		var lstCursorStart=[this.lstButtonIndices[intButton][0],this.lstTextBuffer.length-1];
		var lstCursorEnd=[this.lstButtonIndices[intButton][1],this.lstTextBuffer.length-1];
		this.lstSelectionHighlights_text=[lstCursorStart,lstCursorEnd];
		this.updateHighlightSelection();
	};
	messageBox.setFocusButton(messageBox.intFocusButton);
	messageBox.onMouseDown=function(evtMouse){
		if(Math.round(that.fltMouseX)>=this.intInnerX+this.lstButtonIndices[0][0]&&Math.round(that.fltMouseX)<=this.intInnerX+this.lstButtonIndices[0][1]&&this.intInnerY+this.lstTextBuffer.length-1==Math.round(that.fltMouseY)){
			this.funOk();
			that.lstTextWindows.splice(that.lstTextWindows.indexOf(this),1);
		}
	};
	messageBox.onKeyDown=function(evtKey){
		switch(evtKey.key){
			case "Enter":
				this.funOk();
				that.lstTextWindows.splice(that.lstTextWindows.indexOf(this),1);
				return true;
			break;
			case " ":
				this.funOk();
				that.lstTextWindows.splice(that.lstTextWindows.indexOf(this),1);
				return true;
			break;
			case "o":
				this.funOk();
				that.lstTextWindows.splice(that.lstTextWindows.indexOf(this),1);
				return true;
			break;
		}
		return false;
	};
	this.bringToFront(messageBox);
};
Program_TextEditor.prototype.submenuWindow_onMouseDown=function(evtEvent){
	var theActualProgram=netspace.computer.theActualProgram;
	var that=null;
	if(undefined==theActualProgram.newTerminal)
		that=theActualProgram;
	else{var intXWindowNumber=theActualProgram.lstXWindows.length-1;that=theActualProgram.lstXWindows[intXWindowNumber].theActualProgram.theActualProgram;}
	var theSubmenu=this;
	var fltMouseX=Math.round(that.fltMouseX)-theSubmenu.intInnerX;
	var fltMouseY=Math.round(that.fltMouseY)-theSubmenu.intInnerY;
	if(-1!=theSubmenu.intMenuHighlight)
		theSubmenu.lstFunctions[theSubmenu.intMenuHighlight]();
};
Program_TextEditor.prototype.submenuWindow_onMouseMove=function(evtEvent){
	var theActualProgram=netspace.computer.theActualProgram;
	var that=null;
	if(undefined==theActualProgram.newTerminal)
		that=theActualProgram;
	else{var intXWindowNumber=theActualProgram.lstXWindows.length-1;that=theActualProgram.lstXWindows[intXWindowNumber].theActualProgram.theActualProgram;}
	var theSubmenu=this;
	var fltMouseY=Math.floor(that.fltMouseY)-theSubmenu.intInnerY;
	if(fltMouseY>=0&&fltMouseY<=theSubmenu.lstFunctions.length-1)
		theSubmenu.intMenuHighlight=fltMouseY;
	else theSubmenu.intMenuHighlight=-1;
};
Program_TextEditor.prototype.submenuWindow_doHighlight=function(chrChar,i,j){
	var theSubmenu=this;
	if(j-this.intInnerY!=theSubmenu.intMenuHighlight)return false;
	return true;
};
Program_TextEditor.prototype.closeAllSubmenuWindows=function(){
	if(null==this.wndMenu)return;
	var wndTest,intTest;
	for(var jj=0;jj<this.wndMenu.lstSubmenuWindows.length;jj++){
		wndTest=this.wndMenu.lstSubmenuWindows[jj];
		for(var ii=0;ii<this.lstTextWindows.length;ii++){
			intTest=this.lstTextWindows.indexOf(wndTest);
			if(-1!=intTest){
				this.lstTextWindows.splice(intTest,1);
				if(undefined!=wndTest.intMenuHighlight)wndTest.intMenuHighlight=-1;
			}
		}
	}
	this.wndMenu.intMenuClicked=-1;
};
Program_TextEditor.prototype.submenuWindowsExtensions=function(){
	var strFunctionName="";
	var that=this;
	//mhdmodiff--
	var intJ;
	for(var ii=0;ii<this.lstExtensionFunctionNames.length;ii++){
		strFunctionName=this.lstExtensionFunctionNames[ii];
		this.wndMenu.mnuExtensions.lstFunctions.push(function(){if(-1==that.wndMenu.mnuExtensions.intMenuHighlight){that.closeAllSubmenuWindows();return;}var strArgs=prompt("Extension strArgs:");if(null==strArgs){that.closeAllSubmenuWindows();return;};var intFunctionIndex=that.wndMenu.mnuExtensions.intMenuHighlight-5;that.closeAllSubmenuWindows();that.lstExtensionFunctions[intFunctionIndex](that,strArgs)});

		intJ=this.wndMenu.mnuExtensions.lstTextBuffer.length;
		this.wndMenu.mnuExtensions.insertNewline_noUndo(intJ,strFunctionName);
		this.wndMenu.mnuExtensions.updateWndEditing(true);
	}
};
Program_TextEditor.prototype.submenuWindows=function(){
	var strSubenuContents="New"+String.fromCharCode(10)+"Open..."+String.fromCharCode(10)+"Save as"+String.fromCharCode(10)+"Save as..."+"Exit";
	this.wndMenu.lstSubmenuWindows=[];
	var that=this;
	this.wndMenu.lstSubmenuWindows.push(new TextWindow(this.computer,this.base,this,1,1,12,12,"",strSubenuContents,1));
	this.wndMenu.mnuFile=this.wndMenu.lstSubmenuWindows[0];
	this.wndMenu.blnMouseable=false;
	var theSubmenuWindow=this.wndMenu.lstSubmenuWindows[0];
	theSubmenuWindow.lstFunctions=[
function(){that.closeAllSubmenuWindows();that.newTextFile();},
function(){that.closeAllSubmenuWindows();that.openTextFile();},
function(){that.closeAllSubmenuWindows();that.saveAsTextFileDownload();},
function(){that.closeAllSubmenuWindows();that.saveAsTextFileDownload_filename();},
function(){that.closeAllSubmenuWindows();that.reallyExitMessageBox();}
];
	strSubenuContents="Undo"+String.fromCharCode(10)+"Redo"+String.fromCharCode(10)+"Copy ->"+String.fromCharCode(10)+"Cut ->"+String.fromCharCode(10)+"Paste ->"+String.fromCharCode(10)+"Find..."+String.fromCharCode(10)+"Find next"+String.fromCharCode(10)+"Find prev"+String.fromCharCode(10)+"Goto line..."+String.fromCharCode(10)+"Select all";
	this.wndMenu.lstSubmenuWindows.push(new TextWindow(this.computer,this.base,this,5,1,15,13,"",strSubenuContents,1));
	this.wndMenu.mnuEdit=this.wndMenu.lstSubmenuWindows[1];
	this.wndMenu.mnuEdit.blnMouseable=false;
	theSubmenuWindow=this.wndMenu.lstSubmenuWindows[1];
	theSubmenuWindow.lstFunctions=[
function(){
that.closeAllSubmenuWindows();
that.wndEditing.undoLast();
},
function(){
that.closeAllSubmenuWindows();
that.wndEditing.redoLast();
},
function(){
	var wndCopyCutPaste=that.wndMenu.lstSubmenuWindows[3];
	wndCopyCutPaste.setIntRootXY(wndCopyCutPaste.intRootX,1);
	that.lstTextWindows.push(wndCopyCutPaste);
},

function(){
	var wndCopyCutPaste=that.wndMenu.lstSubmenuWindows[3];
	wndCopyCutPaste.setIntRootXY(wndCopyCutPaste.intRootX,2);
	that.lstTextWindows.push(wndCopyCutPaste);
},
function(){
	var wndCopyCutPaste=that.wndMenu.lstSubmenuWindows[3];
	wndCopyCutPaste.setIntRootXY(wndCopyCutPaste.intRootX,3);
	that.lstTextWindows.push(wndCopyCutPaste);
},
function(){that.closeAllSubmenuWindows();
that.findInputBox();	
},
function(){that.closeAllSubmenuWindows();
that.wndEditing.gotoNextString();
},
function(){that.closeAllSubmenuWindows();
that.wndEditing.gotoPrevString();
},
function(){that.closeAllSubmenuWindows();that.wndEditing.gotoLineInputBox();},
function(){
that.closeAllSubmenuWindows();
that.wndEditing.selectAll();
}

];
	strSubenuContents="New window"+String.fromCharCode(10)+"Close window"+String.fromCharCode(10)+"blnWrap="+that.wndEditing.blnWrap+String.fromCharCode(10)+"blnHighlightSearch="+that.wndEditing.blnHighlightSearch+String.fromCharCode(10)+"Maximize window";
	this.wndMenu.lstSubmenuWindows.push(new TextWindow(this.computer,this.base,this,10,1,26,12,"",strSubenuContents,1));
	this.wndMenu.mnuView=this.wndMenu.lstSubmenuWindows[2];
	this.wndMenu.mnuView.blnMouseable=false;
	theSubmenuWindow=this.wndMenu.lstSubmenuWindows[2];
	theSubmenuWindow.lstFunctions=[
function(){that.closeAllSubmenuWindows();that.newWindow("");},
function(){that.closeAllSubmenuWindows();that.closeWindow();},
function(){that.closeAllSubmenuWindows();that.wndEditing.setBlnWrap();},
function(){that.closeAllSubmenuWindows();that.wndEditing.setBlnHighlightSearch();},
function(){that.closeAllSubmenuWindows();that.wndEditing.maximizeWindow();},
function(){that.closeAllSubmenuWindows();},
function(){that.closeAllSubmenuWindows();}
];
	strSubenuContents="Insert external content..."+String.fromCharCode(10)+"Insert date"+String.fromCharCode(10)+"Insert external command..."+String.fromCharCode(10)+"Run external command..."+String.fromCharCode(10)+"Add extensions from file...";
	this.wndMenu.lstSubmenuWindows.push(new TextWindow(this.computer,this.base,this,15,1,31,12,"",strSubenuContents,1));
	this.wndMenu.mnuExtensions=this.wndMenu.lstSubmenuWindows[3];
	this.wndMenu.mnuExtensions.blnMouseable=false;
	theSubmenuWindow=this.wndMenu.lstSubmenuWindows[3];
	theSubmenuWindow.lstFunctions=[
function(){that.closeAllSubmenuWindows();that.mnuExtensions_insertExternalContent();},
function(){that.closeAllSubmenuWindows();that.mnuExtensions_insertDate();},
function(){that.closeAllSubmenuWindows();that.mnuExtensions_insertExternalCommand();},
function(){that.closeAllSubmenuWindows();that.mnuExtensions_runExternalCommand();},
function(){that.closeAllSubmenuWindows();that.mnuExtensions_addExtensionsFromFile();}
];



	strSubenuContents="txtFunFunFun"+String.fromCharCode(10)+"clipboard 1"+String.fromCharCode(10)+"clipboard 2"+String.fromCharCode(10)+"clipboard 3"+String.fromCharCode(10)+"clipboard 4"+String.fromCharCode(10)+"clipboard 5"+String.fromCharCode(10)+"clipboard 6"+String.fromCharCode(10)+"clipboard 7"+String.fromCharCode(10)+"clipboard 8"+String.fromCharCode(10)+"clipboard 9";
	this.wndMenu.lstSubmenuWindows.push(new TextWindow(this.computer,this.base,this,17,1,15,15,"",strSubenuContents,1));
	this.wndMenu.mnuCopyCutPaste=this.wndMenu.lstSubmenuWindows[4];
	this.wndMenu.mnuCopyCutPaste.blnMouseable=false;
	theSubmenuWindow=this.wndMenu.lstSubmenuWindows[4];
	theSubmenuWindow.intOperation=-1;
	theSubmenuWindow.funCopyCutPaste=function(intTarget){
			var mnuCopyCutPaste=that.wndMenu.mnuCopyCutPaste;
			var strOperation="null";
			var strTarget="null";
			if(mnuCopyCutPaste.intRootY>=1&&mnuCopyCutPaste.intRootY<=3){
				strOperation=["copy","cut","paste"][mnuCopyCutPaste.intRootY-1];
				strTarget=["txtFunFunFun()","clipboard1(),","clipboard2()","clipboard3()","clipboard4()","clipboard5()","clipboard6()","clipboard7()","clipboard8()","clipboard9()"][intTarget];
				switch(mnuCopyCutPaste.intRootY){
					case 1:
						that.wndEditing.copySelectedText(intTarget);
					break;
					case 2:
						that.wndEditing.cutSelectedText(intTarget);
					break;
					case 3:
						that.wndEditing.pasteBufferAfter(intTarget);
					break;
				}
			}
			that.closeAllSubmenuWindows();},
	theSubmenuWindow.lstFunctions=[
		function(){theSubmenuWindow.funCopyCutPaste(0);},
		function(){theSubmenuWindow.funCopyCutPaste(1);},
		function(){theSubmenuWindow.funCopyCutPaste(2);},
		function(){theSubmenuWindow.funCopyCutPaste(3);},
		function(){theSubmenuWindow.funCopyCutPaste(4);},
		function(){theSubmenuWindow.funCopyCutPaste(5);},
		function(){theSubmenuWindow.funCopyCutPaste(6);},
		function(){theSubmenuWindow.funCopyCutPaste(7);},
		function(){theSubmenuWindow.funCopyCutPaste(8);},
		function(){theSubmenuWindow.funCopyCutPaste(9);}
	];
	for(var ii=0;ii<this.wndMenu.lstSubmenuWindows.length;ii++){
		theSubmenuWindow=this.wndMenu.lstSubmenuWindows[ii];

		theSubmenuWindow.intMenuHighlight=-1;
		theSubmenuWindow.onMouseDown=this.submenuWindow_onMouseDown;
		theSubmenuWindow.onMouseMove=this.submenuWindow_onMouseMove;
		theSubmenuWindow.doHighlight=this.submenuWindow_doHighlight;

		theSubmenuWindow.onKeyDown=function(evtKey){
			if(that.wndMenu.lstSubmenuWindows.indexOf(this)!=3&&-1!=that.lstTextWindows.indexOf(that.wndMenu.lstSubmenuWindows[3]))return false;
				switch(evtKey.key){
					case "ArrowUp":
						if(-1==this.intMenuHighlight)this.intMenuHighlight=0;
						else{
							--this.intMenuHighlight;
							if(this.intMenuHighlight<0)this.intMenuHighlight=this.lstFunctions.length-1;
						}
						return true;
						break;
					case "ArrowDown":
	
						if(-1==this.intMenuHighlight)this.intMenuHighlight=0;
						else{
							this.intMenuHighlight=(++this.intMenuHighlight)%this.lstFunctions.length;
						}
						return true;
						break;
					case "Enter":
						this.lstFunctions[this.intMenuHighlight]();
						return true;
						break;
					case "ArrowRight":
						if(that.wndMenu.intMenuClicked>=0){
							var intMenuClicked=(++that.wndMenu.intMenuClicked)%(that.wndMenu.strMenuContents.split(" ").length);
							that.closeAllSubmenuWindows();
							that.wndMenu.intMenuClicked=intMenuClicked;
							that.wndMenu.lstSubmenuWindows[that.wndMenu.intMenuClicked].intMenuHighlight=0;
							that.lstTextWindows.push(that.wndMenu.lstSubmenuWindows[that.wndMenu.intMenuClicked]);
							return true;
						}
						break;
					case "ArrowLeft":
						if(that.wndMenu.intMenuClicked>=0){
							var intMenuClicked=--that.wndMenu.intMenuClicked;
							if(intMenuClicked<0)intMenuClicked=(that.wndMenu.strMenuContents.split(" ").length)-1;
							that.closeAllSubmenuWindows();
							that.wndMenu.intMenuClicked=intMenuClicked;
							that.wndMenu.lstSubmenuWindows[that.wndMenu.intMenuClicked].intMenuHighlight=0;
							that.lstTextWindows.push(that.wndMenu.lstSubmenuWindows[that.wndMenu.intMenuClicked]);
							return true;
						}
						break;

				}
				return false;
		}
	
	}
	this.submenuWindowsExtensions();
};
Program_TextEditor.prototype.menuWindows=function(){
	var strMenuContents="File Edit View Extensions";
	this.lstTextWindows.push(new TextWindow(this.computer,this.base,this,0,0,this.base.intScreenWidth_text-1,1,"",strMenuContents,0));
	this.wndMenu=this.lstTextWindows[this.lstTextWindows.length-1];
	this.wndMenu.blnMouseable=false;
	this.wndMenu.lstMenuIndices=[[0,3],[5,8],[10,13],[15,24]];
	this.wndMenu.strMenuContents=strMenuContents;
	this.wndMenu.intMenuClicked=-1;
	this.submenuWindows();
	var that=this;
	this.wndMenu.onMouseDown=function(evtEvent){
		var lstMenuEntry=null;
		for(var ii=0;ii<that.wndMenu.lstMenuIndices.length;ii++){
			lstMenuEntry=that.wndMenu.lstMenuIndices[ii];
			if(Math.round(that.fltMouseX)>=lstMenuEntry[0]&&Math.round(that.fltMouseX)<=lstMenuEntry[1]){
				if(ii!=that.wndMenu.intMenuClicked){
					that.closeAllSubmenuWindows();
					that.wndMenu.intMenuClicked=ii;	
					that.lstTextWindows.push(that.wndMenu.lstSubmenuWindows[ii]);
				}else{
					that.closeAllSubmenuWindows();
				}
			}
		}
	};
	this.wndMenu.onKeyDown=function(evtKey){
		switch(evtKey.key){
			case "Escape":
				if(that.wndMenu.intMenuClicked>=0){
					that.closeAllSubmenuWindows();
					return true;
				}
				else{
					if(true==evtKey.ctrlKey){
						that.wndMenu.intMenuClicked=0;	
						that.wndMenu.lstSubmenuWindows[that.wndMenu.intMenuClicked].intMenuHighlight=0;
						that.lstTextWindows.push(that.wndMenu.lstSubmenuWindows[that.wndMenu.intMenuClicked]);
						return true;
					}
				}
			break;
		}
		return false;

	};
};
Program_TextEditor.prototype.getTextWindowUnderXY=function(intX,intY){
	var theTextWindow;
	for(var ii=this.lstTextWindows.length-1;ii>=0;ii--){
		theTextWindow=this.lstTextWindows[ii];
		if(intX>=theTextWindow.intRootX&&intX<=theTextWindow.intRootX+theTextWindow.intWidth&&intY>=theTextWindow.intRootY&&intY<=theTextWindow.intRootY+theTextWindow.intHeight)
			return theTextWindow;
	}
	return null;
};
Program_TextEditor.prototype.bringToFront=function(theTextWindow){
	var newLstTextWindows=[];
	var theTextWindow2;
	for(var ii=0;ii<this.lstTextWindows.length;ii++){
		theTextWindow2=this.lstTextWindows[ii];	
		if(theTextWindow!=theTextWindow2)newLstTextWindows.push(theTextWindow2);
	}
	newLstTextWindows.push(theTextWindow);
	this.lstTextWindows=newLstTextWindows;
	if(-1!=this.lstEditingWindows.indexOf(theTextWindow)){
		var newLstEditingWindows=[];
		for(var ii=0;ii<this.lstEditingWindows.length;ii++){
			theTextWindow2=this.lstEditingWindows[ii];	
			if(theTextWindow!=theTextWindow2)newLstEditingWindows.push(theTextWindow2);
		}
		newLstEditingWindows.push(theTextWindow);
		this.lstEditingWindows=newLstEditingWindows;
	}
};
Program_TextEditor.prototype.parseDimensions=function(strCommand){
	var lstCommand=[];
	var intBracket0,intBracket1;
	intBracket0=strCommand.indexOf("(");
	intBracket1=strCommand.indexOf(")");
	var lstArguments=strCommand.substring(intBracket0+1,intBracket1).split(",");
	if(-1==intBracket0||-1==intBracket1)
		lstCommand=strCommand.split(" ");
	else{
		lstCommand[0]=0;
		for(var ii=0;ii<lstArguments.length;ii++)lstCommand[ii+1]=lstArguments[ii];
	}
	var intRootX=parseInt(lstCommand[1]);
	if(true==netspace.nonNumber(intRootX))intRootX=2;
	var intRootY=parseInt(lstCommand[2]);
	if(true==netspace.nonNumber(intRootY))intRootY=2;
	var intWidth=parseInt(lstCommand[3]);
	if(true==netspace.nonNumber(intWidth))intWidth=(this.base.intScreenWidth_text-1)/2;
	var intHeight=parseInt(lstCommand[4]);
	if(true==netspace.nonNumber(intHeight))intHeight=(this.base.intScreenHeight_text-1)/2;
	var intBorderSize=parseInt(lstCommand[5]);
	if(true==netspace.nonNumber(intBorderSize))intBorderSize=1;
	return [intRootX,intRootY,intWidth,intHeight,intBorderSize];
};
Program_TextEditor.prototype.newWindow=function(strCommand){
	var intRootX,intRootY,intWidth,intHeight,intBorderSize;
	var lstReturn=this.parseDimensions(strCommand);
	intRootX=lstReturn[0];
	intRootY=lstReturn[1];
	intWidth=lstReturn[2];
	intHeight=lstReturn[3];
	intBorderSize=lstReturn[4];
	var wndEditing;
	wndEditing=new TextWindow(this.computer,this.base,this,intRootX,intRootY,intWidth,intHeight,"","",intBorderSize);
	this.lstTextWindows.push(wndEditing);
	this.lstEditingWindows.push(wndEditing);

	this.intFocusWindow=this.lstTextWindows.length-1;
	this.wndEditing=this.lstTextWindows[this.lstTextWindows.length-1];
	this.newTextFile();
	if(true==this.blnSimpleMode)
		this.wndEditing.setInsertMode("i");
};
Program_TextEditor.prototype.resizeWindow=function(strCommand){
	this.wndEditing.resize(strCommand);
};
Program_TextEditor.prototype.closeWindow=function(){
	this.wndEditing.close();
};
Program_TextEditor.prototype.oneSimpleWindow=function(){
	var strTxtFunFunFunContents=document.getElementById("txtFunFunFun").value;
	var wndEditing=new TextWindow(this.computer,this.base,this,0,1,this.base.intScreenWidth_text,this.base.intScreenHeight_text-1,"","",1);
	this.lstTextWindows.push(wndEditing);
	this.lstEditingWindows.push(wndEditing);
	this.intFocusWindow=this.lstTextWindows.length-1;
	this.blnSimpleMode=true;
	this.wndEditing=this.lstTextWindows[this.lstTextWindows.length-1];
	this.wndEditing.loadEditingText(strTxtFunFunFunContents,"txtFunFunFun");
	this.wndEditing.setInsertMode("i");
	this.menuWindows();
};
Program_TextEditor.prototype.oneMiniFullscreenWindow=function(){
	var strTxtFunFunFunContents=document.getElementById("txtFunFunFun").value;
	var wndEditing=new TextWindow(this.computer,this.base,this,0,0,this.base.intScreenWidth_text,this.base.intScreenHeight_text-1,"","",0);
	this.lstTextWindows.push(wndEditing);
	this.lstEditingWindows.push(wndEditing);
	this.intFocusWindow=this.lstTextWindows.length-1;
	this.wndEditing=this.lstTextWindows[this.lstTextWindows.length-1];
	this.wndEditing.loadEditingText(strTxtFunFunFunContents,"txtFunFunFun");
	this.blnSimpleMode=false;
};
Program_TextEditor.prototype.oneMaxiFullscreenWindow=function(){
	var strTxtFunFunFunContents=document.getElementById("txtFunFunFun").value;
	var wndEditing=new TextWindow(this.computer,this.base,this,0,1,this.base.intScreenWidth_text,this.base.intScreenHeight_text-2,"","",1);
	this.lstTextWindows.push(wndEditing);
	this.lstEditingWindows.push(wndEditing);
	this.intFocusWindow=this.lstTextWindows.length-1;
	this.wndEditing=this.lstTextWindows[this.lstTextWindows.length-1];
	this.wndEditing.loadEditingText(strTxtFunFunFunContents,"txtFunFunFun");
	this.blnSimpleMode=false;
	this.menuWindows();
};
Program_TextEditor.prototype.twoMiniVerticalWindows=function(){
	var strTxtFunFunFunContents=document.getElementById("txtFunFunFun").value;
	var wndEditing;
	wndEditing=new TextWindow(this.computer,this.base,this,0,0,Math.floor(this.base.intScreenWidth_text/2)-1,this.base.intScreenHeight_text-1,"","",0);
	this.lstTextWindows.push(wndEditing);
	this.lstEditingWindows.push(wndEditing);
	wndEditing=new TextWindow(this.computer,this.base,this,Math.floor(this.base.intScreenWidth_text/2)+1,0,Math.floor(this.base.intScreenWidth_text/2)-1,this.base.intScreenHeight_text-1,"","",0);
	this.lstTextWindows.push(wndEditing);
	this.lstEditingWindows.push(wndEditing);

	this.lstTextWindows[1].wndLeft=this.lstTextWindows[2];
	this.lstTextWindows[1].wndRight=this.lstTextWindows[2];
	this.lstTextWindows[1].loadEditingText(strTxtFunFunFunContents,"txtFunFunFun");

	this.lstTextWindows[2].wndLeft=this.lstTextWindows[1];
	this.lstTextWindows[2].wndRight=this.lstTextWindows[1];
	this.lstTextWindows[2].loadEditingText(strTxtFunFunFunContents,"txtFunFunFun");

	this.intFocusWindow=this.lstTextWindows.length-2;
	this.wndEditing=this.lstTextWindows[this.lstTextWindows.length-2];
	this.blnSimpleMode=false;
};
Program_TextEditor.prototype.twoMaxiVerticalWindows=function(){
	var strTxtFunFunFunContents=document.getElementById("txtFunFunFun").value;
	var wndEditing;
	wndEditing=new TextWindow(this.computer,this.base,this,0,1,Math.floor(this.base.intScreenWidth_text/2)-1,this.base.intScreenHeight_text-2,"","",1);
	this.lstTextWindows.push(wndEditing);
	this.lstEditingWindows.push(wndEditing);
	wndEditing=new TextWindow(this.computer,this.base,this,Math.floor(this.base.intScreenWidth_text/2)+1,1,Math.floor(this.base.intScreenWidth_text/2)-1,this.base.intScreenHeight_text-2,"","",1);
	this.lstTextWindows.push(wndEditing);
	this.lstEditingWindows.push(wndEditing);

	this.lstTextWindows[1].wndLeft=this.lstTextWindows[2];
	this.lstTextWindows[1].wndRight=this.lstTextWindows[2];
	this.lstTextWindows[1].loadEditingText(strTxtFunFunFunContents,"strTxtFunFunFun");

	this.lstTextWindows[2].wndLeft=this.lstTextWindows[1];
	this.lstTextWindows[2].wndRight=this.lstTextWindows[1];
	this.lstTextWindows[2].loadEditingText(strTxtFunFunFunContents,"strTxtFunFunFun");

	this.intFocusWindow=this.lstTextWindows.length-2;
	this.wndEditing=this.lstTextWindows[this.lstTextWindows.length-2];
	this.blnSimpleMode=false;
	this.menuWindows();
};
Program_TextEditor.prototype.twoMiniHorizontalWindows=function(){
	var strTxtFunFunFunContents=document.getElementById("txtFunFunFun").value;
	var wndEditing;
	wndEditing=new TextWindow(this.computer,this.base,this,0,0,this.base.intScreenWidth_text,Math.floor(this.base.intScreenHeight_text/2)-1,"","",0);
	this.lstTextWindows.push(wndEditing);
	this.lstEditingWindows.push(wndEditing);
	wndEditing=new TextWindow(this.computer,this.base,this,0,Math.floor(this.base.intScreenHeight_text/2),this.base.intScreenWidth_text,Math.floor(this.base.intScreenHeight_text/2)-1,"","",0);
	this.lstTextWindows.push(wndEditing);
	this.lstEditingWindows.push(wndEditing);

	this.lstTextWindows[1].wndDown=this.lstTextWindows[2];
	this.lstTextWindows[1].wndUp=this.lstTextWindows[2];
	this.lstTextWindows[1].loadEditingText(strTxtFunFunFunContents,"txtFunFunFun");

	this.lstTextWindows[2].wndDown=this.lstTextWindows[1];
	this.lstTextWindows[2].wndUp=this.lstTextWindows[1];
	this.lstTextWindows[2].loadEditingText(strTxtFunFunFunContents,"txtFunFunFun");

	this.intFocusWindow=this.lstTextWindows.length-2;
	this.wndEditing=this.lstTextWindows[this.lstTextWindows.length-2];
	this.blnSimpleMode=false;
};
Program_TextEditor.prototype.twoMaxiHorizontalWindows=function(){
	var strTxtFunFunFunContents=document.getElementById("txtFunFunFun").value;
	var wndEditing;
	wndEditing=new TextWindow(this.computer,this.base,this,0,1,this.base.intScreenWidth_text,Math.floor(this.base.intScreenHeight_text/2)-2,"","",1);
	this.lstTextWindows.push(wndEditing);
	this.lstEditingWindows.push(wndEditing);
	wndEditing=new TextWindow(this.computer,this.base,this,0,Math.floor(this.base.intScreenHeight_text/2)+1,this.base.intScreenWidth_text,Math.floor(this.base.intScreenHeight_text/2)-2,"","",1);
	this.lstTextWindows.push(wndEditing);
	this.lstEditingWindows.push(wndEditing);

	this.lstTextWindows[1].wndDown=this.lstTextWindows[2];
	this.lstTextWindows[1].wndUp=this.lstTextWindows[2];
	this.lstTextWindows[1].loadEditingText(strTxtFunFunFunContents,"txtFunFunFun");

	this.lstTextWindows[2].wndDown=this.lstTextWindows[1];
	this.lstTextWindows[2].wndUp=this.lstTextWindows[1];
	this.lstTextWindows[2].loadEditingText(strTxtFunFunFunContents,"txtFunFunFun");

	this.intFocusWindow=this.lstTextWindows.length-2;
	this.wndEditing=this.lstTextWindows[this.lstTextWindows.length-2];
	this.blnSimpleMode=false;
	this.menuWindows();
};
Program_TextEditor.prototype.twoSimpleVerticalWindows=function(){
	var strTxtFunFunFunContents=document.getElementById("txtFunFunFun").value;
	var wndEditing;
	wndEditing=new TextWindow(this.computer,this.base,this,0,1,Math.floor(this.base.intScreenWidth_text/2)-1,this.base.intScreenHeight_text-1,"","",1);
	this.lstTextWindows.push(wndEditing);
	this.lstEditingWindows.push(wndEditing);
	wndEditing=new TextWindow(this.computer,this.base,this,Math.floor(this.base.intScreenWidth_text/2)+1,1,Math.floor(this.base.intScreenWidth_text/2)-1,this.base.intScreenHeight_text-1,"","",1);
	this.lstTextWindows.push(wndEditing);
	this.lstEditingWindows.push(wndEditing);

	this.lstTextWindows[1].wndLeft=this.lstTextWindows[2];
	this.lstTextWindows[1].wndRight=this.lstTextWindows[2];
	this.lstTextWindows[1].loadEditingText(strTxtFunFunFunContents,"txtFunFunFun");

	this.lstTextWindows[2].wndLeft=this.lstTextWindows[1];
	this.lstTextWindows[2].wndRight=this.lstTextWindows[1];
	this.lstTextWindows[2].loadEditingText(strTxtFunFunFunContents,"txtFunFunFun");

	this.intFocusWindow=this.lstTextWindows.length-2;
	this.wndEditing=this.lstTextWindows[this.lstTextWindows.length-2];
	this.blnSimpleMode=true;
	this.wndEditing.setInsertMode("i");
	this.menuWindows();
};
Program_TextEditor.prototype.twoSimpleHorizontalWindows=function(){
	var strTxtFunFunFunContents=document.getElementById("txtFunFunFun").value;
	var wndEditing;
	wndEditing=new TextWindow(this.computer,this.base,this,0,1,this.base.intScreenWidth_text,Math.floor(this.base.intScreenHeight_text/2)-1,"","",1);
	this.lstTextWindows.push(wndEditing);
	this.lstEditingWindows.push(wndEditing);
	var wndEditing=new TextWindow(this.computer,this.base,this,0,Math.floor(this.base.intScreenHeight_text/2)+1,this.base.intScreenWidth_text,Math.floor(this.base.intScreenHeight_text/2)-1,"","",1);
	this.lstTextWindows.push(wndEditing);
	this.lstEditingWindows.push(wndEditing);

	this.lstTextWindows[1].wndDown=this.lstTextWindows[2];
	this.lstTextWindows[1].wndUp=this.lstTextWindows[2];
	this.lstTextWindows[1].loadEditingText(strTxtFunFunFunContents,"txtFunFunFun");

	this.lstTextWindows[2].wndDown=this.lstTextWindows[1];
	this.lstTextWindows[2].wndUp=this.lstTextWindows[1];
	this.lstTextWindows[2].loadEditingText(strTxtFunFunFunContents,"txtFunFunFun");

	this.intFocusWindow=this.lstTextWindows.length-2;
	this.wndEditing=this.lstTextWindows[this.lstTextWindows.length-2];
	this.blnSimpleMode=true;
	this.wndEditing.setInsertMode("i");
	this.menuWindows();
};
Program_TextEditor.prototype.promptInits=function(){
	this.lstTextWindows.push(new TextWindow(this.computer,this.base,this,0,this.base.intScreenHeight_text-1,this.base.intScreenWidth_text,1,"","",0));
	this.wndPrompt=this.lstTextWindows[0];

	this.wndPrompt.blnWrap=false;
	this.wndPrompt.strCommand="";
	this.wndPrompt.lstCommandsHistory=[];
	this.wndPrompt.intCommandsHistoryLimit=1000;
	this.wndPrompt.strPromptContent="";
	this.wndPrompt.lstCommands1History=[];
	this.wndPrompt.lstCommands2History=[];
	this.wndPrompt.strNewestEntry="";
	this.wndPrompt.intHistoryEntry=-1;
	this.wndPrompt.intCommandMode=0;
	this.wndPrompt.strPrefix="";
	this.wndPrompt.intCommandCounter=0;
	this.wndPrompt.strCommandBuilder="";
	this.wndPrompt.strStatus="";
	this.wndPrompt.addCommandToHistory_=function(strCommand,lstHistory){
		if(lstHistory.length>=this.intCommandsHistoryLimit)
		{
			for(var ii=0;ii<this.lstHistory.length;ii++){
				lstHistory[ii]=lstHistory[ii+1];
			}
			lstHistory[lstHistory.length-1]=strCommand;
		}else{
			lstHistory.push(strCommand);
			}
	};
	this.wndPrompt.addCommandToHistory=function(strCommand){
		if(1==this.intCommandMode)this.addCommandToHistory_(strCommand,this.lstCommands1History);
		if(2==this.intCommandMode)this.addCommandToHistory_(strCommand,this.lstCommands2History);
	};
	this.wndPrompt.resetHistoryCounter=function(){
		this.intHistoryEntry=-1;
		this.strNewestEntry="";
	};
	this.wndPrompt.reloadNewestEntry=function(){
		this.strCommand=this.strNewestEntry;
		this.strNewestEntry="";
		var strTextContents=this.strPrefix+this.strCommand;
		this.setLstCursor_buffer0(this.strPrefix.length+this.strCommand.length);
		this.theSuper.appendPromptContents(strTextContents);
	};
	this.wndPrompt.saveNewestEntry=function(){
		this.strNewestEntry=this.strCommand;
	};
	this.wndPrompt.showHistoryEntry=function(){
		var lstHistory=null;
		if(1==this.intCommandMode)lstHistory=this.lstCommands1History;
		if(2==this.intCommandMode)lstHistory=this.lstCommands2History;
		if(null==lstHistory)return;	
		if(-1==this.intHistoryEntry)return;
		else{ 
			this.strCommand=""+lstHistory[this.intHistoryEntry];
			var strTextContents=this.strPrefix+this.strCommand;
			this.setLstCursor_buffer0(this.strPrefix.length+this.strCommand.length);
			this.theSuper.appendPromptContents(strTextContents);
		}
	};
	this.wndPrompt.historyUp=function(){
		var lstHistory=null;
		if(1==this.intCommandMode)lstHistory=this.lstCommands1History;
		if(2==this.intCommandMode)lstHistory=this.lstCommands2History;
		if(null==lstHistory)return;	
		if(-1==this.intHistoryEntry){
			this.saveNewestEntry();
			this.intHistoryEntry=lstHistory.length-1;
		}
		else{
			if(this.intHistoryEntry>0)this.intHistoryEntry--;
			else return;
		}
		this.showHistoryEntry();

	};
	this.wndPrompt.historyDown=function(){
		var lstHistory=null;
		if(1==this.intCommandMode)lstHistory=this.lstCommands1History;
		if(2==this.intCommandMode)lstHistory=this.lstCommands2History;
		if(null==lstHistory)return;	
		if(-1==this.intHistoryEntry)return;
		else{
			if(this.intHistoryEntry<lstHistory.length-1)this.intHistoryEntry++;
			else{
				this.intHistoryEntry=-1;
				this.reloadNewestEntry();
			}
		}
		this.showHistoryEntry();
	};
	this.wndPrompt.cursorLeft=function(){
		this.setLstCursor_buffer0(this.lstCursor_buffer[0]-1);
		this.computeScreenCursor(true);
	};
	this.wndPrompt.cursorRight=function(){
		this.setLstCursor_buffer0(this.lstCursor_buffer[0]+1);
		this.computeScreenCursor(true);
	};
};
Program_TextEditor.prototype.inits_=function(){
	this.base.blnTextMode=true;
	this.lstTextWindows=[];
	this.promptInits();
	this.analyzeCommandline();
	this.setStatus("");
	this.interpretInitialCommands();
	this.inchesKeyboard.inits();
};
Program_TextEditor.prototype.inits=function(){
	if(this.strArgs!=this.prevStrArgs)
		this.inits_();
};
Program_TextEditor.prototype.readFile=function(e,func){
	var file=e.target.files[0];
	var that=this;


	var theActualProgram=netspace.computer.theActualProgram;
	var that=null;
	if(undefined==theActualProgram.newTerminal)that=theActualProgram;
	else{
		var intXWindowNumber=theActualProgram.lstXWindows.length-1;
		that=theActualProgram.lstXWindows[intXWindowNumber].theActualProgram.theActualProgram;
	}
	that.wndEditing.objArgs={};
	that.wndEditing.objArgs.fileInfo=that.wndEditing.getFileInfo(e.target.files[0]);
	that.wndEditing.objArgs.e=e;
	//mhdmodiff--
	//arrNames=file.name.split(".");	
	var arrNames=file.name.split(".");	
	//mhdmodiff--
	var blnNonUnicode;
	if(!file)
		return;
	var reader0=new FileReader();
	var reader=new FileReader();
	reader0.onload=function(e){
		//mhdmodiff
		//nonUnicode(e.target.result,function(exists){
		netspace.nonUnicode(e.target.result,function(exists){
			if(exists){blnNonUnicode=true;}
				else{blnNonUnicode=false;reader.readAsText(file);}
			},this.objArgs);
		};
	reader0.readAsDataURL(file);
	reader.onload=function(e){
		var contents=e.target.result;
		if(undefined==func){
			//mhdmodiff--
			//if(null!=fileInput.func)
			if(null!=that.fileInput.func)
				//mhdmodiff--
				//fileInput.func(contents);
				that.fileInput.func(contents);
		}else func(contents);
		try{
			//mhdmodiff--
			//document.body.removeChild(fileInput);
			document.body.removeChild(that.fileInput);
			//mhdmodiff--
			this.fileInput=null;
		}catch(xcp){}
	};
	function previewText(){
		reader.readAsText(file);
			return;
	}
	function checkText(){
		if(blnNonUnicode==false){
			reader.readAsText(file);
			retrun;
		}
		if(blnNonUnicode==-1){
			setTimeout(checkText,1000);
		}
	}
};
Program_TextEditor.prototype.openFile=function(func,objArgs){
	if(null!=objArgs){
	}
	//mhdmodiff--
	//fileInput=document.createElement("input");
	this.fileInput=document.createElement("input");
	//mhdmodiff--
	this.fileInput.type="file";
	//mhdmodiff--
	this.fileInput.style.display="none";
	//mhdmodiff--
	this.fileInput.onchange=this.readFile;
	//mhdmodiff--
	this.fileInput.func=func;
	//mhdmodiff--
	document.body.appendChild(this.fileInput);
	//mhdmodiff
	//clickComponent(fileInput);
	//mhdmodiff--
	netspace.clickComponent(this.fileInput);
};
Program_TextEditor.prototype.updateDimensions=function(){
	var txtWindow,diffX,diffY,diffMoveX,diffMoveY;
	var newRootX,newRootY,newWidth,newHeight;
	var blnChange;
	for(var ii=0;ii<this.lstTextWindows.length;ii++)
	{
		blnChange=false;
		txtWindow=this.lstTextWindows[ii];
		newRootX=txtWindow.intRootX;
		newRootY=txtWindow.intRootY;
		newWidth=txtWindow.intWidth;
		newHeight=txtWindow.intHeight;
		diffX=this.base.intScreenWidth_text-(txtWindow.intRootX+txtWindow.intWidth);
		if(diffX<0){
			if(txtWindow.intRootX>0){
				newRootX=txtWindow.intRootX+diffX;
				if(newRootX<0){
					newWidth=txtWindow.intWidth-newRootX;
					newRootX=0;
				}
			}else{
					newWidth=txtWindow.intWidth+diffX;

			}
			blnChange=true;
		}
		diffY=this.base.intScreenHeight_text-(txtWindow.intRootY+txtWindow.intHeight);
		if(diffY<0){
			if(txtWindow.intRootY>1){
				newRootY=txtWindow.intRootY+diffY;	
				if(newRootY<1){
					newHeight=txtWindow.intHeight-newRootY-1;
					newRootY=1;
				}
			}else{
					newHeight=txtWindow.intHeight+diffY;

			}
			blnChange=true;
		}
		if(true==blnChange){
			txtWindow.setNewDimensions(newRootX,newRootY,newWidth,newHeight,txtWindow.intBorderSize);
			txtWindow.updateWndEditing(true);
		}
	}
};
Program_TextEditor.prototype.stopFinalizations=function(strString){
	this.prevStrArgs=this.strArgs;
};
Program_TextEditor.prototype.exitFinalizations=function(strString){
	this.prevStrArgs=this.strArgs;
};
Program_TextEditor.prototype.updateWndEditing=function(blnAlign){
	this.wndEditing.updateWndEditing(blnAlign);
};
Program_TextEditor.prototype.getStrContents=function(){
	return this.wndEditing.getStrContents();
};
Program_TextEditor.prototype.newTextFile=function(){
	this.wndEditing.newTextFile();
};
Program_TextEditor.prototype.openTextFile=function(){
	var objArgs={};
	objArgs.varCols=null;
	objArgs.varRows=null;
	var that=this;
	this.openFile(function(content){that.wndEditing.loadEditingText(content,objArgs);},objArgs);
};
Program_TextEditor.prototype.getTextFileContent=function(){
	var objArgs={};
	objArgs.varCols=null;
	objArgs.varRows=null;
	var that=this;
	this.openFile(function(content){that.insertStringContent(content);},objArgs);
};
Program_TextEditor.prototype.findPairingBracketInString=function(strString,strBracket,intII){
	var blnBracket=false;
	var lstBrackets=["(",")","[","]","{","}"];
	var intBracket=lstBrackets.indexOf(strBracket);
	if(-1==intBracket)return -1;
	var lstClosingBrackets=[")","(","]","[","}","{"];
	var intOccurence=1;
	if(0==intBracket%2){
		for(var ii=intII+1;ii<strString.length;ii++){
				if(strString[ii]==strBracket)intOccurence++;
				if(strString[ii]==lstClosingBrackets[intBracket])intOccurence--;
				if(0==intOccurence)return ii;
		}
	}else{
		for(var ii=intII-1;ii>=0;ii--){
				if(strString[ii]==strBracket)intOccurence++;
				if(strString[ii]==lstClosingBrackets[intBracket])intOccurence--;
				if(0==intOccurence)return ii;

		}
	}
	return -1;
};
Program_TextEditor.prototype.addExtensionsContent=function(strTextContent){
	/*file with extension functions in format:
	function extensionName(that,strArgs){

	}
	*/
	var intFunction=0;
	var intBracket40=-1,intBracket41=-1,intBracket123=-1,intBracket125=-1;
	var strRest=strTextContent;
	var strFunctionName,strFunctionCode,strFunctionNewName,intExtensionCounter;
	var funExtension;
	intExtensionCounter=this.lstExtensionFunctions.length;
	var intJ;
	var that=this;
	var strFunctionAlreadyLoaded="";
	while(-1!=intFunction){
		intFunction=strRest.indexOf("function");
		if(-1==intFunction)break;
		intBracket40=strRest.indexOf("(");
		if(-1==intBracket40||intBracket40<intFunction)break;
		strFunctionName=strRest.substring(intFunction+9,intBracket40);
		if(0==strFunctionName.length)break;
		intBracket41=strRest.indexOf(")");
		if(-1==intBracket41||intBracket40>intBracket41)break;
		if("that,strArgs"!=strRest.substring(intBracket40+1,intBracket41))break;
		intBracket123=strRest.indexOf("{");
		if(-1==intBracket123||intBracket123<intBracket41)break;
		intBracket125=this.findPairingBracketInString(strRest,"{",intBracket123);
		if(-1==intBracket125||intBracket123>intBracket125)break;
		strFunctionCode=strRest.substring(intBracket123+1,intBracket125);
		if(0==strFunctionCode.length)break;
		if(-1==this.lstExtensionFunctionNames.indexOf(strFunctionName)){
			this.lstExtensionFunctionNames.push(strFunctionName);
			//mhdmodiff--
			//strFunctionNewName="Program_TextEditor_extension"+intExtensionCounter;
			strFunctionNewName="var Program_TextEditor_extension"+intExtensionCounter;
			funExtension=eval(strFunctionNewName+"=function(that,strArgs){"+strFunctionCode+"}");
			this.lstExtensionFunctions.push(funExtension);
			intExtensionCounter++;
			if(null!=this.wndMenu){
				this.wndMenu.mnuExtensions.lstFunctions.push(function(){if(-1==that.wndMenu.mnuExtensions.intMenuHighlight){that.closeAllSubmenuWindows();return;}var strArgs=prompt("Extension strArgs:");if(null==strArgs){that.closeAllSubmenuWindows();return;};var intFunctionIndex=that.wndMenu.mnuExtensions.intMenuHighlight-5;that.closeAllSubmenuWindows();that.lstExtensionFunctions[intFunctionIndex](that,strArgs)});

				intJ=this.wndMenu.mnuExtensions.lstTextBuffer.length;
				this.wndMenu.mnuExtensions.insertNewline_noUndo(intJ,strFunctionName);
				this.wndMenu.mnuExtensions.updateWndEditing(true);
			}
		}else{
			strFunctionAlreadyLoaded="Function "+strFunctionName+" already loaded.";	
			alert(strFunctionAlreadyLoaded);
			console.log(strFunctionAlreadyLoaded);
		}
		strRest=strRest.substring(intBracket125+1);
	}
};
Program_TextEditor.prototype.getExtensionsFileContent=function(){
	var objArgs={};
	objArgs.varCols=null;
	objArgs.varRows=null;
	var that=this;
	this.openFile(function(content){that.addExtensionsContent(content);},objArgs);
};
Program_TextEditor.prototype.indexOf_backwards=function(lstBuffer,strText){
	for(var j=lstBuffer.length-1;j>=0;j--){
		if(strText==lstBuffer[j])return j;
	}
	return -1;
};
Program_TextEditor.prototype.insertStringContent=function(strTextContent){
	var lstReturn=this.wndEditing.detectEntersInString(strTextContent);
	var chrEnter=lstReturn[0];
	var lstTextContents=strTextContent.split(chrEnter);
	if(0==lstTextContents[lstTextContents.length-1])lstTextContents.splice(lstTextContents.length-1,1);
	this.wndEditing.insertLstStringContents(lstTextContents);
};
Program_TextEditor.prototype.runExternalCommand_=function(strCommand){
	this.base.theShell.editPrompt(strCommand);
	var prevArrScreenContent=this.wndEditing.copyList(this.base.theShell.arrScreenContent);
	this.base.theShell.enterEnter(true);
	var actualArrScreenContent=this.wndEditing.copyList(this.base.theShell.arrScreenContent);
	var intLine=this.indexOf_backwards(actualArrScreenContent,prevArrScreenContent[prevArrScreenContent.length-1]);
	if(-1==intLine)intLine=0;
	var lstCommandOutput=[];
	for(var j=intLine+1;j<actualArrScreenContent.length-1;j++){
		lstCommandOutput.push(actualArrScreenContent[j]);
	}
	return lstCommandOutput;
};
Program_TextEditor.prototype.insertExternalContent=function(strCommand){
	var strContent="";
	var intExclamationMark=strCommand.indexOf("!");
	if(-1!=intExclamationMark){
		lstContents=this.runExternalCommand_(strCommand.substring(intExclamationMark+1));
		this.wndEditing.insertLstStringContents(lstContents);
	}else{
		this.getTextFileContent();
	}
};
Program_TextEditor.prototype.runExternalCommand=function(strCommand){
	var strContent="";
	var intExclamationMark=strCommand.indexOf("!");
	if(-1!=intExclamationMark){
		lstContents=this.runExternalCommand_(strCommand.substring(intExclamationMark+1));
	}
};
Program_TextEditor.prototype.runExtension=function(strCommand){
	var lstArgs;
	if(" "==strCommand[2]&&" "!=strCommand[3])
		lstArgs=strCommand.substring(3).split(" ");
	else lstArgs=strCommand.substring(2).split(" ");
	var strExtensionName=lstArgs[0];
	var strArgs=strCommand.substring(strCommand.indexOf(strExtensionName)+strExtensionName.length+1);
	var intExtension=this.lstExtensionFunctionNames.indexOf(strExtensionName);
	if(-1!=intExtension)this.lstExtensionFunctions[intExtension](this,strArgs);
};
Program_TextEditor.prototype.saveAsFilenameTextFileDownload=function(strFilename){
	var strContent=this.wndEditing.getStrContents();
	if(strContent.length>0&&"string"==typeof(this.wndEditing.theFileInfo)&&"new_"==this.wndEditing.theFileInfo.substring(0,4)){
		this.wndEditing.theFileInfo="new"+this.wndEditing.theFileInfo.substring(4);
	}
	//mhdmodiff
	netspace.linkSaveFile(strContent,strFilename,"save");
	//mhdmodiff
	netspace.clickComponent(document.getElementById("save"));
	this.wndEditing.blnModiff=false;
};
Program_TextEditor.prototype.openDefaultShaderText=function(intShaderSlot){
	if(null==netspace.shaderThinkpad){
		this.setStatus("Shader thinkpad not loaded - load it first");
		return;
	}
	var content=netspace.shaderThinkpad.getShaderText("shaderThinkpad-fragment");
	var objArgs={};
	netspace.shaderThinkpad.lstStrActualShaders[intShaderSlot]=content;
	this.wndEditing.loadEditingText(netspace.shaderThinkpad.lstStrActualShaders[intShaderSlot],"shaderThinkpad");
};
Program_TextEditor.prototype.parseIntShaderSlot=function(strCommand){
	var lstCommand=strCommand.split(" ");
	if(1==lstCommand.length)return 0;
	var intShaderSlot=parseInt(lstCommand[1]);
	if(true==netspace.nonNumber(intShaderSlot))return 0;
	return intShaderSlot;
};
Program_TextEditor.prototype.openActualShaderText=function(strCommand){
	if(null==netspace.shaderThinkpad){
		this.setStatus("Shader thinkpad not loaded - load it first");
		return;
	}
	var intShaderSlot=this.parseIntShaderSlot(strCommand);
	if(intShaderSlot>=netspace.shaderThinkpad.lstShaderPrograms.length){
		this.MessageBox_ok("Only "+netspace.shaderThinkpad.lstShaderPrograms.length+" shadersSlots loaded from 0 to "+(netspace.shaderThinkpad.lstShaderPrograms.length-1),function(){});
		return;
	}
	if(null==netspace.shaderThinkpad.lstStrActualShaders[intShaderSlot])
		if(0==intShaderSlot)
			this.openDefaultShaderText(intShaderSlot);
		else this.setStatus("shaderSlot"+intShaderSlot+" not loaded yet");
	else{
	var objArgs={};
	this.wndEditing.loadEditingText(netspace.shaderThinkpad.lstStrActualShaders[intShaderSlot],"shaderThinkpad");

	}
};
Program_TextEditor.prototype.compileShader=function(strCommand){
	if(null==netspace.shaderThinkpad){
		this.setStatus("Shader thinkpad not loaded - load it first");
		return;
	}
	var strShader=this.wndEditing.getStrContents();
	var intShaderSlot=this.parseIntShaderSlot(strCommand);
	if(intShaderSlot>netspace.shaderThinkpad.lstShaderPrograms.length){
		this.MessageBox_ok("Enter shaderSlot number from 0 to "+netspace.shaderThinkpad.lstShaderPrograms.length+". There are only "+netspace.shaderThinkpad.lstShaderPrograms.length+" shadersSlots loaded now from 0 to "+(netspace.shaderThinkpad.lstShaderPrograms.length-1)+" and you can add shaders one by one, without leaving empty slots.",function(){});
		return;
	}

	netspace.shaderThinkpad.compileShader(strShader,intShaderSlot);
};
Program_TextEditor.prototype.openShaderTextFileAndCompile=function(strCommand){
	var objArgs={};
	objArgs.varCols=null;
	objArgs.varRows=null;
	var that=this;
	this.openFile(function(content){that.wndEditing.loadEditingText(content,objArgs);that.compileShader(strCommand);},objArgs);
};
Program_TextEditor.prototype.saveAsTextFileDownload=function(){
	this.saveAsFilenameTextFileDownload("TextEditor.txt");
};
Program_TextEditor.prototype.saveAsTextFileDownload_filename=function(){
	var strFilename=prompt("Enter filename to save:");
	if(null!=strFilename&&strFilename.length>0){
		this.saveAsFilenameTextFileDownload(strFilename);
	}
};
Program_TextEditor.prototype.reallyExitMessageBox=function(){
	var that=this;
	if(true==this.wndEditing.blnModiff){
		this.MessageBox_yesno("File not saved. Really close?",function(){this.base.exitProgram(this,"");},function(){that.closeAllSubmenuWindows();});
	}else{
		this.base.exitProgram(this,"");
	}
};
Program_TextEditor.prototype.reallyExit=function(){
	if(true==this.wndEditing.blnModiff){
		this.setStatus("File not saved. Force closing with !");
	}else{
		this.base.exitProgram(this,"");
	}
};
Program_TextEditor.prototype.interpretCommand=function(strCommand){
	/*set blnWrap=true*/
	if("set wrap"==strCommand){
		this.wndEditing.blnWrap=true;	
		this.updateWndEditing(true);
		return;
	}
	/*set blnWrap=false*/
	if("set nowrap"==strCommand){
		this.wndEditing.blnWrap=false;
		this.updateWndEditing(true);
		return;
	}
	if("n"==strCommand||"new"==strCommand){
		this.newTextFile();
		return;
	};
	if("o"==strCommand||"open"==strCommand||"read"==strCommand||"load"==strCommand||"upload"==strCommand){
		this.openTextFile();
		return;
	};
	if("r"==strCommand.substring(0,1)){
		this.insertExternalContent(strCommand);
		return;
	};
	if("!"==strCommand.substring(0,1)){
		this.runExternalCommand(strCommand);
		return;
	};
	if("extensions++"==strCommand.substring(0,12)){
		this.getExtensionsFileContent();
		return;
	};
	if("=>"==strCommand.substring(0,2)){
		this.runExtension(strCommand);
		return;
	};
	if("oshd"==strCommand.substring(0,4)){
		this.openActualShaderText(strCommand);
		return;
	}
	if("wshd"==strCommand.substring(0,4)){
		this.compileShader(strCommand);
		return;
	}
	if("owshd"==strCommand.substring(0,5)){
		this.openShaderTextFileAndCompile(strCommand);
		return;
	}
	if("initFastCruncher"==strCommand.substring(0,16)){
		this.wndEditing.initFastCruncher_(strCommand);
		return;
	}

	if("w"==strCommand||"write"==strCommand||"save"==strCommand||"saveas"==strCommand||"download"==strCommand){
		this.saveAsTextFileDownload();
		return;
	};
	if("w"==strCommand.substring(0,1)||"write"==strCommand.substring(0,5)||"save"==strCommand.substring(0,4)||"saveas"==strCommand.substring(0,6)||"download"==strCommand.substring(0,8)){
		var strFilename=strCommand.split(" ")[1];
		if(undefined!=strFilename){
			if(strFilename.length>0)
				this.saveAsFilenameTextFileDownload(strFilename);
			else this.saveAsTextFileDownload();
			return;
		}
	};
	if("q!"==strCommand||"quit!"==strCommand||"exit!"==strCommand||"close!"==strCommand){
			this.base.exitProgram(this,"");
	};
	if("q"==strCommand||"quit"==strCommand||"exit"==strCommand||"close"==strCommand){
		this.reallyExit();

	}
	/*set blnHltabs=true*/
	if("set hltabs"==strCommand||"set blnHighlightTabs=true"==strCommand){
		this.wndEditing.blnHltabs=true;
		this.updateWndEditing(true);
		return;
	}
	/*set blnHltabs=false*/
	if("set nohltabs"==strCommand||"unset hltabs"==strCommand||"set blnHighlightTabs=false"==strCommand){
		this.wndEditing.blnHltabs=false
		this.updateWndEditing(true);
		return;
	}
	if(-1!=strCommand.indexOf("<")||-1!=strCommand.indexOf(">")){
		var intTabPP,intTabMM;
		intTabPP=strCommand.indexOf(">");
		intTabMM=strCommand.indexOf("<");
		var lstStrLinesRange=strCommand.substring(0,strCommand.length-1).split(",");
		if(2==lstStrLinesRange.length){
			var lstIntLinesRange=[];
			var intNumber=parseInt(lstStrLinesRange[0]);
			if(false==netspace.nonNumber(intNumber))lstIntLinesRange.push(intNumber);
			intNumber=parseInt(lstStrLinesRange[1]);
			if(false==netspace.nonNumber(intNumber))lstIntLinesRange.push(intNumber);
			if(2==lstIntLinesRange.length){
				var intRangeStart=(lstIntLinesRange[0]<lstIntLinesRange[1])?lstIntLinesRange[0]:lstIntLinesRange[1];
				var intRangeEnd=(lstIntLinesRange[0]>lstIntLinesRange[1])?lstIntLinesRange[0]:lstIntLinesRange[1];
				if(strCommand.length-1==intTabPP){
					this.wndEditing.tabLinesRangePP(intRangeStart,intRangeEnd);
					return;
				}
				if(strCommand.length-1==intTabMM){
					this.wndEditing.tabLinesRangeMM(intRangeStart,intRangeEnd);
					return;
				}
			}
		}
	}
	/*set blnHighlightSearch=true*/
	if("set hlsearch"==strCommand||"set blnHlsearch=true"==strCommand){
		this.wndEditing.blnHighlightSearch=true;
		this.updateWndEditing(true);
		return;
	}
	/*set blnHighlightSearch=false*/
	if("set nohlsearch"==strCommand||"unset hlsearch"==strCommand||"set blnHlsearch=false"==strCommand){
		this.wndEditing.blnHighlightSearch=false
		this.updateWndEditing(true);
		return;
	}
	/*set blnProgrammaticShift_Lock=true*/
	if("set Shift_Lock"==strCommand||"set blnShift_Lock=true"==strCommand){
		this.wndEditing.blnProgrammaticShift_Lock=true;
		this.updateWndEditing(true);
		return;
	}
	/*set blnProgrammaticShift_Lock=false*/
	if("set noShift_Lock"==strCommand||"unset Shift_Lock"==strCommand||"set blnShift_Lock=false"==strCommand){
		this.wndEditing.blnProgrammaticShift_Lock=false
		this.updateWndEditing(true);
		return;
	}
	if("win++"==strCommand.substring(0,5)){
		this.newWindow(strCommand);
		this.updateWndEditing(true);
		return;
	}
	if("win--"==strCommand){
		this.closeWindow();
		this.updateWndEditing(true);
		return;
	}
	if("resize"==strCommand.substring(0,6)){
		this.resizeWindow(strCommand);
		this.updateWndEditing(true);
		return;
	}
	if("set nokeys"==strCommand||"unset keys"==strCommand){
		this.unsetKeyAliases(strCommand);
		this.updateWndEditing(true);
		this.setStatus("All keyaliases unset");
		return;
	}
	if("set key"==strCommand.substring(0,7)){
		/*set key "~"="Escape,Escape"*/
		if(true==this.setKeyAlias(strCommand)){
			this.updateWndEditing(true);
			return;
		}else{
			this.updateWndEditing(true);
			this.setStatus(""+String.fromCharCode(34)+"key,code"+String.fromCharCode(34)+" ex"+String.fromCharCode(34)+"+,Equal"+String.fromCharCode(34)+","+String.fromCharCode(34)+"Escape,Escape"+String.fromCharCode(34)+":set key="+String.fromCharCode(34)+"~"+String.fromCharCode(34)+"="+String.fromCharCode(34)+"Escape,Escape"+String.fromCharCode(34)+"");
			return;
		}
	}
	var intEqualIndex=strCommand.indexOf("=");
	if("set "==strCommand.substring(0,4)&&intEqualIndex>=0){
		var strVariable=strCommand.substring(4,intEqualIndex);
		var strValue=strCommand.substring(intEqualIndex+1);
		var strDerivedCommand="var theActualProgram=netspace.computer.theActualProgram;var that=null;if(undefined==theActualProgram.newTerminal)that=theActualProgram;else{var intXWindowNumber=theActualProgram.lstXWindows.length-1;that=theActualProgram.lstXWindows[intXWindowNumber].theActualProgram.theActualProgram;}theActualProgram.wndEditing."+strVariable+"="+strValue;
		eval(strDerivedCommand);
		this.updateWndEditing(true);
		return;
	}
};
Program_TextEditor.prototype.enterCommand_0modeCommand=function(evtEvent){
	this.setStatus("");
	
	if(1==evtEvent.key.length&&evtEvent.key!=this.wndEditing.chrEnter10&&evtEvent.key!=this.wndEditing.chrEnter13){
		this.wndPrompt.strCommandBuilder+=evtEvent.key;
	}
	else{
		if("Enter"==evtEvent.key){this.resetPromptState();this.cursorDown();return true;}
	}
	if(this.wndPrompt.strCommandBuilder.length<10){
		return this.interpret0modeCommand(evtEvent);
	}
	else{
		this.setStatus("Unknown command "+this.wndPrompt.strCommandBuilder);
		return true;
	}
};
Program_TextEditor.prototype.interpret0modeCommand=function(evtEvent){
	var strLine=this.wndEditing.lstTextBuffer[this.wndEditing.lstCursor_buffer[1]];
	if(0==this.wndPrompt.strCommandBuilder.length)return false;
	var strKey=this.wndPrompt.strCommandBuilder[this.wndPrompt.strCommandBuilder.length-1];
	if(this.isDigit(strKey)){
		var intClipboardNumber=strKey;
		if(4==this.wndPrompt.strCommandBuilder.length&&("y"+String.fromCharCode(39)==this.wndPrompt.strCommandBuilder.substring(0,this.wndPrompt.strCommandBuilder.length-2)||"c"+String.fromCharCode(39)==this.wndPrompt.strCommandBuilder.substring(0,this.wndPrompt.strCommandBuilder.length-2))){
			var chrMark=this.wndPrompt.strCommandBuilder[2];
			this.wndEditing.copyMarkedText(intClipboardNumber,chrMark);
			return true;
		}
		switch(this.wndPrompt.strCommandBuilder.substring(0,this.wndPrompt.strCommandBuilder.length-1)){
			case "p":
				if(0==this.wndPrompt.intCommandMode){
					if(this.wndPrompt.intCommandCounter>0){
						for(var ii=0;ii<this.wndPrompt.intCommandCounter;ii++)
							this.wndEditing.pasteBufferAfter(intClipboardNumber);
						this.wndPrompt.intCommandCounter=0;
						}else this.wndEditing.pasteBufferAfter(intClipboardNumber);
						return true;
				}
			break;
			case "P":
				if(0==this.wndPrompt.intCommandMode){
					if(this.wndPrompt.intCommandCounter>0){
						for(var ii=0;ii<this.wndPrompt.intCommandCounter;ii++)
							this.wndEditing.pasteBufferBefore(intClipboardNumber);
						this.wndPrompt.intCommandCounter=0;
						}else this.wndEditing.pasteBufferBefore(intClipboardNumber);
						return true;
				}
			break;
			case "yk":
			case "ck":
				if(this.wndPrompt.intCommandCounter>0){
					this.wndEditing.copyLinesBefore(intClipboardNumber,this.wndPrompt.intCommandCounter);
					this.wndPrompt.intCommandCounter=0;
				}else this.wndEditing.copyLinesBefore(intClipboardNumber,1);
				return true;
			break;
			case "yl":
			case "cl":
				if(this.wndPrompt.intCommandCounter>0){
					this.wndEditing.copyCharsAfter(intClipboardNumber,this.wndPrompt.intCommandCounter);
					this.wndPrompt.intCommandCounter=0;
				}else this.wndEditing.copyCharsAfter(intClipboardNumber,1);
				return true;
			break;
			case "yj":
			case "cj":
				if(this.wndPrompt.intCommandCounter>0){
					this.wndEditing.copyLinesAfter(intClipboardNumber,this.wndPrompt.intCommandCounter);
					this.wndPrompt.intCommandCounter=0;
				}else this.wndEditing.copyLinesAfter(intClipboardNumber,1);
				return true;
			break;
			case "yh":	
			case "ch":	
				if(this.wndPrompt.intCommandCounter>0){
					this.wndEditing.copyCharsBefore(intClipboardNumber,this.wndPrompt.intCommandCounter);
					this.wndPrompt.intCommandCounter=0;
				}else this.wndEditing.copyCharsBefore(intClipboardNumber,1);
				return true;
			break;
			case "yb":
			case "cb":
				if(this.wndPrompt.intCommandCounter>0){
					this.wndEditing.copyWordsBefore(intClipboardNumber,this.wndPrompt.intCommandCounter);
					this.wndPrompt.intCommandCounter=0;
				}else this.wndEditing.copyWordsBefore(intClipboardNumber,1);
				return true;
			break;
			case "yw":
			case "cw":
				if(this.wndPrompt.intCommandCounter>0){
					this.wndEditing.copyWordsAfter(intClipboardNumber,this.wndPrompt.intCommandCounter);
					this.wndPrompt.intCommandCounter=0;
				}else this.wndEditing.copyWordsAfter(intClipboardNumber,1);
				return true;
			break;
			case "y^":
			case "c^":
				this.wndEditing.copyLineToTheBeginning(intClipboardNumber,true);
				return true;
			break;
			case "y$":
			case "c$":
				this.wndEditing.copyLineToTheEnd(intClipboardNumber);
				return true;
			break;
			case "ys":
			case "cs":
				this.wndEditing.copySelectedText(intClipboardNumber);
				return true;
			break;
			case "yy":
			case "cc":
				if(this.wndPrompt.intCommandCounter>0){
					this.wndEditing.copyLinesAfter(intClipboardNumber,this.wndPrompt.intCommandCounter);	
					this.wndPrompt.intCommandCounter=0;
				}else this.wndEditing.copyLinesAfter(intClipboardNumber,1);
				return true;
			break;

		}
	}
	switch(this.wndPrompt.strCommandBuilder.substring(0,this.wndPrompt.strCommandBuilder.length-1)){
		case "r":
			this.wndEditing.replaceCharacter(strKey);
			return true;
		break;
		case "g"+String.fromCharCode(39):
			this.wndEditing.gotoMark(strKey);
			return true;
		break;
		case "g":
			if("d"==strKey){
				this.wndEditing.gotoDefinition();
				return true;
			}
			return false;
		break;
		case "d"+String.fromCharCode(39):
			this.wndEditing.deleteMarkedText(strKey);
			return true;
		break;
		case "m":
			if(true==this.wndEditing.wordCharacter(strKey)&&false==this.wndEditing.isDigit(strKey)){
				this.wndEditing.setMark(strKey);
			}
			return true;
		break;
	}
	var intTabPP,intTabMM;
	intTabPP=this.wndPrompt.strCommandBuilder.indexOf(">");
	intTabMM=this.wndPrompt.strCommandBuilder.indexOf("<");
	if(3==this.wndPrompt.strCommandBuilder.length&&(0==intTabPP||0==intTabMM)){
		if(0==intTabPP){
			this.wndEditing.tabMarkedBlockPP(this.wndPrompt.strCommandBuilder[1],this.wndPrompt.strCommandBuilder[2]);
			return true;
		}
		if(0==intTabMM){
			this.wndEditing.tabMarkedBlockMM(this.wndPrompt.strCommandBuilder[1],this.wndPrompt.strCommandBuilder[2]);
			return true;
		}
	}
	switch(this.wndPrompt.strCommandBuilder){
		case ">>":
			this.wndEditing.tabNextLinesPP(this.wndPrompt.intCommandCounter);
			return true;
		break;
		case "<<":
			this.wndEditing.tabNextLinesMM(this.wndPrompt.intCommandCounter);
			return true;
		break;
		case "k":
			this.cursorUp();return true;
		break;
		case "l":
			this.cursorRight();return true;
		break;
		case "j":
			this.cursorDown();return true;
		break;
		case "h":
			this.cursorLeft();return true;
		break;
		case "b":if(0==this.wndPrompt.intCommandMode){this.wndEditing.moveWordBackward();return true;}break;
		case "w":if(0==this.wndPrompt.intCommandMode){this.wndEditing.moveWordForward();return true;}break;
		case ":":if(0==this.wndPrompt.intCommandMode){this.setCommandMode(1);return true;}break;
		case "/":if(0==this.wndPrompt.intCommandMode){this.setCommandMode(2);return true;}break;
		case "Escape":this.resetPromptState();this.wndEditing.blnReplaceMode=false;this.setCommandMode(0);return;break;
		case "i":if(0==this.wndPrompt.intCommandMode){
			if(false==evtEvent.ctrlKey){this.wndEditing.setInsertMode("i");return true;}
			else{this.wndEditing.moveToTheNextCursorPosition();return true;}
			}break;
		case "I":if(0==this.wndPrompt.intCommandMode){this.wndEditing.setInsertMode("I");return true;}break;
		case "a":if(0==this.wndPrompt.intCommandMode){this.wndEditing.setAppendMode("a");return true;}break;
		case "A":if(0==this.wndPrompt.intCommandMode){this.wndEditing.setAppendMode("A");return true;}break;
		case "o":if(0==this.wndPrompt.intCommandMode){
			if(false==evtEvent.ctrlKey){this.wndEditing.AppendNewline();return true;}
			else{this.wndEditing.moveToThePreviousCursorPosition();return true;}
			}break;
		case "O":if(0==this.wndPrompt.intCommandMode){this.wndEditing.PrependNewline();return true;}break;
		case "x":if(0==this.wndPrompt.intCommandMode){this.wndEditing.removeCharacterUnderCursor();return true;}break;
		case "R":if(0==this.wndPrompt.intCommandMode){this.wndEditing.setReplaceMode();return true;}break;
		case "r":if(0==this.wndPrompt.intCommandMode){
				if(true==evtEvent.altKey){
					this.wndEditing.redoLast();
					return true;
				}
				if(true==evtEvent.ctrlKey){
					this.wndEditing.redoLast();
					return true;
				}
			}
			return false;
		break;
		case "n":if(0==this.wndPrompt.intCommandMode){if(false==evtEvent.altKey){this.wndEditing.gotoNextString();return true;}}break;
		case "N":if(0==this.wndPrompt.intCommandMode){this.wndEditing.gotoPrevString();return true;}break;
		case "G":
			if(0==this.wndPrompt.intCommandCounter){
				this.wndEditing.setLstCursor_buffer1_last();
				this.wndEditing.setLstCursor_buffer0_indent(true);
				this.updateWndEditing(true);
			}else{
				this.wndEditing.setLstCursor_buffer1(this.wndPrompt.intCommandCounter-1);
				this.wndEditing.setLstCursor_buffer0_indent(true);
				this.updateWndEditing(true);
				this.wndPrompt.intCommandCounter=0;
			}
			return true;
		break;
		case "$":
			if(undefined!=strLine){
				this.wndEditing.setLstCursor_buffer0(strLine.length-1);
				this.updateWndEditing(true);
			}
			return true;
		break;
		case "^":
			if(undefined!=strLine){
				/*this.wndEditing.setLstCursor_buffer0(0);*/
				this.wndEditing.setLstCursor_buffer0_indent(true);
				this.updateWndEditing(true);
			}
			return true;
		break;
		case "u":
			this.wndEditing.undoLast();
			return true;
		break;
		case ".":
			this.wndEditing.dotLast();
			return true;
		break;
		case "dd":

			if(this.wndPrompt.intCommandCounter>0){
				this.wndEditing.copyLinesAfter(0,this.wndPrompt.intCommandCounter);	
			}else this.wndEditing.copyLinesAfter(0,1);
			if(this.wndPrompt.intCommandCounter>0){
				for(var ii=0;ii<this.wndPrompt.intCommandCounter;ii++)
					this.wndEditing.RemoveLine();
				this.wndPrompt.intCommandCounter=0;
			}else this.wndEditing.RemoveLine();
			return true;
		break;
		case "dk":
			if(this.wndPrompt.intCommandCounter>0){
				this.wndEditing.copyLinesBefore(0,this.wndPrompt.intCommandCounter);
			}else this.wndEditing.copyLinesBefore(0,1);
			if(this.wndPrompt.intCommandCounter>0){
				this.wndEditing.removeLinesBefore(this.wndPrompt.intCommandCounter);
				this.wndPrompt.intCommandCounter=0;
			}else this.wndEditing.removeLinesBefore(1);
			return true;
		break;
		case "dl":
			if(this.wndPrompt.intCommandCounter>0){
				this.wndEditing.copyCharsAfter(0,this.wndPrompt.intCommandCounter);
			}else this.wndEditing.copyCharsAfter(0,1);
			if(this.wndPrompt.intCommandCounter>0){
				this.wndEditing.removeCharsAfter(this.wndPrompt.intCommandCounter);
				this.wndPrompt.intCommandCounter=0;
			}else this.wndEditing.removeCharsAfter(1);
			return true;
		break;
		case "dj":
			if(this.wndPrompt.intCommandCounter>0){
				this.wndEditing.copyLinesAfter(0,this.wndPrompt.intCommandCounter);
			}else this.wndEditing.copyLinesAfter(0,1);
			if(this.wndPrompt.intCommandCounter>0){
				this.wndEditing.removeLinesAfter(this.wndPrompt.intCommandCounter);
				this.wndPrompt.intCommandCounter=0;
			}else this.wndEditing.removeLinesAfter(1);
			return true;
		break;
		case "dh":
			if(this.wndPrompt.intCommandCounter>0){
				this.wndEditing.copyCharsBefore(0,this.wndPrompt.intCommandCounter);
			}else this.wndEditing.copyCharsBefore(0,1);
			if(this.wndPrompt.intCommandCounter>0){
				this.wndEditing.removeCharsBefore(this.wndPrompt.intCommandCounter);
				this.wndPrompt.intCommandCounter=0;
			}else this.wndEditing.removeCharsBefore(1);
			return true;
		break;
		case "db":
			if(this.wndPrompt.intCommandCounter>0){
				this.wndEditing.copyWordsBefore(0,this.wndPrompt.intCommandCounter);
			}else this.wndEditing.copyWordsBefore(0,1);
			if(this.wndPrompt.intCommandCounter>0){
				this.wndEditing.removeWordsBefore(this.wndPrompt.intCommandCounter);
				this.wndPrompt.intCommandCounter=0;
			}else this.wndEditing.removeWordsBefore(1);
			return true;
		break;
		case "dw":
			if(this.wndPrompt.intCommandCounter>0){
				this.wndEditing.copyWordsAfter(0,this.wndPrompt.intCommandCounter);
			}else this.wndEditing.copyWordsAfter(0,1);
			if(this.wndPrompt.intCommandCounter>0){
				this.wndEditing.removeWordsAfter(this.wndPrompt.intCommandCounter);
				this.wndPrompt.intCommandCounter=0;
			}else this.wndEditing.removeWordsAfter(1);
			return true;
		break;
		case "d^":
			this.wndEditing.copyLineToTheBeginning(0,true);
			this.wndEditing.removeLineToTheBeginning(true);
			return true;
		break;
		case "d$":
			this.wndEditing.copyLineToTheEnd(0);
			this.wndEditing.removeLineToTheEnd();
			return true;
		break;
		case "ds":
			this.wndEditing.copySelectedText(0);
			this.wndEditing.removeSelectedText();
			return true;
		break;
		case "%":
			this.wndEditing.gotoPairingBracket();
			return true;
		break;
	}
	return false;
};
Program_TextEditor.prototype.enterCommand_1command=function(){
	this.wndPrompt.lstTextBuffer=[];
	var strCommand=""+this.wndPrompt.strCommand;
	this.wndPrompt.resetHistoryCounter();
	this.wndPrompt.addCommandToHistory(strCommand);
	this.wndPrompt.strCommand="";
	this.setStatus("");
	this.wndPrompt.setLstCursor_buffer0(0);
	this.wndPrompt.computeScreenCursor(true);
	this.setCommandMode(0);
	this.interpretCommand(strCommand);
};
Program_TextEditor.prototype.gotoString=function(strFind){
	var blnFoundOnce=false;
	if(true==this.wndEditing.gotoString(strFind))blnFoundOnce=true;
	return blnFoundOnce;
};
Program_TextEditor.prototype.enterCommand_2command=function(){
	this.wndPrompt.resetHistoryCounter();
	this.wndPrompt.addCommandToHistory(this.wndPrompt.strCommand);
	var blnFoundOnce=false;
	if(false==this.gotoString(this.wndPrompt.strCommand)){
		blnFoundOnce=false;
	}else{
		blnFoundOnce=true;
	}
	this.wndPrompt.strCommand="";
	this.wndPrompt.setLstCursor_buffer0(0);
	this.wndPrompt.computeScreenCursor(true);
	this.setCommandMode(0);
	if(false==blnFoundOnce){
		this.setStatus("String not found");

	}else{
		this.setStatus("");
	}
};
Program_TextEditor.prototype.updateStatus=function(){
	if(true==this.blnSimpleMode)return;
	var intI=this.wndEditing.lstCursor_buffer[0]+1;
	var intJ=this.wndEditing.lstCursor_buffer[1]+1;
	var strLine=this.wndEditing.lstTextBuffer[this.wndEditing.lstCursor_buffer[1]];
	var intTextBufferLength;
	if(0==this.wndEditing.lstTextBuffer[this.wndEditing.lstTextBuffer.length-1].length)
		intTextBufferLength=this.wndEditing.lstTextBuffer.length-1;
	else intTextBufferLength=this.wndEditing.lstTextBuffer.length;
	if(undefined!=strLine){
		var intLineLength=strLine.length;
		if(intLineLength<0)intLineLength=0;
		if(1==intTextBufferLength&""==strLine)
			intTextBufferLength=0;
		this.wndPrompt.strStatus=intI+"/"+(intLineLength)+","+intJ+"/"+(intTextBufferLength);

	}else{
		this.wndPrompt.strStatus=intI+","+intJ;
	}
	if(true==this.wndEditing.blnModiff)this.wndPrompt.strStatus+="+";
	else this.wndPrompt.strStatus+=" ";
};
Program_TextEditor.prototype.setStatus=function(strContent){
	var strPromptContent="";
	this.updateStatus();

	var intContentWidth=this.wndPrompt.intInnerWidth-this.wndPrompt.strStatus.length;
	var strSpaces="";
	this.strPromptContent=strPromptContent;

	if(strContent.length<=intContentWidth){
		for(var ii=strContent.length;ii<intContentWidth;ii++)
			strSpaces+=" ";		
		strPromptContent=""+strContent+strSpaces+this.wndPrompt.strStatus;
	}else{
		strPromptContent=""+strContent.substring(strContent.length-intContentWidth)+this.wndPrompt.strStatus;
	}
	this.wndPrompt.lstTextBuffer[0]=strPromptContent;
	this.wndPrompt.updateTextWindowContent();
};
Program_TextEditor.prototype.refreshStatus=function(){
	if(null==this.wndEditing)return;
	if(true==this.blnSimpleMode)return;
	var strPromptContent="";
	this.updateStatus();
	var intContentWidth=this.wndPrompt.intInnerWidth-this.wndPrompt.strStatus.length;
	var strSpaces="";
	this.strPromptContent=strPromptContent;

	if(this.wndPrompt.strPromptContent.length<=intContentWidth){
		for(var ii=this.wndPrompt.strPromptContent.length;ii<intContentWidth;ii++)
			strSpaces+=" ";		
		strPromptContent=""+this.wndPrompt.strPromptContent+strSpaces+this.wndPrompt.strStatus;
	}else{
		strPromptContent=""+this.wndPrompt.strPromptContent.substring(strContent.length-intContentWidth)+this.wndPrompt.strStatus;
	}
	this.wndPrompt.lstTextBuffer[0]=strPromptContent;
	this.wndPrompt.updateTextWindowContent();
};
Program_TextEditor.prototype.appendPromptContents=function(strTextContent){
	this.wndPrompt.computeScreenCursor(true);
	this.setStatus(strTextContent);
};
Program_TextEditor.prototype.appendCommandChar=function(chrCommand){
	var strTextContents="";
	if("Shift"==chrCommand)return;
	if("Control"==chrCommand)return;
	if("Alt"==chrCommand)return;
	if("Fn"==chrCommand)return;
	if("Backspace"==chrCommand)
		if(this.wndPrompt.lstCursor_buffer[0]>0){
			this.wndPrompt.strCommand=this.wndPrompt.strCommand.substring(0,this.wndPrompt.lstCursor_buffer[0]-2)+this.wndPrompt.strCommand.substring(this.wndPrompt.lstCursor_buffer[0]-1);
			this.wndPrompt.setLstCursor_buffer0(this.wndPrompt.lstCursor_buffer[0]-1);
			strTextContents=this.wndPrompt.strPrefix+this.wndPrompt.strCommand;
			this.appendPromptContents(strTextContents);
			return;

		}
	if("Delete"==chrCommand)
		if(this.wndPrompt.lstCursor_buffer[0]>0){
			this.wndPrompt.strCommand=this.wndPrompt.strCommand.substring(0,this.wndPrompt.lstCursor_buffer[0]-1)+this.wndPrompt.strCommand.substring(this.wndPrompt.lstCursor_buffer[0]);
			strTextContents=this.wndPrompt.strPrefix+this.wndPrompt.strCommand;
			this.appendPromptContents(strTextContents);
			return;
		}
	this.wndPrompt.strCommand=this.wndPrompt.strCommand.substring(0,this.wndPrompt.lstCursor_buffer[0]-1)+chrCommand+this.wndPrompt.strCommand.substring(this.wndPrompt.lstCursor_buffer[0]-1);
	var strTextContents=this.wndPrompt.strPrefix+this.wndPrompt.strCommand;
	this.wndPrompt.setLstCursor_buffer0(this.wndPrompt.lstCursor_buffer[0]+1);
	this.appendPromptContents(strTextContents);
};
Program_TextEditor.prototype.selectionHighlightUp=function(){
	this.wndEditing.selectionHighlightUp();
};
Program_TextEditor.prototype.selectionHighlightRight=function(){
	this.wndEditing.selectionHighlightRight();
};
Program_TextEditor.prototype.selectionHighlightDown=function(){
	this.wndEditing.selectionHighlightDown();
};
Program_TextEditor.prototype.selectionHighlightLeft=function(){
	this.wndEditing.selectionHighlightLeft();
};
Program_TextEditor.prototype.cursorUp=function(){
	if(this.wndEditing.lstSelectionHighlights_text.length>0)this.wndEditing.clearHighlightSelection();
	if(this.wndPrompt.intCommandCounter>0){
		for(var ii=0;ii<this.wndPrompt.intCommandCounter;ii++)
			this.wndEditing.cursorUp();
		this.wndPrompt.intCommandCounter=0;
	}
	else this.wndEditing.cursorUp();
	this.refreshStatus();
};
Program_TextEditor.prototype.cursorRight=function(){
	if(this.wndEditing.lstSelectionHighlights_text.length>0)this.wndEditing.clearHighlightSelection();
	if(this.wndPrompt.intCommandCounter>0){
		for(var ii=0;ii<this.wndPrompt.intCommandCounter;ii++)
			this.wndEditing.cursorRight();
		this.wndPrompt.intCommandCounter=0;
	}
	else this.wndEditing.cursorRight();
	this.refreshStatus();
};
Program_TextEditor.prototype.cursorDown=function(){
	if(this.wndEditing.lstSelectionHighlights_text.length>0)this.wndEditing.clearHighlightSelection();
	if(this.wndPrompt.intCommandCounter>0){
		for(var ii=0;ii<this.wndPrompt.intCommandCounter;ii++)
			this.wndEditing.cursorDown();
		this.wndPrompt.intCommandCounter=0;
	}
	else this.wndEditing.cursorDown();
	this.refreshStatus();
};
Program_TextEditor.prototype.cursorLeft=function(){
	if(this.wndEditing.lstSelectionHighlights_text.length>0)this.wndEditing.clearHighlightSelection();
	if(this.wndPrompt.intCommandCounter>0){
		for(var ii=0;ii<this.wndPrompt.intCommandCounter;ii++)
			this.wndEditing.cursorLeft();
		this.wndPrompt.intCommandCounter=0;
	}
	else this.wndEditing.cursorLeft();
	this.refreshStatus();
};
Program_TextEditor.prototype.cursorToTheLineBeginning=function(){
	if(this.wndEditing.lstSelectionHighlights_text.length>0)this.wndEditing.clearHighlightSelection();
	this.wndEditing.cursorToTheLineBeginning();
};
Program_TextEditor.prototype.cursorToTheLineEnd=function(){
	if(this.wndEditing.lstSelectionHighlights_text.length>0)this.wndEditing.clearHighlightSelection();
	this.wndEditing.cursorToTheLineEnd();
};
Program_TextEditor.prototype.resetPromptState=function(){
	this.wndPrompt.strCommandBuilder="";
	this.wndPrompt.intCommandCounter=0;
	this.wndPrompt.strCommand="";
	this.wndPrompt.resetHistoryCounter();
	this.closeAllSubmenuWindows();
	this.refreshStatus();
};
Program_TextEditor.prototype.setCommandMode=function(intCommandMode){
	this.setCommandModeFocus(intCommandMode);
	this.wndPrompt.strPrefix="";
	this.wndPrompt.intCommandMode=intCommandMode;
	if(1==this.wndPrompt.intCommandMode)this.wndPrompt.strPrefix=":";
	if(2==this.wndPrompt.intCommandMode)this.wndPrompt.strPrefix="/";
	this.wndPrompt.setLstCursor_buffer0(this.wndPrompt.strPrefix.length);
	this.wndPrompt.computeScreenCursor(true);
	this.setStatus(this.wndPrompt.strPrefix+this.wndPrompt.strCommand);
};
Program_TextEditor.prototype.setCommandModeFocus=function(intCommandMode){
	if(0==this.intMode&&0!=intCommandMode)
		this.intFocusWindow=0;
	if(0==this.intMode&&0==intCommandMode)
		this.intFocusWindow=this.lstTextWindows.indexOf(this.wndEditing);
	if(0!=this.intMode)alert("Error, intCommandModeChanged when in editing mode");
};
Program_TextEditor.prototype.setMode=function(intMode){
	if(0==intMode&&0!=this.wndPrompt.intCommandMode)
		this.intFocusWindow=0;
	if(0==intMode&&0==this.wndPrompt.intCommandMode)
		this.intFocusWindow=this.lstTextWindows.indexOf(this.wndEditing);
	if(0!=intMode)
		this.intFocusWindow=this.lstTextWindows.indexOf(this.wndEditing);
	var strLine=this.wndEditing.lstTextBuffer[this.wndEditing.lstCursor_buffer[1]];
	if(0==intMode&&this.wndEditing.lstCursor_buffer[0]==strLine.length){
			if(0==strLine.length)
				this.wndEditing.setLstCursor_buffer0(0);
			else this.wndEditing.setLstCursor_buffer0(this.wndEditing.lstCursor_buffer[0]-1);
		this.updateWndEditing(true);
	}
	this.intMode=intMode;
};
Program_TextEditor.prototype.resizeWindowArrowUp=function(evtEvent){
	var intMinimalWindowSize=2*this.wndEditing.intBorderSize;
	if(this.wndEditing.intHeight>intMinimalWindowSize){
		this.wndEditing.setNewDimensions(this.wndEditing.intRootX,this.wndEditing.intRootY,this.wndEditing.intWidth,this.wndEditing.intHeight-1,this.wndEditing.intBorderSize);
		this.wndEditing.updateWndEditing(true);
	}
};
Program_TextEditor.prototype.resizeWindowArrowRight=function(evtEvent){
	if(this.wndEditing.intRootX+this.wndEditing.intWidth<this.base.intScreenWidth_text){
		this.wndEditing.setNewDimensions(this.wndEditing.intRootX,this.wndEditing.intRootY,this.wndEditing.intWidth+1,this.wndEditing.intHeight,this.wndEditing.intBorderSize);
		this.wndEditing.updateWndEditing(true);
	}
};
Program_TextEditor.prototype.resizeWindowArrowDown=function(evtEvent){
	if(this.wndEditing.intRootY+this.wndEditing.intHeight<this.base.intScreenHeight_text){
		this.wndEditing.setNewDimensions(this.wndEditing.intRootX,this.wndEditing.intRootY,this.wndEditing.intWidth,this.wndEditing.intHeight+1,this.wndEditing.intBorderSize);
		this.wndEditing.updateWndEditing(true);
	}
};
Program_TextEditor.prototype.resizeWindowArrowLeft=function(evtEvent){
	var intMinimalWindowSize=2*this.wndEditing.intBorderSize;
	if(this.wndEditing.intWidth>intMinimalWindowSize){
		this.wndEditing.setNewDimensions(this.wndEditing.intRootX,this.wndEditing.intRootY,this.wndEditing.intWidth-1,this.wndEditing.intHeight,this.wndEditing.intBorderSize);
		this.wndEditing.updateWndEditing(true);
	}
};
Program_TextEditor.prototype.moveWindowUpK=function(evtEvent){
	if(this.wndEditing.intRootY>0)
		this.wndEditing.setNewDimensions(this.wndEditing.intRootX,this.wndEditing.intRootY-1,this.wndEditing.intWidth,this.wndEditing.intHeight,this.wndEditing.intBorderSize);
};
Program_TextEditor.prototype.moveWindowRightL=function(evtEvent){
	if(this.wndEditing.intRootX+this.wndEditing.intWidth<this.base.intScreenWidth_text)
		this.wndEditing.setNewDimensions(this.wndEditing.intRootX+1,this.wndEditing.intRootY,this.wndEditing.intWidth,this.wndEditing.intHeight,this.wndEditing.intBorderSize);
};
Program_TextEditor.prototype.moveWindowDownJ=function(evtEvent){
	if(this.wndEditing.intRootY+this.wndEditing.intHeight<this.base.intScreenHeight_text)
		this.wndEditing.setNewDimensions(this.wndEditing.intRootX,this.wndEditing.intRootY+1,this.wndEditing.intWidth,this.wndEditing.intHeight,this.wndEditing.intBorderSize);
};
Program_TextEditor.prototype.moveWindowLeftH=function(evtEvent){
	if(this.wndEditing.intRootX>0)
		this.wndEditing.setNewDimensions(this.wndEditing.intRootX-1,this.wndEditing.intRootY,this.wndEditing.intWidth,this.wndEditing.intHeight,this.wndEditing.intBorderSize);
};
Program_TextEditor.prototype.setFocusWindow=function(evtEvent){
	var wndNew,intNew;
	switch(evtEvent.key){
		case "ArrowUp":wndNew=this.wndEditing.wndUp;break;
		case "ArrowRight":wndNew=this.wndEditing.wndRight;break;
		case "ArrowDown":wndNew=this.wndEditing.wndDown;break;
		case "ArrowLeft":wndNew=this.wndEditing.wndLeft;break;
		case " ":
			intNew=this.lstEditingWindows.indexOf(this.wndEditing);intNew++;intNew=intNew%this.lstEditingWindows.length; wndNew=this.lstEditingWindows[intNew];break;
	}	
	if(null!=wndNew){
		this.bringToFront(wndNew);
		wndNew.setFocus();
	}
};
Program_TextEditor.prototype.programmaticShift_Lock=function(evtEvent){
	if("CapsLock"==evtEvent.key){
		this.wndEditing.blnCapsLock=(true==this.wndEditing.blnCapsLock)?false:true;
		return evtEvent;
	}
	if(false==this.wndEditing.blnProgrammaticShift_Lock)return evtEvent;
	if(true==this.wndEditing.blnCapsLock){
		var newEvent={};
		//mhdmodiff--
		//for(x in evtEvent)newEvent[x]=evtEvent[x];
		for(var x in evtEvent)newEvent[x]=evtEvent[x];
		switch(newEvent.key){
			case "`":
				newEvent.key="~";
				newEvent.shiftKey=true;
				return newEvent;
			break;
			case "1":
				newEvent.key="!";
				newEvent.shiftKey=true;
				return evtEvent;
			break;
			case "2":
				newEvent.key="@";
				newEvent.shiftKey=true;
				return newEvent;
			break;
			case "3":
				newEvent.key="#";
				newEvent.shiftKey=true;
				return newEvent;
			break;
			case "4":
				newEvent.key="$";
				newEvent.shiftKey=true;
				return newEvent;
			break;
			case "5":
				newEvent.key="%";
				newEvent.shiftKey=true;
				return newEvent;
			break;
			case "6":
				newEvent.key="^";
				newEvent.shiftKey=true;
				return newEvent;
			break;
			case "7":
				newEvent.key="&";
				newEvent.shiftKey=true;
				return newEvent;
			break;
			case "8":
				newEvent.key="*";
				newEvent.shiftKey=true;
				return newEvent;
			break;
			case "9":
				newEvent.key="(";
				newEvent.shiftKey=true;
				return newEvent;
			break;
			case "0":
				newEvent.key=")";
				newEvent.shiftKey=true;
				return newEvent;
			break;
			case "-":
				newEvent.key="_";
				newEvent.shiftKey=true;
				return newEvent;
			break;
			case "=":
				newEvent.key="+";
				newEvent.shiftKey=true;
				return newEvent;
			break;
			case "[":
				newEvent.key="{";
				newEvent.shiftKey=true;
				return newEvent;
			break;
			case "]":
				newEvent.key="}";
				newEvent.shiftKey=true;
				return newEvent;
			break;
			case ";":
				newEvent.key=":";
				newEvent.shiftKey=true;
				return newEvent;
			break;
			case String.fromCharCode(39):
				newEvent.key=String.fromCharCode(34);
				newEvent.shiftKey=true;
				return newEvent;
			break;
			case String.fromCharCode(92):
				newEvent.key="|";
				newEvent.shiftKey=true;
				return newEvent;
			break;
			case ",":
				newEvent.key="<";
				newEvent.shiftKey=true;
				return newEvent;
			break;
			case ".":
				newEvent.key=">";
				newEvent.shiftKey=true;
				return newEvent;
			break;
			case "/":
				newEvent.key="?";
				newEvent.shiftKey=true;
				return newEvent;
			break;
		}
	}
	return evtEvent;
};
Program_TextEditor.prototype.programmaticKeyAliases=function(evtEvent){
	var strKeyBinding=this.theKeyAliases[evtEvent.key];
	if(undefined==strKeyBinding)return evtEvent;
	var newEvent={};
	//mhdmodiff--
	//for(x in evtEvent)newEvent[x]=evtEvent[x];
	for(var x in evtEvent)newEvent[x]=evtEvent[x];
	newEvent.key=strKeyBinding;
	var strKeyCodeBinding=this.theKeyCodeAliases[evtEvent.key];
	newEvent.code=strKeyCodeBinding;
	return newEvent;
};
Program_TextEditor.prototype.setKeyAlias=function(strCommand){
	/*set key "~"="Escape,Escape"*/
	var lstTokens=strCommand.substring(7).split("=");
	if(2!=lstTokens.length)return false;
	var intFirstQuote=lstTokens[0].indexOf(String.fromCharCode(34));
	var strKey=lstTokens[0].substring(intFirstQuote+1,lstTokens[0].length-1);
	var strKeybindings=lstTokens[1].substring(1,lstTokens[1].length-1);
	var lstAssignTokens=strKeybindings.split(",");
	if(2!=lstAssignTokens.length)return false;	
	this.theKeyAliases[strKey]=lstAssignTokens[0];
	this.theKeyCodeAliases[strKey]=lstAssignTokens[1];
	return true;
};
Program_TextEditor.prototype.unsetKeyAliases=function(strCommand){
	var newKeyAliases={};	
	var newKeyCodeAliases={};
	this.theKeyAliases=newKeyAliases;
	this.theKeyCodeAliases=newKeyCodeAliases;
};
Program_TextEditor.prototype.onKeyDown=function(evtEvent){
	if(null!=netspace.shaderThinkpad){
		if("F9"==evtEvent.key){
			this.compileShader("wshd 0");
		}
	}
	if("Alt"==evtEvent.key&&1==evtEvent.location){
		if(false==this.blnMouseBlocked){
			this.blnMouseBlocked=true;this.prevMouseX=null;this.prevMouseY=null;}
			else this.blnMouseBlocked=false;
	}
	var blnKeyAction=false;
	for(var ii=this.lstTextWindows.length-1;ii>=0;ii--){
		if(undefined!=this.lstTextWindows[ii].onKeyDown){
			if(true==this.lstTextWindows[ii].onKeyDown(evtEvent))
				blnKeyAction=true;
				break;
		}
	}
	if(" "==evtEvent.key&&true==evtEvent.ctrlKey){
		this.inchesKeyboard.changeChkInches();
		return;
	}
	if(true==netspace.computer.blnInchesKeyboardMode&&1==this.intMode){
		this.inchesKeyboard.txtInputKeyDown(evtEvent);
		return;
	}else{
		if(false==blnKeyAction){
			if(false==this.blnSimpleMode)this.onKeyDown_(evtEvent);
			else this.onKeyDownSimple(evtEvent);
		}
	}
};
Program_TextEditor.prototype.findInputBox=function(){
	var strFind=prompt("Enter expression to find:");
	if(null==strFind||undefined==strFind)return;
	var blnFoundOnce=false;
	if(false==this.gotoString(strFind)){
		blnFoundOnce=false;
	}else{
		blnFoundOnce=true;
	}
	if(false==blnFoundOnce)this.MessageBox_ok("String not found",function(){});
	this.updateWndEditing(true);
};
Program_TextEditor.prototype.mnuExtensions_insertExternalContent=function(){
	this.getTextFileContent();
};
Program_TextEditor.prototype.mnuExtensions_insertDate=function(){
	var lstContents=this.runExternalCommand_("date");
	this.wndEditing.insertLstStringContents(lstContents);
};
Program_TextEditor.prototype.mnuExtensions_insertExternalCommand=function(){
	var strCommand=prompt("Insert external command: ");
	if(null!=strCommand&&undefined!=strCommand){
		lstContents=this.runExternalCommand_(strCommand);
		this.wndEditing.insertLstStringContents(lstContents);
	}
};
Program_TextEditor.prototype.mnuExtensions_runExternalCommand=function(){
	var strCommand=prompt("Insert external command: ");
	if(undefined!=strCommand){
		lstContents=this.runExternalCommand_(strCommand);
	}
};
Program_TextEditor.prototype.mnuExtensions_addExtensionsFromFile=function(){
	this.getExtensionsFileContent();
};
Program_TextEditor.prototype.onKeyDownSimple=function(evtEvent){
	evtEvent=this.programmaticShift_Lock(evtEvent);
	evtEvent=this.programmaticKeyAliases(evtEvent);
	switch(evtEvent.key){
		case "F4":/*Alt+F4 would close the browser*/this.base.exitProgram(this,"");break;
		case "c":
			if(true==evtEvent.ctrlKey)this.base.exitProgram(this,"");break;
		case "z":
			if(true==evtEvent.ctrlKey)this.base.stopProgram(this,"");break;

		case "Escape":this.closeAllSubmenuWindows();return;break;
		case "ArrowUp":if(false==evtEvent.ctrlKey){if(false==evtEvent.shiftKey)this.cursorUp();else this.selectionHighlightUp();}else{
			if(false==evtEvent.shiftKey){
				this.setFocusWindow(evtEvent);
			}else{
				this.resizeWindowArrowUp(evtEvent);
			}
		}return;break;
		case "ArrowRight":if(false==evtEvent.ctrlKey){if(false==evtEvent.shiftKey)this.cursorRight();else this.selectionHighlightRight();}else{
			if(false==evtEvent.shiftKey){
				this.setFocusWindow(evtEvent);
			}else{
				this.resizeWindowArrowRight(evtEvent);
			}
		}return;break;
		case "ArrowDown":if(false==evtEvent.ctrlKey){if(false==evtEvent.shiftKey)this.cursorDown();else this.selectionHighlightDown();}else{
			if(false==evtEvent.shiftKey){
				this.setFocusWindow(evtEvent);
			}else{
				this.resizeWindowArrowDown(evtEvent);
			}
		}return;break;
		case "ArrowLeft":if(false==evtEvent.ctrlKey){if(false==evtEvent.shiftKey)this.cursorLeft();else this.selectionHighlightLeft();}else{
			if(false==evtEvent.shiftKey){
				this.setFocusWindow(evtEvent);
			}else{
				this.resizeWindowArrowLeft(evtEvent);
			}
		}return;break;
		case " ":
			if(true==evtEvent.ctrlKey){this.setFocusWindow(evtEvent);return;};break;
		case "Home":this.cursorToTheLineBeginning();return;break;
		case "End":this.cursorToTheLineEnd();return;break;
		case "K":
			if(true==evtEvent.ctrlKey&&true==evtEvent.shiftKey){
				this.moveWindowUpK(evtEvent);
				return;
			}
			break;
		case "L":
			if(true==evtEvent.ctrlKey&&true==evtEvent.shiftKey){
				this.moveWindowRightL(evtEvent);
				return;
			}
			break;
		case "J":
			if(true==evtEvent.ctrlKey&&true==evtEvent.shiftKey){
				this.moveWindowDownJ(evtEvent);
				return;
			}
			break;
		case "H":
			if(true==evtEvent.ctrlKey&&true==evtEvent.shiftKey){
				this.moveWindowLeftH(evtEvent);
				return;
			}
			break;
	}
	if(1==this.intMode){
		if(true==this.wndEditing.insertEditingChar(evtEvent)){
		}
	}
};
Program_TextEditor.prototype.onKeyDown_=function(evtEvent){
	evtEvent=this.programmaticShift_Lock(evtEvent);
	evtEvent=this.programmaticKeyAliases(evtEvent);
	switch(evtEvent.key){
		case "F4":/*Alt+F4 would close the browser*/this.base.exitProgram(this,"");break;
		case "c":
			if(true==evtEvent.ctrlKey)this.base.exitProgram(this,"");break;
		case "z":
			if(true==evtEvent.ctrlKey)this.base.stopProgram(this,"");break;
		case "Escape":this.resetPromptState();this.wndEditing.blnReplaceMode=false;this.setMode(0);this.setCommandMode(0);break;
		case "ArrowUp":
		if(0==this.intMode&&0!=this.wndPrompt.intCommandMode){
			this.wndPrompt.historyUp();
			return;
		}else{
			if(false==evtEvent.ctrlKey){if(false==evtEvent.shiftKey)this.cursorUp();else this.selectionHighlightUp();}else{
			if(false==evtEvent.shiftKey){
				this.setFocusWindow(evtEvent);
			}else{
				this.resizeWindowArrowUp(evtEvent);
			}
			}return;
		}
		break;
		case "ArrowRight":
		if(0==this.intMode&&0!=this.wndPrompt.intCommandMode){
			this.wndPrompt.cursorRight();
			return;
		}else{
			if(false==evtEvent.ctrlKey){if(false==evtEvent.shiftKey)this.cursorRight();else this.selectionHighlightRight();}else{
				if(false==evtEvent.shiftKey){
					this.setFocusWindow(evtEvent);
				}else{
					this.resizeWindowArrowRight(evtEvent);
				}
				}return;
		}break;
		case "ArrowDown":
		if(0==this.intMode&&0!=this.wndPrompt.intCommandMode){
			this.wndPrompt.historyDown();
			return;
		}else{
			if(false==evtEvent.ctrlKey){if(false==evtEvent.shiftKey)this.cursorDown();else this.selectionHighlightDown();}else{
			if(false==evtEvent.shiftKey){
				this.setFocusWindow(evtEvent);
			}else{
				this.resizeWindowArrowDown(evtEvent);
			}
			}return;
		}
		break;
		case "ArrowLeft":
		if(0==this.intMode&&0!=this.wndPrompt.intCommandMode){
			this.wndPrompt.cursorLeft();
			return;
		}else{

			if(false==evtEvent.ctrlKey){if(false==evtEvent.shiftKey)this.cursorLeft();else this.selectionHighlightLeft();}else{
				if(false==evtEvent.shiftKey){
					this.setFocusWindow(evtEvent);
				}else{
					this.resizeWindowArrowLeft(evtEvent);
				}
				}return;
		}break;
		case " ":
			if(true==evtEvent.ctrlKey){this.setFocusWindow(evtEvent);return;};break;
		case "Home":this.cursorToTheLineBeginning();return;break;
		case "End":this.cursorToTheLineEnd();return;break;
		case "K":
			if(true==evtEvent.ctrlKey&&true==evtEvent.shiftKey){
				this.moveWindowUpK(evtEvent);
				return;
			}
			break;
		case "L":
			if(true==evtEvent.ctrlKey&&true==evtEvent.shiftKey){
				this.moveWindowRightL(evtEvent);
				return;
			}
			break;
		case "J":
			if(true==evtEvent.ctrlKey&&true==evtEvent.shiftKey){
				this.moveWindowDownJ(evtEvent);
				return;
			}
			break;
		case "H":
			if(true==evtEvent.ctrlKey&&true==evtEvent.shiftKey){
				this.moveWindowLeftH(evtEvent);
				return;
			}
			break;
	}
	if(0==this.intMode){
		if(0==this.wndPrompt.intCommandMode){
			var intCharCode=evtEvent.key.charCodeAt(0);
			if(0==this.wndPrompt.strCommandBuilder.length&&intCharCode>=48&&intCharCode<=57){
				this.wndPrompt.intCommandCounter*=10;
				this.wndPrompt.intCommandCounter+=(intCharCode-48);
				this.refreshStatus();
				return;
			}
			if(true==this.enterCommand_0modeCommand(evtEvent)){
				this.wndPrompt.strCommandBuilder="";
				this.wndPrompt.intCommandCounter=0;
				this.wndEditing.clearHighlightSelection();
				return;
			}
		}else{
			if("Enter"==evtEvent.key){
				if(1==this.wndPrompt.intCommandMode)this.enterCommand_1command();
				if(2==this.wndPrompt.intCommandMode)this.enterCommand_2command();
			}else{
				if("CapsLock"==evtEvent.key)return;
				this.appendCommandChar(evtEvent.key);
			}
		}

	}
	if(1==this.intMode){
		if(true==this.wndEditing.insertEditingChar(evtEvent)){
		}
	}
};
Program_TextEditor.prototype.onKeyUp=function(evtEvent){
	for(var ii=this.lstTextWindows.length-1;ii>=0;ii--){
		if(undefined!=this.lstTextWindows[ii].onKeyUp){
			this.lstTextWindows[ii].onKeyUp(evtEvent);
		}
	}
};
Program_TextEditor.prototype.onMouseDown=function(evtEvent){
	var blnDoubleClick=false;
	if(null!=this.fltLastClickTimestamp&&performance.now()-this.fltLastClickTimestamp<this.fltDoubleClickDelay*1000){
		blnDoubleClick=true;
	}
	this.fltLastClickTimestamp=performance.now();
	var theTextWindow;
	if(null==this.wndPendingMouseEvent)
		theTextWindow=this.getTextWindowUnderXY(Math.round(this.fltMouseX),Math.round(this.fltMouseY));
	else theTextWindow=this.wndPendingMouseEvent;
	if(undefined!=theTextWindow&&undefined!=theTextWindow.onMouseDown)
		if(false==blnDoubleClick)
			theTextWindow.onMouseDown(evtEvent);
		else theTextWindow.onMouseDownDoubleClick(evtEvent);
};
Program_TextEditor.prototype.onMouseUp=function(evtEvent){
	var theTextWindow;
	if(null==this.wndPendingMouseEvent)
		theTextWindow=this.getTextWindowUnderXY(Math.round(this.fltMouseX),Math.round(this.fltMouseY));
	else theTextWindow=this.wndPendingMouseEvent;
	if(undefined!=theTextWindow&&undefined!=theTextWindow.onMouseUp)
		theTextWindow.onMouseUp(evtEvent);
};
Program_TextEditor.prototype.onMouseWheel=function(evtEvent){
	var theTextWindow;
	if(null==this.wndPendingMouseEvent)
		theTextWindow=this.getTextWindowUnderXY(Math.round(this.fltMouseX),Math.round(this.fltMouseY));
	else theTextWindow=this.wndPendingMouseEvent;
	if(undefined!=theTextWindow&&undefined!=theTextWindow.onMouseWheel)
		theTextWindow.onMouseWheel(evtEvent);
};
Program_TextEditor.prototype.onMouseMove=function(evtEvent){
	this.base.onMouseMove_text(evtEvent,this);
	var theTextWindow;
	if(null==this.wndPendingMouseEvent)
		theTextWindow=this.getTextWindowUnderXY(Math.round(this.fltMouseX),Math.round(this.fltMouseY));
	else theTextWindow=this.wndPendingMouseEvent;
	if(undefined!=theTextWindow&&undefined!=theTextWindow.onMouseMove)
		theTextWindow.onMouseMove(evtEvent);
};
Program_TextEditor.prototype.drawScreen=function(currentFrameTime){
	for(var ii=0;ii<this.lstTextWindows.length;ii++)
		this.lstTextWindows[ii].drawTextWindow();
	var focusWindow=this.lstTextWindows[this.intFocusWindow];
	if(undefined!=focusWindow)
		focusWindow.drawCursor();
	this.drawMouse();
};
Program_TextEditor.prototype.loopFunction=function(currentFrameTime){
	this.base.clearScreen_text();
	this.drawScreen(currentFrameTime);
};
function btnShowOptionsPressed(){
	var divOptions=document.getElementById("divOptions");
	if("none"==divOptions.style.display)divOptions.style.display="";
	else divOptions.style.display="none";
}
var strFutureFeature=" feature will be implemented in the future surfer.";
var strNoNetspace="No netspace created.";
function flush(strInput,intMax) {
	return(strInput.length<intMax)?flush("0"+strInput,intMax):strInput;
}
function ResizeTextModeScreen(lstDimensions){
	var intScreenWidth_text,intScreenHeight_text;
	intScreenWidth_text=parseInt(lstDimensions[0]);
	intScreenHeight_text=parseInt(lstDimensions[1]);
	netspace.computer.intScreenWidth_text=intScreenWidth_text;
	netspace.computer.intScreenHeight_text=intScreenHeight_text;
	netspace.computer.screenCanvas=null;
	if(0!=this.intRenderText)
		netspace.computer.arrHTMLtextScreenBuffer=new Uint8Array(3*90*intScreenWidth_text*intScreenHeight_text);
	if(undefined!=netspace.computer.theActualProgram.updateDimensions)netspace.computer.theActualProgram.updateDimensions();
}
function RunTextEditor(strMode){
	var intStartxPID=null;
	var theStartx=null;
	for(var ii=0;ii<netspace.computer.lstRunningPrograms.length;ii++){
		if("startx"==netspace.computer.lstRunningPrograms[ii][0])
			intStartxPID=ii;
	};
	if(null!=intStartxPID){
		theStartx=netspace.computer.lstRunningPrograms[intStartxPID][2];
		theStartx.newTerminal_xy(0,0,300,150);
		theStartx.lstXWindows[theStartx.lstXWindows.length-1].theActualProgram.runProgram("texteditor "+strMode);
	}else netspace.computer.runProgram("texteditor "+strMode);
}
function TheComputerInit(blnTextDiv,lstDimensions,strMode){
	window.mhd.loadComputer();
	if(true==blnTextDiv){
		setTimeout(function(){var btnLockComputerTextScreenDiv=document.getElementById("btnLockComputerTextScreenDiv");btnLockComputerTextScreenDiv.onclick();},1000);
	}else{
		setTimeout(function(){var btnLockComputerScreenCanvas=document.getElementById("btnLockComputerScreenCanvas");btnLockComputerScreenCanvas.onclick();},1000);
	}
	if(undefined!=lstDimensions&&null!=lstDimensions)
		ResizeTextModeScreen(lstDimensions);
	if(undefined==strMode&&null==strMode)
		strMode="";
	RunTextEditor(strMode);
}
var ShaderThinkpadConstructor_strF=function(that,blnExternalTextureRenderer,superShaderThinkpad){
};
var ShaderThinkpadConstructor=function(that,blnExternalTextureRenderer,superShaderThinkpad){
	that.blnExternalTextureRenderer=blnExternalTextureRenderer;
	if(null!=superShaderThinkpad)
		that.superShaderThinkpad=superShaderThinkpad;
	that.lstShaderPrograms=[];
	that.canvas=null;
	that.gl=null;
	that.lstFramebuffers=[null];
	that.lstFramebufferTextures=[null];
	that.lstIntWidths=[];
	that.lstIntHeights=[];
	if(false==blnExternalTextureRenderer){
		that.lstIntWidths[0]=netspace.computer.intFontWidth*netspace.computer.intScreenWidth_text;
		that.lstIntHeights[0]=netspace.computer.intFontHeight*netspace.computer.intScreenHeight_text;
	}else{
		that.lstIntWidths[0]=netspace.intQuickTextureHeight;
		that.lstIntHeights[0]=netspace.intQuickTextureHeight;
	}
	if(false==blnExternalTextureRenderer)
		that.intShaderSlotDivideMode=2;/*0-only central tiny square,1-scale image,2-divide image,3-use full size image on one face and quickShader will scale it*/
	else that.intShaderSlotDivideMode=1;
	that.fltExternalTexturesUpdateDelay=0.5;
	that.fltLastExternalTexturesUpdateTime=null;
	that.blnExternalTexturesUpdated=false;
	that.data=new Uint8Array(that.lstIntWidths[0]*that.lstIntHeights[0]*4);
	that.lstStrActualShaders=[];
	that.canvas=document.createElement("canvas");
	that.canvas.width=that.lstIntWidths[0];
	that.canvas.height=that.lstIntHeights[0];
	that.gl=that.canvas.getContext("webgl");
	if(!that.gl)
		that.gl=this.canvas.getContext("experimental-webgl");
	if(!that.gl){
		alert("No WebGL support in your webbrowser- update your webbrowser of get another webbrowser with the WebGL support.");	
		return;
	}
	that.lstTextureSlots=[];
	that.lstVec2textureSlotsDims=[];
	that.lstBlnTextureSlotTextureChanged=[];
	that.lstTextureCanvases=[];
	that.lstVec2shaderSlotsDims=[];
	that.lstTextureSamplers=[];
	if(true==blnExternalTextureRenderer){
		that.copyTextureSlots(that.superShaderThinkpad);
	}
	if(false==blnExternalTextureRenderer){
		that.lstShaderPrograms.push(getShaderProgram(that.gl,"shaderThinkpad"));
		that.lstStrActualShaders.push(that.getShaderText("shaderThinkpad-fragment"));
	}else{
		that.copyShaderPrograms_externalTextureRenderer(that.superShaderThinkpad);
	}
	that.gl.enable(that.gl.DEPTH_TEST);
	that.initTextureFramebuffers();
	that.initShaderPrograms();
	that.externalTextureRenderer=null;
	if(false==that.blnExternalTextureRenderer)
		that.shaderThinkpadManager=new ShaderThinkpadManager(that);
};
var ShaderThinkpad=function(blnExternalTextureRenderer,superShaderThinkpad){
	ShaderThinkpadConstructor(this,blnExternalTextureRenderer,superShaderThinkpad);
	ShaderThinkpadConstructor_strF(this,blnExternalTextureRenderer,superShaderThinkpad);
};
ShaderThinkpad.prototype.getTextureSamplerNumber=function(ii){
	for(var jj=0;jj<this.lstTextureSamplers.length;jj++){
		if(ii==this.lstTextureSamplers[jj])return jj;
	}
	return null;
};
ShaderThinkpad.prototype.checkFramebufferSetting=function(intShaderSlot){
	if(undefined==this.lstFramebufferTextures[intShaderSlot]&&intShaderSlot>0){
		this.lstIntWidths[intShaderSlot]=Math.pow(2,Math.ceil(Math.log(this.lstIntWidths[0])/Math.log(2)));
		this.lstIntHeights[intShaderSlot]=Math.pow(2,Math.ceil(Math.log(this.lstIntHeights[0])/Math.log(2)));
		this.lstFramebufferTextures[intShaderSlot]=this.gl.createTexture();
		var ii=this.lstFramebufferTextures.length-1;
		this.lstTextureSamplers.push(-1*ii);
		var jj=this.lstTextureSamplers.length-1;
		var emptyCanvas=document.createElement("canvas");
		emptyCanvas.width=this.lstIntWidths[intShaderSlot];
		emptyCanvas.height=this.lstIntHeights[intShaderSlot];

		this.gl.activeTexture(this.gl.TEXTURE0+jj);
		this.gl.bindTexture(this.gl.TEXTURE_2D,this.lstFramebufferTextures[ii]);
		this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MIN_FILTER,this.gl.NEAREST);
		this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MAG_FILTER,this.gl.NEAREST);
		this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGBA,this.gl.RGBA,this.gl.UNSIGNED_BYTE,emptyCanvas);
	}
};
ShaderThinkpad.prototype.initShaderProgram=function(intShaderSlot){
	this.gl.useProgram(this.lstShaderPrograms[intShaderSlot]);
	this.lstShaderPrograms[intShaderSlot].uniforms={
		fGlobalTime:this.gl.getUniformLocation(this.lstShaderPrograms[intShaderSlot],"fGlobalTime"),
		v2Resolution:this.gl.getUniformLocation(this.lstShaderPrograms[intShaderSlot],"v2Resolution"),
		lstTextureSlots:[],
		lstVec2textureSlotsDims:[],
		lstShaderSlots:[null],
		lstVec2shaderSlotsDims:[null]
	};
	var jj=null;
	for(var ii=0;ii<this.lstTextureSlots.length;ii++){
		jj=this.getTextureSamplerNumber(ii);
		if(null==jj)continue;
		this.lstShaderPrograms[intShaderSlot].uniforms.lstTextureSlots.push(this.gl.getUniformLocation(this.lstShaderPrograms[intShaderSlot],"texture"+ii));
		this.lstShaderPrograms[intShaderSlot].uniforms.lstVec2textureSlotsDims.push(this.gl.getUniformLocation(this.lstShaderPrograms[intShaderSlot],"vec2texture"+ii+"size"));
		this.gl.activeTexture(this.gl.TEXTURE0+jj);
		this.gl.bindTexture(this.gl.TEXTURE_2D,this.lstTextureSlots[ii]);
		this.gl.uniform1i(this.lstShaderPrograms[intShaderSlot].uniforms.lstTextureSlots[ii],jj);
		this.gl.uniform2f(this.lstShaderPrograms[intShaderSlot].uniforms.lstVec2textureSlotsDims[ii],this.lstVec2textureSlotsDims[0],this.lstVec2textureSlotsDims[1]);
	}
	for(var ii=1;ii<this.lstFramebufferTextures.length;ii++){
		jj=this.getTextureSamplerNumber(-1*ii);
		if(null==jj)continue;
		this.lstShaderPrograms[intShaderSlot].uniforms.lstShaderSlots.push(this.gl.getUniformLocation(this.lstShaderPrograms[intShaderSlot],"shader"+ii));
		this.lstShaderPrograms[intShaderSlot].uniforms.lstVec2shaderSlotsDims.push(this.gl.getUniformLocation(this.lstShaderPrograms[intShaderSlot],"vec2shader"+ii+"size"));
		this.gl.activeTexture(this.gl.TEXTURE0+jj);
		this.gl.bindTexture(this.gl.TEXTURE_2D,this.lstFramebufferTextures[ii]);
		this.gl.uniform1i(this.lstShaderPrograms[intShaderSlot].uniforms.lstShaderSlots[ii],jj);
		this.gl.uniform2f(this.lstShaderPrograms[intShaderSlot].uniforms.lstVec2shaderSlotsDims[ii],this.lstVec2shaderSlotsDims[0],this.lstVec2shaderSlotsDims[1]);
	}
	this.lstShaderPrograms[intShaderSlot].attribs={
		vec3vertex:this.gl.getAttribLocation(this.lstShaderPrograms[intShaderSlot],"vec3vertex")
	};
	this.vec3vertexBuffer=this.gl.createBuffer();
	this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vec3vertexBuffer);
	var vertices=[-1.0,-1.0,0.0,-1.0,1.0,0.0,1.0,-1.0,0.0,1.0,1.0,0.0];
	this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array(vertices), this.gl.STATIC_DRAW);
	this.vec3vertexBuffer.intItemSize=3;
	this.vec3vertexBuffer.intItems=4;
};
ShaderThinkpad.prototype.updateShaderSlot0sizeSettings=function(){
	this.canvas.width=this.lstIntWidths[0];
	this.canvas.height=this.lstIntHeights[0];
	this.data=new Uint8Array(this.lstIntWidths[0]*this.lstIntHeights[0]*4);
};
ShaderThinkpad.prototype.resizeShaderSlot=function(intNewWidth,intNewHeight,intShaderSlot){
	var blnIntWidthPow2CeilLogLog2ed=false;
	var blnIntHeightPow2CeilLogLog2ed=false;
	if(0==intShaderSlot){
		this.lstIntWidths[intShaderSlot]=intNewWidth;
		this.lstIntHeights[intShaderSlot]=intNewHeight;
		this.updateShaderSlot0sizeSettings();
	}else{
		if(Math.abs(Math.ceil(Math.log(intNewWidth)/Math.log(2))-Math.log(intNewWidth)/Math.log(2))<netspace.epsilon)
			this.lstIntWidths[intShaderSlot]=intNewWidth;
		else{
			blnIntWidthPow2CeilLogLog2ed=true;
			this.lstIntWidths[intShaderSlot]=Math.pow(2,Math.ceil(Math.log(intNewWidth)/Math.log(2)));
		}
		if(Math.abs(Math.ceil(Math.log(intNewHeight)/Math.log(2))-Math.log(intNewHeight)/Math.log(2))<netspace.epsilon)
			this.lstIntHeights[intShaderSlot]=intNewHeight;
		else{
			blnIntHeightPow2CeilLogLog2ed=true;
			this.lstIntHeights[intShaderSlot]=Math.pow(2,Math.ceil(Math.log(intNewHeight)/Math.log(2)));
		}
		var strMessage="";
		if(true==blnIntWidthPow2CeilLogLog2ed)strMessage+="intWidth ";
		if(true==blnIntHeightPow2CeilLogLog2ed)strMessage+="intHeight ";
		if(true==blnIntWidthPow2CeilLogLog2ed||true==blnIntHeightPow2CeilLogLog2ed){
			strMessage+="has been pow2ceilLogLog2'ed to the fast power of 2 size required by that OpenGL version. [intWidth,intHeight]=["+[this.lstIntWidths[intShaderSlot],this.lstIntHeights[intShaderSlot]]+"]";
			alert(strMessage);
		}

	}
};
ShaderThinkpad.prototype.resize=function(intNewWidth,intNewHeight){
	this.resizeShaderSlot(intNewWidth,intNewHeight,0);
	return;
	this.lstIntWidths[0]=intNewWidth;
	this.lstIntHeights[0]=intNewHeight;
	return;
	if(1==this.lstFramebufferTextures.length){
		this.lstIntWidths[0]=intNewWidth;
		this.lstIntHeights[0]=intNewHeight;
	}else{
		if(Math.abs(Math.ceil(Math.log(intNewWidth)/Math.log(2))-Math.log(intNewWidth)/Math.log(2))<netspace.epsilon)
			this.lstIntWidths[0]=intNewWidth;
		else this.lstIntWidths[0]=Math.ceil(Math.log(intNewWidth)/Math.log(2));
		if(Math.abs(Math.ceil(Math.log(intNewHeight)/Math.log(2))-Math.log(intNewHeight)/Math.log(2))<netspace.epsilon)
			this.lstIntHeights[0]=intNewHeight;
		else this.lstIntHeights[0]=Math.ceil(Math.log(intNewHeight)/Math.log(2));
	}
};
ShaderThinkpad.prototype.initShaderPrograms=function(){
	for(var ii=0;ii<this.lstShaderPrograms.length;ii++){
		this.initShaderProgram(ii);
	}
};
ShaderThinkpad.prototype.initExternalTextureRenderer=function(){
	if(false==this.blnExternalTextureRenderer){
		this.externalTextureRenderer=new ShaderThinkpad(true,this);
	}
};
ShaderThinkpad.prototype.deleteExternalTextureRenderer=function(){
	if(false==this.blnExternalTextureRenderer){
		this.externalTextureRenderer=null;
	}
};
ShaderThinkpad.prototype.initTextureFramebuffer=function(intShaderSlot){
	this.lstFramebuffers[intShaderSlot]=this.gl.createFramebuffer();
	this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this.lstFramebuffers[intShaderSlot]);
	this.lstFramebuffers[intShaderSlot].width=this.lstIntWidths[intShaderSlot];
	this.lstFramebuffers[intShaderSlot].height=this.lstIntHeights[intShaderSlot];
	var jj=null;
	jj=this.getTextureSamplerNumber(-1*intShaderSlot);
	if(null==jj)return;
	this.gl.useProgram(this.lstShaderPrograms[intShaderSlot]);
	this.lstFramebufferTextures[intShaderSlot]=this.gl.createTexture();
	this.gl.activeTexture(this.gl.TEXTURE0+jj);
	this.gl.bindTexture(this.gl.TEXTURE_2D,this.lstFramebufferTextures[intShaderSlot]);
	this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MAG_FILTER,this.gl.LINEAR);
	this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MIN_FILTER,this.gl.LINEAR_MIPMAP_NEAREST);
	this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGBA,this.lstFramebuffers[intShaderSlot].width,this.lstFramebuffers[intShaderSlot].height,0,this.gl.RGBA,this.gl.UNSIGNED_BYTE,null);
	var renderbuffer=this.gl.createRenderbuffer();
	this.gl.bindRenderbuffer(this.gl.RENDERBUFFER,renderbuffer);
	this.gl.renderbufferStorage(this.gl.RENDERBUFFER,this.gl.DEPTH_COMPONENT16,this.lstFramebuffers[intShaderSlot].width,this.lstFramebuffers[intShaderSlot].height);
	this.gl.useProgram(this.lstShaderPrograms[intShaderSlot]);
	this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER,this.gl.COLOR_ATTACHMENT0,this.gl.TEXTURE_2D,this.lstFramebufferTextures[intShaderSlot],0);
	this.gl.framebufferRenderbuffer(this.gl.FRAMEBUFFER,this.gl.DEPTH_ATTACHMENT,this.gl.RENDERBUFFER,this.renderbuffer);
	this.gl.bindTexture(this.gl.TEXTURE_2D,null);
	this.gl.bindRenderbuffer(this.gl.RENDERBUFFER,null);
	this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,null);
};
ShaderThinkpad.prototype.initTextureFramebuffers=function(){
	for(var ii=1;ii<this.lstShaderPrograms.length;ii++){
		this.initTextureFramebuffer(ii);
	}
};
ShaderThinkpad.prototype.renderExternalTextureSlot=function(){
	this.render();
};
ShaderThinkpad.prototype.tryToUpdateExternalTexturesSlot=function(){
	if(true==this.blnExternalTextureRenderer)return;
	if(false==netspace.blnLoad3dWorldsOnStart)return;
	if(false==netspace.chkUseExternalQuickTextures.checked)return;
	var fltTime=performance.now()/1000.;
	if(null!=this.fltLastExternalTexturesUpdateTime&&Math.abs(fltTime-this.fltLastExternalTexturesUpdateTime)<this.fltExternalTexturesUpdateDelay){
		return;
	}
	this.fltLastExternalTexturesUpdateTime=fltTime;	
	if(3==this.intShaderSlotDivideMode){
		if(null==this.externalTextureRenderer){
			return;
		}
		this.externalTextureRenderer.renderExternalTextureSlot();
	}
	var quickTextureContext=netspace.quickTextureCanvas.getContext("2d");
	var quickTextureImage=quickTextureContext.getImageData(0,0,netspace.intQuickTexturesWidth,netspace.intQuickTexturesHeight);
	var I0,J0,I1,J1;
	var I0start,J0start;
	var index0,index1;
	var scalei,scalej, intShiftX,intShiftY;
	I0start=netspace.quickNetspacesTextureTypes.length;J0start=0;
	var Jend,Iend;
	if(2==this.intShaderSlotDivideMode){
		Iend=Math.ceil(this.lstIntWidths[0]/netspace.intQuickTextureHeight);
		Jend=Math.ceil(this.lstIntHeights[0]/netspace.intQuickTextureHeight);
	}else{
		Iend=1;Jend=1;
	}	
	if(1==this.intShaderSlotDivideMode){
		scalei=this.lstIntWidths[0]/netspace.intQuickTextureHeight;
		scalej=this.lstIntHeights[0]/netspace.intQuickTextureHeight;
	}else{
		scalei=1.;scalej=1.;
	}
	var textureData=null;
	var theWidth,theHeight;
	if(3==this.intShaderSlotDivideMode){
		textureData=this.externalTextureRenderer.data;
		Iend=1;Jend=1;
		scalei=1.;scalej=1.;
		theWidth=netspace.intQuickTextureHeight;
		theHeight=netspace.intQuickTextureHeight;
	}
	else{
		textureData=this.data;
		theWidth=this.lstIntWidths[0];
		theHeight=this.lstIntHeights[0];
	}
	if(0==this.intShaderSlotDivideMode){
		intShiftX=Math.floor(0.5*(netspace.shaderThinkpad.lstIntWidths[0]-netspace.intQuickTextureHeight));
		intShiftY=Math.floor(0.5*(netspace.shaderThinkpad.lstIntHeights[0]-netspace.intQuickTextureHeight));
	}else{
		intShiftX=0;intShiftY=0;
	}
	for(var J=0;J<Math.ceil(Jend);J++){
		for(var I=0;I<Math.ceil(Iend);I++){
			for(var j=0;j<netspace.intQuickTextureHeight;j++)
				for(var i=0;i<netspace.intQuickTextureHeight;i++){
					I0=I0start*netspace.intQuickTextureHeight+i;J0=J0start*netspace.intQuickTextureHeight+j;
					index0=(J0*netspace.intQuickTexturesWidth+I0)*4;
					I1=Math.floor(I*netspace.intQuickTextureHeight+scalei*i);J1=Math.floor(J*netspace.intQuickTextureHeight+scalej*(netspace.intQuickTextureHeight-j));
					index1=((J1+intShiftY)*theWidth+(I1+intShiftX))*4;
					if(index1+3<textureData.length&&I1<theWidth&&J1<theHeight){
						quickTextureImage.data[index0+0]=textureData[index1+0];
						quickTextureImage.data[index0+1]=textureData[index1+1];
						quickTextureImage.data[index0+2]=textureData[index1+2];
						quickTextureImage.data[index0+3]=textureData[index1+3];
					}else{
						quickTextureImage.data[index0+0]=netspace.lstExternalEmptyColor[0];
						quickTextureImage.data[index0+1]=netspace.lstExternalEmptyColor[1];
						quickTextureImage.data[index0+2]=netspace.lstExternalEmptyColor[2];
						quickTextureImage.data[index0+3]=netspace.lstExternalEmptyColor[3];

					}
			}
			I0start++;
			if(I0start*netspace.intQuickTextureHeight>=netspace.intQuickTexturesWidth){
				I0start=0;J0start++;
			}
		}
	}
	quickTextureContext.putImageData(quickTextureImage,0,0);
	this.blnExternalTexturesUpdated=true;
};
ShaderThinkpad.prototype.renderSlot=function(intShaderSlot){
	this.gl.useProgram(this.lstShaderPrograms[intShaderSlot]);
	this.gl.clearColor(1.0,1.0,1.0,1.0);
	this.gl.viewport(0,0,this.lstIntWidths[intShaderSlot],this.lstIntHeights[intShaderSlot]);
	this.gl.clear(this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT);
	this.gl.uniform1f(this.lstShaderPrograms[intShaderSlot].uniforms.fGlobalTime,(performance.now()/1000.));
	this.gl.uniform2f(this.lstShaderPrograms[intShaderSlot].uniforms.v2Resolution,this.lstIntWidths[intShaderSlot],this.lstIntHeights[intShaderSlot]);
	var jj=null;
	for(var ii=0;ii<this.lstShaderPrograms[intShaderSlot].uniforms.lstTextureSlots.length;ii++){
		jj=this.getTextureSamplerNumber(ii);
		if(null==jj)continue;
		this.gl.activeTexture(this.gl.TEXTURE0+jj);
		this.gl.bindTexture(this.gl.TEXTURE_2D,this.lstTextureSlots[ii]);
		this.gl.uniform1i(this.lstShaderPrograms[intShaderSlot].uniforms.lstTextureSlots[ii],jj);
		this.gl.uniform2f(this.lstShaderPrograms[intShaderSlot].uniforms.lstVec2textureSlotsDims[ii],this.lstVec2textureSlotsDims[0],this.lstVec2textureSlotsDims[1]);
	}
	for(var ii=1;ii<this.lstShaderPrograms[intShaderSlot].uniforms.lstShaderSlots.length;ii++){
		jj=this.getTextureSamplerNumber(-1*ii);
		if(null==jj)continue;
		this.gl.activeTexture(this.gl.TEXTURE0+jj);
		this.gl.bindTexture(this.gl.TEXTURE_2D,this.lstFramebufferTextures[ii]);
		this.gl.uniform1i(this.lstShaderPrograms[intShaderSlot].uniforms.lstShaderSlots[ii],jj);
		this.gl.uniform2f(this.lstShaderPrograms[intShaderSlot].uniforms.lstVec2shaderSlotsDims[ii],this.lstVec2shaderSlotsDims[0],this.lstVec2shaderSlotsDims[1]);
	}
	if(undefined!=this.lstFramebufferTextures[intShaderSlot]){
		jj=this.getTextureSamplerNumber(-1*intShaderSlot);
		if(null!=jj){
			this.gl.activeTexture(this.gl.TEXTURE0+jj);
			this.gl.bindTexture(this.gl.TEXTURE_2D,this.lstFramebufferTextures[intShaderSlot]);
			this.gl.generateMipmap(this.gl.TEXTURE_2D);
			this.gl.bindTexture(this.gl.TEXTURE_2D,null);
		}
	}
	this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.vec3vertexBuffer);
	if(-1!=this.lstShaderPrograms[intShaderSlot].vec3vertex)
		this.gl.vertexAttribPointer(this.lstShaderPrograms[intShaderSlot].vec3vertex, this.vec3vertexBuffer.intItemSize, this.gl.FLOAT, this.gl.FALSE, 0, 0);
	this.gl.enableVertexAttribArray(this.lstShaderPrograms[intShaderSlot].vec3vertex);
	this.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, this.vec3vertexBuffer.intItems);
	if(0==intShaderSlot){
    		this.gl.readPixels(0,0,this.lstIntWidths[0],this.lstIntHeights[0],this.gl.RGBA,this.gl.UNSIGNED_BYTE,this.data);
		this.tryToUpdateExternalTexturesSlot();
	}
};
ShaderThinkpad.prototype.render=function(){
	if(false==netspace.chkShaderThinkpad.checked)return;
	for(var intShaderSlot=1;intShaderSlot<this.lstShaderPrograms.length;intShaderSlot++){
		this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this.lstFramebuffers[intShaderSlot]);
		this.renderSlot(intShaderSlot);
		this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,null);
	}
	this.renderSlot(0);
};
ShaderThinkpad.prototype.getShaderText=function(id){
	var shaderScript=document.getElementById(id);
	if(!shaderScript)
		return null;
	var strText="";
	var theNode=shaderScript.firstChild;
	while(theNode){
		if(3==theNode.nodeType){
			strText+=theNode.textContent;
		}
		theNode=theNode.nextSibling;
	}
	if(null!=strText)if(String.fromCharCode(10)==strText[0]||String.fromCharCode(13)==strText[0])strText=strText.substring(1);
	return strText;
};
ShaderThinkpad.prototype.getFragmentShader=function(gl,strShader){
	var theShader=gl.createShader(gl.FRAGMENT_SHADER);
	gl.shaderSource(theShader,strShader);
	gl.compileShader(theShader);
	if(!gl.getShaderParameter(theShader,gl.COMPILE_STATUS)){
		alert(gl.getShaderInfoLog(theShader));
		return null;
	}
	return theShader;
};
ShaderThinkpad.prototype.getShaderProgram=function(gl,strShader){
	var vertexShader=getShader(gl,"shaderThinkpad-vertex"); 
	var fragmentShader=this.getFragmentShader(gl,strShader);
	var shaderProgram=gl.createProgram();
	gl.attachShader(shaderProgram,vertexShader);
	gl.attachShader(shaderProgram,fragmentShader);
	gl.linkProgram(shaderProgram);
	if(!gl.getProgramParameter(shaderProgram,gl.LINK_STATUS))
		alert("Program link error: "+gl.getShaderInfoLog(shaderProgram));
	return shaderProgram;
};
ShaderThinkpad.prototype.emptyTextureSetting=function(){
	this.lstTextureSlots=[];
	this.lstTextureSamplers=[];
	this.lstVec2textureSlotsDims=[];
	this.lstTextureCanvases=[];
	this.lstTextureSlots=[];
	this.lstBlnTextureSlotTextureChanged=[];
};
ShaderThinkpad.prototype.copyTextureSlots=function(shaderThinkpad2){
	var jj=null;
	this.emptyTextureSetting();
	for(var ii=0;ii<shaderThinkpad2.lstTextureSamplers.length;ii++)
		this.lstTextureSamplers.push(shaderThinkpad2.lstTextureSamplers[ii]);

	for(var ii=0;ii<shaderThinkpad2.lstTextureSlots.length;ii++){
		if(this.lstTextureSlots.length>100){
			break;
		}
		jj=this.getTextureSamplerNumber(ii);
		if(null==jj)continue;
		this.lstVec2textureSlotsDims.push([shaderThinkpad2.lstVec2textureSlotsDims[ii][0],shaderThinkpad2.lstVec2textureSlotsDims[ii][1]]);
		this.lstTextureCanvases.push(shaderThinkpad2.lstTextureCanvases[ii]);
		this.lstTextureSlots.push(this.gl.createTexture());
		this.gl.activeTexture(this.gl.TEXTURE0+jj);
		this.gl.bindTexture(this.gl.TEXTURE_2D,this.lstTextureSlots[ii]);
		this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MIN_FILTER,this.gl.NEAREST);
		this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MAG_FILTER,this.gl.NEAREST);
		this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGBA,this.gl.RGBA,this.gl.UNSIGNED_BYTE,this.lstTextureCanvases[ii]);
		this.lstBlnTextureSlotTextureChanged.push(shaderThinkpad2.lstBlnTextureSlotTextureChanged);
	}
};
ShaderThinkpad.prototype.copyShaderPrograms_externalTextureRenderer=function(shaderThinkpad2){
	this.lstShaderPrograms=[];
	this.lstStrActualShaders=[];
	for(var intShaderSlot=0;intShaderSlot<shaderThinkpad2.lstShaderPrograms.length;intShaderSlot++){
		this.lstIntWidths[intShaderSlot]=netspace.intQuickTextureHeight;
		this.lstIntHeights[intShaderSlot]=netspace.intQuickTextureHeight;
		this.lstShaderPrograms.push(this.getShaderProgram(this.gl,shaderThinkpad2.lstStrActualShaders[intShaderSlot]));
		this.lstStrActualShaders.push(shaderThinkpad2.lstStrActualShaders[intShaderSlot]);
	}
};
ShaderThinkpad.prototype.compileShader=function(strShader,intShaderSlot){
	try{
	this.lstShaderPrograms[intShaderSlot]=this.getShaderProgram(this.gl,strShader);
	}catch(xcp){
		alert(xcp);
		return;
	}
	this.checkFramebufferSetting(intShaderSlot);
	this.initShaderPrograms();	
	this.lstStrActualShaders[intShaderSlot]=strShader;
	var ShaderThinkpadManager_sltShaderSlots=document.getElementById("ShaderThinkpadManager_sltShaderSlots");
	if(intShaderSlot>=ShaderThinkpadManager_sltShaderSlots.options.length-2)this.shaderThinkpadManager.addShaderSlot_(false);
	if(intShaderSlot>0)
		this.initTextureFramebuffers();
	if(true==netspace.blnLoad3dWorldsOnStart&&true==netspace.chkUseExternalQuickTextures.checked&&null!=this.externalTextureRenderer){
			this.externalTextureRenderer.lstShaderPrograms[intShaderSlot]=this.getShaderProgram(this.externalTextureRenderer.gl,strShader);
			this.externalTextureRenderer.checkFramebufferSetting(intShaderSlot);
			this.externalTextureRenderer.initShaderPrograms();
			this.lstStrActualShaders[intShaderSlot]=strShader;
			if(intShaderSlot>0)
				this.externalTextureRenderer.initTextureFramebuffers();
	}

};
var ShaderThinkpadManagerConstructor_strF=function(that,shaderThinkpad){
};
var ShaderThinkpadManagerConstructor=function(that,shaderThinkpad){
	that.shaderThinkpad=shaderThinkpad;
	that.strExampleTexturePutpixelFunction="netspace.shaderThinkpad.texturePutpixelFunction=function(){/*That OpenGL version requires fast power of 2 texture sizes*/var intWidth=Math.pow(2,6);var intHeight=Math.pow(2,6);var imageCanvas=document.createElement("+String.fromCharCode(34)+"canvas"+String.fromCharCode(34)+");imageCanvas.width=intWidth;imageCanvas.width=intHeight;var imageContext=imageCanvas.getContext("+String.fromCharCode(34)+"2d"+String.fromCharCode(34)+");var imageData=imageContext.getImageData(0,0,intWidth,intHeight);var intR,intG,intB,intA;var index;for(var j=0;j<intHeight;j++){for(var i=0;i<intWidth;i++){index=(j*intWidth+i)*4;/*lstReturn=funPutpixel(i,j);intR=lstReturn[0];intG=lstReturn[1];intB=lstReturn[2];intA=lstReturn[3];*/intR=255;intG=60;intB=0;intA=255;imageData.data[index+0]=intR;imageData.data[index+1]=intG;imageData.data[index+2]=intB;imageData.data[index+3]=intA;}}imageContext.putImageData(imageData,0,0);imageContext.fillStyle="+String.fromCharCode(34)+"rgba("+String.fromCharCode(34)+"+window.mhd.netspace.lstColors[1][0]+"+String.fromCharCode(34)+","+String.fromCharCode(34)+"+window.mhd.netspace.lstColors[1][1]+"+String.fromCharCode(34)+","+String.fromCharCode(34)+"+window.mhd.netspace.lstColors[1][2]+"+String.fromCharCode(34)+","+String.fromCharCode(34)+"+window.mhd.netspace.lstColors[1][3]+"+String.fromCharCode(34)+")"+String.fromCharCode(34)+";imageContext.fillText("+String.fromCharCode(34)+"Gru"+String.fromCharCode(223)+String.fromCharCode(34)+",0,10);imageContext.fillText("+String.fromCharCode(34)+String.fromCharCode(38382)+String.fromCharCode(22909)+String.fromCharCode(34)+",0,30);imageContext.beginPath();imageContext.strokeStyle="+String.fromCharCode(34)+"rgba("+String.fromCharCode(34)+"+window.mhd.netspace.lstColors[1][0]+"+String.fromCharCode(34)+","+String.fromCharCode(34)+"+window.mhd.netspace.lstColors[1][1]+"+String.fromCharCode(34)+","+String.fromCharCode(34)+"+window.mhd.netspace.lstColors[1][2]+"+String.fromCharCode(34)+","+String.fromCharCode(34)+"+window.mhd.netspace.lstColors[1][3]+"+String.fromCharCode(34)+")"+String.fromCharCode(34)+";imageContext.moveTo(0,15);imageContext.lineTo(37,15);imageContext.stroke();imageData=imageContext.getImageData(0,0,intWidth,intHeight);netspace.shaderThinkpad.texturePutpixelData=[imageData,intWidth,intHeight];};";
	that.strExampleSandcornTexturePutpixelFunction="netspace.shaderThinkpad.texturePutpixelFunction=function(){var intWidth=Math.pow(2,10);var intHeight=Math.pow(2,10);var intSandcornWidth=8;var intSandcornHeight=8;var imageCanvas=document.createElement("+String.fromCharCode(34)+"canvas"+String.fromCharCode(34)+");imageCanvas.width=intWidth;imageCanvas.width=intHeight;var imageContext=imageCanvas.getContext("+String.fromCharCode(34)+"2d"+String.fromCharCode(34)+");var imageData=imageContext.getImageData(0,0,intWidth,intHeight);var intInformationWidth=Math.floor(intWidth/intSandcornWidth);var intInformationHeight=Math.floor(intHeight/intSandcornHeight);var inputInformation=new Uint8Array(intInformationWidth*intInformationHeight);for(var ii=0;ii<inputInformation.length;ii++)inputInformation[ii]=window.mhd.netspace.floorRand(0,10);var intR,intG,intB,intA;var index0,index1;var lstColor;var I,J;for(var j=0;j<intHeight;j++){for(var i=0;i<intWidth;i++){index0=(j*intWidth+i)*4;I=Math.floor(i/intSandcornWidth);J=Math.floor(j/intSandcornHeight);index1=(J*intInformationWidth+I);if(I>=0&&J>=0&&I<intInformationWidth&&J<intInformationHeight){lstColor=window.mhd.netspace.lstColors[inputInformation[index1]];intR=lstColor[0];intG=lstColor[1];intB=lstColor[2];intA=lstColor[3];imageData.data[index0+0]=intR;imageData.data[index0+1]=intG;imageData.data[index0+2]=intB;imageData.data[index0+3]=intA;}else{imageData.data[index0+0]=netspace.lstExternalEmptyColor[0];imageData.data[index0+1]=netspace.lstExternalEmptyColor[1];imageData.data[index0+2]=netspace.lstExternalEmptyColor[2];imageData.data[index0+3]=netspace.lstExternalEmptyColor[3];}}}imageContext.putImageData(imageData,0,0);netspace.shaderThinkpad.texturePutpixelData=[imageData,intWidth,intHeight];};";
	if(undefined!=netspace.extensionManager&&null!=netspace.extensionManager)
		netspace.extensionManager.addExtension("ShaderThinkpadManagerExtension","ShaderThinkpad",function(){var btnLoadShaderThinkpad=document.getElementById("btnLoadShaderThinkpad");if(null!=btnLoadShaderThinkpad)btnLoadShaderThinkpad.outerHTML="";});
	that.lstConsoleGrayWith=[255,255,255,255];
	var ShaderThinkpadManager_txtConsoleGrayWith=document.createElement("input");
	ShaderThinkpadManager_txtConsoleGrayWith.id="ShaderThinkpadManager_txtConsoleGrayWith";
	ShaderThinkpadManager_txtConsoleGrayWith.type="text";
	ShaderThinkpadManager_txtConsoleGrayWith.value="["+that.lstConsoleGrayWith+"]";
	ShaderThinkpadManager_txtConsoleGrayWith.onchange=function(){
		var lstColor=netspace.shaderThinkpad.shaderThinkpadManager.parseLstConsoleGray(this.value);
		if(null!=lstColor){
			netspace.shaderThinkpad.shaderThinkpadManager.lstConsoleGrayWith=lstColor;
			if(true==netspace.chkShaderThinkpad.checked)
				netspace.computer.lstConsoleGray=lstColor;
		}else{
			alert("Incorrect lstColor - write lstColor in rgba format like ["+netspace.shaderThinkpad.shaderThinkpadManager.lstConsoleGrayWith+"]");
		}
	};
	if(undefined!=netspace.extensionManager&&null!=netspace.extensionManager){
		netspace.extensionManager.appendChild("ShaderThinkpadManagerExtension",document.createTextNode("lstConsoleGray with="));	
		netspace.extensionManager.appendChild("ShaderThinkpadManagerExtension",ShaderThinkpadManager_txtConsoleGrayWith);	
	}
	that.lstConsoleGrayWithout=[150,150,150,255];
	var ShaderThinkpadManager_txtConsoleGrayWithout=document.createElement("input");
	ShaderThinkpadManager_txtConsoleGrayWithout.id="ShaderThinkpadManager_txtConsoleGrayWithout";
	ShaderThinkpadManager_txtConsoleGrayWithout.type="text";
	ShaderThinkpadManager_txtConsoleGrayWithout.value="["+that.lstConsoleGrayWithout+"]";
	ShaderThinkpadManager_txtConsoleGrayWithout.onchange=function(){
		var lstColor=netspace.shaderThinkpad.shaderThinkpadManager.parseLstConsoleGray(this.value);
		if(null!=lstColor){
			netspace.shaderThinkpad.shaderThinkpadManager.lstConsoleGrayWithout=lstColor;
			if(false==netspace.chkShaderThinkpad.checked)
				netspace.computer.lstConsoleGray=lstColor;
		}else{
			alert("Incorrect lstColor - write lstColor in rgba format like ["+netspace.shaderThinkpad.shaderThinkpadManager.lstConsoleGrayWithout+"]");
		}
	};
	if(undefined!=netspace.extensionManager&&null!=netspace.extensionManager){
		netspace.extensionManager.appendChild("ShaderThinkpadManagerExtension",document.createTextNode("lstConsoleGray without="));	
		netspace.extensionManager.appendChild("ShaderThinkpadManagerExtension",ShaderThinkpadManager_txtConsoleGrayWithout);
	}
	that.fltComputerTextScreenOpacity=0.5;
	var ShaderThinkpadManager_txtComputerTextScreenOpacity=document.createElement("input");
	ShaderThinkpadManager_txtComputerTextScreenOpacity.id="ShaderThinkpadManager_txtComputerTextScreenOpacity";
	ShaderThinkpadManager_txtComputerTextScreenOpacity.type="text";
	ShaderThinkpadManager_txtComputerTextScreenOpacity.value=""+that.fltComputerTextScreenOpacity;
	ShaderThinkpadManager_txtComputerTextScreenOpacity.onchange=function(){
		var fltOpacity=netspace.shaderThinkpad.shaderThinkpadManager.parseFltParameter(this.value);
		if(null!=fltOpacity){
			netspace.shaderThinkpad.shaderThinkpadManager.fltComputerTextScreenOpacity=fltOpacity;
		}else{
			alert("Incorrect float number - write fltComputerTextScreenOpacity like "+netspace.shaderThinkpad.shaderThinkpadManager.fltComputerTextScreenOpacity);
		}
	};
	if(undefined!=netspace.extensionManager&&null!=netspace.extensionManager){
		netspace.extensionManager.appendChild("ShaderThinkpadManagerExtension",document.createTextNode("fltComputerTextScreenOpacity="));	
		netspace.extensionManager.appendChild("ShaderThinkpadManagerExtension",ShaderThinkpadManager_txtComputerTextScreenOpacity);
	}
	that.blnShowComputerTextScreenText=true;
	var ShaderThinkpadManager_chkShowComputerTextScreenText=document.createElement("input");
	ShaderThinkpadManager_chkShowComputerTextScreenText.type="checkbox";
	ShaderThinkpadManager_chkShowComputerTextScreenText.id="ShaderThinkpadManager_chkShowComputerTextScreenText";
	ShaderThinkpadManager_chkShowComputerTextScreenText.checked=that.blnShowComputerTextScreenText;
	ShaderThinkpadManager_chkShowComputerTextScreenText.onchange=function(){
		netspace.shaderThinkpad.shaderThinkpadManager.blnShowComputerTextScreenText=this.checked;
	};
	if(undefined!=netspace.extensionManager&&null!=netspace.extensionManager){
		netspace.extensionManager.appendChild("ShaderThinkpadManagerExtension",ShaderThinkpadManager_chkShowComputerTextScreenText);	
		netspace.extensionManager.appendChild("ShaderThinkpadManagerExtension",document.createTextNode("Show computer text screen text (F10)"));	
	}

	var ShaderThinkpadManager_btnCompileShader=document.createElement("button");
	ShaderThinkpadManager_btnCompileShader.innerText="Compile shader (F9, :wshd 0)";
	ShaderThinkpadManager_btnCompileShader.id="ShaderThinkpadManager_btnCompileShader";
	ShaderThinkpadManager_btnCompileShader.onclick=function(){
		var strShaderSlot=prompt("shaderSlot number:","0");
		if(null==strShaderSlot)return;
		var intShaderSlot=parseInt(strShaderSlot);
		if(true==Number.isNaN(intShaderSlot))return;
		if(true==netspace.nonNumber(intShaderSlot))return;
		var theActualProgram=netspace.computer.theActualProgram;
		var that=null;
		if(undefined==theActualProgram.newTerminal)
			that=theActualProgram;
		else{var intXWindowNumber=theActualProgram.lstXWindows.length-1;that=theActualProgram.lstXWindows[intXWindowNumber].theActualProgram.theActualProgram;}
		if(undefined!=that.compileShader)that.compileShader("wshd "+intShaderSlot);
	};
	if(undefined!=netspace.extensionManager&&null!=netspace.extensionManager)
		netspace.extensionManager.appendChild("ShaderThinkpadManagerExtension",ShaderThinkpadManager_btnCompileShader);	

	var ShaderThinkpadManager_btnLoadActualShaderText=document.createElement("button");
	ShaderThinkpadManager_btnLoadActualShaderText.innerText="Load actual shader text (:oshd 0)";
	ShaderThinkpadManager_btnLoadActualShaderText.id="ShaderThinkpadManager_btnLoadActualShaderText";
	ShaderThinkpadManager_btnLoadActualShaderText.onclick=function(){
		var strShaderSlot=prompt("shaderSlot number:","0");
		if(null==strShaderSlot)return;
		var intShaderSlot=parseInt(strShaderSlot);
		if(true==Number.isNaN(intShaderSlot)){
			alert("Incorrect shaderSlot number");
			return;
		}
		if(true==netspace.nonNumber(intShaderSlot)){
			alert("Incorrect shaderSlot number");
			return;
		}
		var theActualProgram=netspace.computer.theActualProgram;
		var that=null;
		if(undefined==theActualProgram.newTerminal)
			that=theActualProgram;
		else{var intXWindowNumber=theActualProgram.lstXWindows.length-1;that=theActualProgram.lstXWindows[intXWindowNumber].theActualProgram.theActualProgram;}
		if(undefined!=that.openActualShaderText)that.openActualShaderText("oshd "+intShaderSlot);
	};
	if(undefined!=netspace.extensionManager&&null!=netspace.extensionManager)
		netspace.extensionManager.appendChild("ShaderThinkpadManagerExtension",ShaderThinkpadManager_btnLoadActualShaderText);	

	var ShaderThinkpadManager_btnLoadShaderFileAndCompile=document.createElement("button");
	ShaderThinkpadManager_btnLoadShaderFileAndCompile.innerText="Load shader file and compile (:owshd 0)";
	ShaderThinkpadManager_btnLoadShaderFileAndCompile.id="ShaderThinkpadManager_btnLoadShaderFileAndCompile";
	ShaderThinkpadManager_btnLoadShaderFileAndCompile.onclick=function(){
		var strShaderSlot=prompt("shaderSlot number:","0");
		if(null==strShaderSlot)return;
		var intShaderSlot=parseInt(strShaderSlot);
		if(true==Number.isNaN(intShaderSlot)){
			alert("Incorrect shaderSlot number");
			return;
		}
		if(true==netspace.nonNumber(intShaderSlot)){
			alert("Incorrect shaderSlot number");
			return;
		}
		var theActualProgram=netspace.computer.theActualProgram;
		var that=null;
		if(undefined==theActualProgram.newTerminal)
			that=theActualProgram;
		else{var intXWindowNumber=theActualProgram.lstXWindows.length-1;that=theActualProgram.lstXWindows[intXWindowNumber].theActualProgram.theActualProgram;}
		if(undefined!=that.openShaderTextFileAndCompile)that.openShaderTextFileAndCompile("owshd "+intShaderSlot);
	};
	if(undefined!=netspace.extensionManager&&null!=netspace.extensionManager)
		netspace.extensionManager.appendChild("ShaderThinkpadManagerExtension",ShaderThinkpadManager_btnLoadShaderFileAndCompile);	


	var ShaderThinkpadManager_arrTextureSlots=["Add texture slot from image...","Add generated texture from txtFunFunFun/clipboard0 texturePutpixelFunction","Set txtFunFunFun/clipboard0 with example texturePutpixelFunction","Set txtFunFunFun/clipboard 0 with example sandcorn texturePutpixelFunction","------------------------"];
	var ShaderThinkpadManager_sltTextureSlots=document.createElement("select");
	ShaderThinkpadManager_sltTextureSlots.id="ShaderThinkpadManager_sltTextureSlots";
	for(var ii=0;ii<ShaderThinkpadManager_arrTextureSlots.length;ii++){
		var option=document.createElement("option");
		option.value=ii;
		option.text=ShaderThinkpadManager_arrTextureSlots[ii];
		ShaderThinkpadManager_sltTextureSlots.appendChild(option);
	}
	ShaderThinkpadManager_sltTextureSlots.selectedIndex=4;
	ShaderThinkpadManager_sltTextureSlots.onchange=function(evtEvent){
		if(0==this.selectedIndex){
			this.selectedIndex=4;
			netspace.shaderThinkpad.shaderThinkpadManager.addTextureSlot();
		}
		if(1==this.selectedIndex){
			this.selectedIndex=4;
			netspace.shaderThinkpad.shaderThinkpadManager.generateTextureFromPutpizelization_add();
		}
		if(2==this.selectedIndex){
			this.selectedIndex=4;
			netspace.shaderThinkpad.shaderThinkpadManager.setTxtFunFunFunWithExampleTexturePutpixelFunction();
		}
		if(3==this.selectedIndex){
			this.selectedIndex=4;
			netspace.shaderThinkpad.shaderThinkpadManager.setTxtFunFunFunWithExampleSandcornTexturePutpixelFunction();
		}
	};
	if(undefined!=netspace.extensionManager&&null!=netspace.extensionManager)
 		netspace.extensionManager.appendChild("ShaderThinkpadManagerExtension",ShaderThinkpadManager_sltTextureSlots);	

	var ShaderThinkpadManager_arrShaderSlots=["Add shader from texteditor...","------------------------","shaderSlot0"];
	var ShaderThinkpadManager_sltShaderSlots=document.createElement("select");
	ShaderThinkpadManager_sltShaderSlots.id="ShaderThinkpadManager_sltShaderSlots";
	for(var ii=0;ii<ShaderThinkpadManager_arrShaderSlots.length;ii++){
		var option=document.createElement("option");
		option.value=ii;
		option.text=ShaderThinkpadManager_arrShaderSlots[ii];
		ShaderThinkpadManager_sltShaderSlots.appendChild(option);
	}
	ShaderThinkpadManager_sltShaderSlots.selectedIndex=2;
	ShaderThinkpadManager_sltShaderSlots.onchange=function(evtEvent){
		if(0==this.selectedIndex){
			this.selectedIndex=1;
			netspace.shaderThinkpad.shaderThinkpadManager.addShaderSlot();
		}
	};
	if(undefined!=netspace.extensionManager&&null!=netspace.extensionManager)
 		netspace.extensionManager.appendChild("ShaderThinkpadManagerExtension",ShaderThinkpadManager_sltShaderSlots);	
	
	var ShaderThinkpadManager_arrExternalTextureDivideModes=["0-central 32x32 square without scalling","1-scale image to fit into one 32x32 tile","2-divide full size image into consecutive 32x32 tiles","3-render again 32x32 image with the shader"];
	var ShaderThinkpadManager_sltExternalTextureDivideModes=document.createElement("select");
	ShaderThinkpadManager_sltExternalTextureDivideModes.id="ShaderThinkpadManager_sltExternalTextureDivideModes";
	for(var ii=0;ii<ShaderThinkpadManager_arrExternalTextureDivideModes.length;ii++){
		var option=document.createElement("option");
		option.value=ii;
		option.text=ShaderThinkpadManager_arrExternalTextureDivideModes[ii];
		ShaderThinkpadManager_sltExternalTextureDivideModes.appendChild(option);
	}
	ShaderThinkpadManager_sltExternalTextureDivideModes.selectedIndex=that.shaderThinkpad.intShaderSlotDivideMode;
	ShaderThinkpadManager_sltExternalTextureDivideModes.onchange=function(evtEvent){
		netspace.shaderThinkpad.intShaderSlotDivideMode=this.selectedIndex;
		if(true==netspace.blnLoad3dWorldsOnStart){
			if(true==netspace.chkUseExternalQuickTextures.checked&&3==netspace.shaderThinkpad.intShaderSlotDivideMode)
				netspace.shaderThinkpad.initExternalTextureRenderer();
			else netspace.shaderThinkpad.deleteExternalTextureRenderer();
		}
	};
	if(undefined!=netspace.extensionManager&&null!=netspace.extensionManager)
 		netspace.extensionManager.appendChild("ShaderThinkpadManagerExtension",ShaderThinkpadManager_sltExternalTextureDivideModes);	

	var ShaderThinkpadManager_btnAddCameraLookatScreenBlocksObject=document.createElement("button");
	ShaderThinkpadManager_btnAddCameraLookatScreenBlocksObject.innerText="Add camera lookat screen blocks object";
	ShaderThinkpadManager_btnAddCameraLookatScreenBlocksObject.id="ShaderThinkpadManager_btnAddCameraLookatScreenBlocksObject";
	ShaderThinkpadManager_btnAddCameraLookatScreenBlocksObject.onclick=function(){
		netspace.shaderThinkpad.shaderThinkpadManager.addCameraLookatScreenBlocksObject();
	};
	if(undefined!=netspace.extensionManager&&null!=netspace.extensionManager)
		netspace.extensionManager.appendChild("ShaderThinkpadManagerExtension",ShaderThinkpadManager_btnAddCameraLookatScreenBlocksObject);	

	var ShaderThinkpadManager_btnResizeManuallySelectedShaderDimensions=document.createElement("button");
	ShaderThinkpadManager_btnResizeManuallySelectedShaderDimensions.innerText="Resize manually shaderSlot ...";
	ShaderThinkpadManager_btnResizeManuallySelectedShaderDimensions.id="ShaderThinkpadManager_btnResizeManuallySelectedShaderDimensions";
	ShaderThinkpadManager_btnResizeManuallySelectedShaderDimensions.onclick=function(){
		var ShaderThinkpadManager_sltShaderSlots=document.getElementById("ShaderThinkpadManager_sltShaderSlots");
		var intShaderSlot=ShaderThinkpadManager_sltShaderSlots.selectedIndex-2;
		if(intShaderSlot>=0){
			var strDims=prompt("Enter new shaderSlot"+intShaderSlot+" [intWidth,intHeight] in pixels:","["+[netspace.shaderThinkpad.lstIntWidths[intShaderSlot],netspace.shaderThinkpad.lstIntHeights[intShaderSlot]]+"]");
			if(null==strDims)return;
			var lstDims=netspace.parseIntList(strDims);
			if(null==lstDims||2!=lstDims.length){
				alert("Incorrect integer [intWidth,intHeight]");
				return;
			}
			netspace.shaderThinkpad.resizeShaderSlot(lstDims[0],lstDims[1],intShaderSlot);
		}
		else alert("Set shader slot in ShaderThinkpadManager_sltShaderSlots");
	};
	if(undefined!=netspace.extensionManager&&null!=netspace.extensionManager)
		netspace.extensionManager.appendChild("ShaderThinkpadManagerExtension",ShaderThinkpadManager_btnResizeManuallySelectedShaderDimensions);	

	var ShaderThinkpadManager_btnSaveShaderThinkpadSetting=document.createElement("button");
	ShaderThinkpadManager_btnSaveShaderThinkpadSetting.innerText="Save the shader thinkpad setting to the file";
	ShaderThinkpadManager_btnSaveShaderThinkpadSetting.id="ShaderThinkpadManager_btnSaveShaderThinkpadSetting";
	ShaderThinkpadManager_btnSaveShaderThinkpadSetting.onclick=function(){
		alert("Save shader thinkpad setting to the file "+strFutureFeature);
	};
	if(undefined!=netspace.extensionManager&&null!=netspace.extensionManager)
		netspace.extensionManager.appendChild("ShaderThinkpadManagerExtension",ShaderThinkpadManager_btnSaveShaderThinkpadSetting);	

	var ShaderThinkpadManager_btnLoadShaderThinkpadSetting=document.createElement("button");
	ShaderThinkpadManager_btnLoadShaderThinkpadSetting.innerText="Load the shader thinkpad setting from the file...";
	ShaderThinkpadManager_btnLoadShaderThinkpadSetting.id="ShaderThinkpadManager_btnLoadShaderThinkpadSetting";
	ShaderThinkpadManager_btnLoadShaderThinkpadSetting.onclick=function(){
		alert("Load shader thinkpad setting from the file "+strFutureFeature);
	};
	if(undefined!=netspace.extensionManager&&null!=netspace.extensionManager)
		netspace.extensionManager.appendChild("ShaderThinkpadManagerExtension",ShaderThinkpadManager_btnLoadShaderThinkpadSetting);	

	var ShaderThinkpadManager_txtExternalTexturesUpdateDelay=document.createElement("input");
	ShaderThinkpadManager_txtExternalTexturesUpdateDelay.id="ShaderThinkpadManager_txtExternalTexturesUpdateDelay";
	ShaderThinkpadManager_txtExternalTexturesUpdateDelay.type="text";
	ShaderThinkpadManager_txtExternalTexturesUpdateDelay.value=""+that.shaderThinkpad.fltExternalTexturesUpdateDelay;
	ShaderThinkpadManager_txtExternalTexturesUpdateDelay.onchange=function(){
		var fltUpdateDelay=netspace.shaderThinkpad.shaderThinkpadManager.parseFltParameter(this.value);
		if(null!=fltUpdateDelay){
			netspace.shaderThinkpad.fltExternalTexturesUpdateDelay=fltUpdateDelay;
		}else{
			alert("Incorrect float number - write fltExternalTexturesUpdateDelay like "+netspace.shaderThinkpad.fltExternalTexturesUpdateDelay);
		}
	};
	if(undefined!=netspace.extensionManager&&null!=netspace.extensionManager){
		netspace.extensionManager.appendChild("ShaderThinkpadManagerExtension",document.createTextNode("fltExternalTexturesUpdateDelay="));	
		netspace.extensionManager.appendChild("ShaderThinkpadManagerExtension",ShaderThinkpadManager_txtExternalTexturesUpdateDelay);
	}

};
var ShaderThinkpadManager=function(shaderThinkpad){
	ShaderThinkpadManagerConstructor(this,shaderThinkpad);
	ShaderThinkpadManagerConstructor_strF(this,shaderThinkpad);
};
ShaderThinkpadManager.prototype.addTextureSlotReplaceButtons=function(){
	var ShaderThinkpadManager_btnLoadTextureSlot=document.getElementById("ShaderThinkpadManager_btnLoadTextureSlot");
	if(undefined!=ShaderThinkpadManager_btnLoadTextureSlot)return;
	var ShaderThinkpadManager_btnLoadTextureSlot=document.createElement("button");
	ShaderThinkpadManager_btnLoadTextureSlot.innerText="Replace texture slot from file...";
	ShaderThinkpadManager_btnLoadTextureSlot.id="ShaderThinkpadManager_btnLoadTextureSlot";
	ShaderThinkpadManager_btnLoadTextureSlot.onclick=function(){
		var ShaderThinkpadManager_sltTextureSlots=document.getElementById("ShaderThinkpadManager_sltTextureSlots");
		var intTextureSlot=ShaderThinkpadManager_sltTextureSlots.selectedIndex-5;
		if(intTextureSlot>=0)
			netspace.shaderThinkpad.shaderThinkpadManager.replaceTextureSlot_file(intTextureSlot);
		else alert("Set texture slot in ShaderThinkpadManager_sltTextureSlots");
	};
	if(undefined!=netspace.extensionManager&&null!=netspace.extensionManager)
		netspace.extensionManager.appendChild("ShaderThinkpadManagerExtension",ShaderThinkpadManager_btnLoadTextureSlot);	
	var ShaderThinkpadManager_btnGenerateTextureSlot=document.createElement("button");
	ShaderThinkpadManager_btnGenerateTextureSlot.innerText="Replace texture slot by generated from txtFunFunFun/clipboard0...";
	ShaderThinkpadManager_btnGenerateTextureSlot.id="ShaderThinkpadManager_btnGenerateTextureSlot";
	ShaderThinkpadManager_btnGenerateTextureSlot.onclick=function(){
		var ShaderThinkpadManager_sltTextureSlots=document.getElementById("ShaderThinkpadManager_sltTextureSlots");
		var intTextureSlot=ShaderThinkpadManager_sltTextureSlots.selectedIndex-5;
		if(intTextureSlot>=0)
			netspace.shaderThinkpad.shaderThinkpadManager.generateTextureFromPutpizelization_replace(intTextureSlot);
		else alert("Set texture slot in ShaderThinkpadManager_sltTextureSlots");

	};
	if(undefined!=netspace.extensionManager&&null!=netspace.extensionManager)
		netspace.extensionManager.appendChild("ShaderThinkpadManagerExtension",ShaderThinkpadManager_btnGenerateTextureSlot);	
};
ShaderThinkpadManager.prototype.addShaderSlotReplaceButton=function(){
	var ShaderThinkpadManager_btnLoadShaderSlot=document.getElementById("ShaderThinkpadManager_btnLoadShaderSlot");
	if(undefined!=ShaderThinkpadManager_btnLoadShaderSlot)return;
	var ShaderThinkpadManager_btnLoadShaderSlot=document.createElement("button");
	ShaderThinkpadManager_btnLoadShaderSlot.innerText="Replace shader slot from texteditor";
	ShaderThinkpadManager_btnLoadShaderSlot.id="ShaderThinkpadManager_btnLoadShaderSlot";
	ShaderThinkpadManager_btnLoadShaderSlot.onclick=function(){
		var ShaderThinkpadManager_sltShaderSlots=document.getElementById("ShaderThinkpadManager_sltShaderSlots");
		var intShaderSlot=ShaderThinkpadManager_sltShaderSlots.selectedIndex-2;
		if(intShaderSlot>=0)
			netspace.shaderThinkpad.shaderThinkpadManager.replaceShaderSlot(intShaderSlot);
		else alert("Set shader slot in ShaderThinkpadManager_sltShaderSlots");
	};
	if(undefined!=netspace.extensionManager&&null!=netspace.extensionManager)
		netspace.extensionManager.appendChild("ShaderThinkpadManagerExtension",ShaderThinkpadManager_btnLoadShaderSlot);	
};
ShaderThinkpadManager.prototype.parseLstConsoleGray=function(strColor){
	var lstStrNumbers=strColor.substring(1,strColor.length-1).split(",");
	if(4!=lstStrNumbers.length){
		return null;
	}
	var lstIntNumbers=[];	
	var intNumber=null;
	for(var ii=0;ii<4;ii++){
		intNumber=parseInt(lstStrNumbers[ii]);
		if(true==Number.isNaN(intNumber)){
			return null;
		}
		if(true==netspace.nonNumber(intNumber)){
			return null;
		}
		lstIntNumbers.push(intNumber);
	}
	return lstIntNumbers;
};
ShaderThinkpadManager.prototype.parseFltParameter=function(strNumber){
	var fltNumber=parseFloat(strNumber);
	if(true==netspace.nonNumber(fltNumber))return null;
	return fltNumber;
};
ShaderThinkpadManager.prototype.addShaderSlot_=function(blnMakeSure){
	if(null!=this.shaderThinkpad.externalTextureRenderer){
		if(this.shaderThinkpad.externalTextureRenderer.lstTextureSlots.length!=this.shaderThinkpad.lstTextureSlots.length){
			this.shaderThinkpad.externalTextureRenderer.copyTextureSlots(this.shaderThinkpad);
			this.shaderThinkpad.externalTextureRenderer.initShaderPrograms();
		}
	}

	var ShaderThinkpadManager_sltShaderSlots=document.getElementById("ShaderThinkpadManager_sltShaderSlots");
	var option=document.createElement("option");
	option.value=ShaderThinkpadManager_sltShaderSlots.options.length;
	option.text="shaderSlot"+(ShaderThinkpadManager_sltShaderSlots.options.length-2);
	ShaderThinkpadManager_sltShaderSlots.appendChild(option);
	var intTextureSlotNumber=ShaderThinkpadManager_sltShaderSlots.options.length-1;
	ShaderThinkpadManager_sltShaderSlots.selectedIndex=intTextureSlotNumber;
	intTextureSlotNumber-=2;
	if(true==blnMakeSure){
		var strMessage="Make sure, there are the following entries in your shader: \n"+"uniform sampler2D shader"+intTextureSlotNumber+";\n"+"uniform vec2 vec2shader"+intTextureSlotNumber+"size;";
		alert(strMessage);
	}
	this.addShaderSlotReplaceButton();
};
ShaderThinkpadManager.prototype.addShaderSlot=function(){
	var strShader=null;
	var theActualProgram=netspace.computer.theActualProgram;
	var that=null;
	if(undefined==theActualProgram.newTerminal)
		that=theActualProgram;
	else{var intXWindowNumber=theActualProgram.lstXWindows.length-1;that=theActualProgram.lstXWindows[intXWindowNumber].theActualProgram.theActualProgram;}
	if(undefined!=that.wndEditing)strShader=that.wndEditing.getStrContents();
	if(null!=strShader){
		var intShaderSlot=this.shaderThinkpad.lstFramebufferTextures.length;
		this.shaderThinkpad.compileShader(strShader,intShaderSlot);
	}
};
ShaderThinkpadManager.prototype.replaceShaderSlot=function(intShaderSlot){
	var strShader=null;
	var theActualProgram=netspace.computer.theActualProgram;
	var that=null;
	if(undefined==theActualProgram.newTerminal)
		that=theActualProgram;
	else{var intXWindowNumber=theActualProgram.lstXWindows.length-1;that=theActualProgram.lstXWindows[intXWindowNumber].theActualProgram.theActualProgram;}
	if(undefined!=that.wndEditing)strShader=that.wndEditing.getStrContents();
	if(null!=strShader){
		this.shaderThinkpad.compileShader(strShader,intShaderSlot);
	}
};
ShaderThinkpadManager.prototype.loadTextureSlot_add=function(imageData,intImageWidth,intImageHeight){
	var textureCanvas=document.createElement("canvas");
	textureCanvas.width=Math.pow(2,Math.ceil(Math.log(intImageWidth)/Math.log(2)));
	textureCanvas.height=Math.pow(2,Math.ceil(Math.log(intImageHeight)/Math.log(2)));
	this.shaderThinkpad.lstVec2textureSlotsDims.push([textureCanvas.width,textureCanvas.height]);
	var textureContext=textureCanvas.getContext("2d");
	textureContext.putImageData(imageData,0,0);
	this.shaderThinkpad.lstTextureSlots.push(this.shaderThinkpad.gl.createTexture());
	var ii=this.shaderThinkpad.lstTextureSlots.length-1;
	this.shaderThinkpad.lstTextureSamplers.push(ii);
	var jj=this.shaderThinkpad.lstTextureSamplers.length-1;
	this.shaderThinkpad.gl.activeTexture(this.shaderThinkpad.gl.TEXTURE0+jj);
	this.shaderThinkpad.gl.bindTexture(this.shaderThinkpad.gl.TEXTURE_2D,this.shaderThinkpad.lstTextureSlots[ii]);
	this.shaderThinkpad.gl.texParameteri(this.shaderThinkpad.gl.TEXTURE_2D,this.shaderThinkpad.gl.TEXTURE_MIN_FILTER,this.shaderThinkpad.gl.NEAREST);
	this.shaderThinkpad.gl.texParameteri(this.shaderThinkpad.gl.TEXTURE_2D,this.shaderThinkpad.gl.TEXTURE_MAG_FILTER,this.shaderThinkpad.gl.NEAREST);
	this.shaderThinkpad.gl.texImage2D(this.shaderThinkpad.gl.TEXTURE_2D,0,this.shaderThinkpad.gl.RGBA,this.shaderThinkpad.gl.RGBA,this.shaderThinkpad.gl.UNSIGNED_BYTE,textureCanvas);
	this.shaderThinkpad.lstBlnTextureSlotTextureChanged.push(false);
	this.shaderThinkpad.lstTextureCanvases.push(textureCanvas);
	this.shaderThinkpad.initShaderPrograms();
	if(null!=this.shaderThinkpad.externalTextureRenderer){
		if(this.shaderThinkpad.externalTextureRenderer.lstTextureSlots.length!=this.shaderThinkpad.lstTextureSlots.length){
			this.shaderThinkpad.externalTextureRenderer.copyTextureSlots(this.shaderThinkpad);
			this.shaderThinkpad.externalTextureRenderer.initShaderPrograms();
		}
	}
	var ShaderThinkpadManager_sltTextureSlots=document.getElementById("ShaderThinkpadManager_sltTextureSlots");
	var option=document.createElement("option");
	option.value=ShaderThinkpadManager_sltTextureSlots.options.length;
	option.text="textureSlot"+(ii);
	ShaderThinkpadManager_sltTextureSlots.appendChild(option);
	var intTextureSlotNumber=ShaderThinkpadManager_sltTextureSlots.options.length-1;
	ShaderThinkpadManager_sltTextureSlots.selectedIndex=intTextureSlotNumber;
	var strMessage="Make sure, there are the following entries in your shader: \n"+"uniform sampler2D texture"+ii+";\n"+"uniform vec2 vec2texture"+ii+"size;";
	alert(strMessage);
	this.addTextureSlotReplaceButtons();
};

ShaderThinkpadManager.prototype.loadTextureSlot_replace=function(imageData,intImageWidth,intImageHeight,intTextureSlot){
	var jj=this.shaderThinkpad.getTextureSamplerNumber(intTextureSlot);
	if(null==jj)return;
	var textureCanvas=document.createElement("canvas");
	textureCanvas.width=Math.pow(2,Math.ceil(Math.log(intImageWidth)/Math.log(2)));
	textureCanvas.height=Math.pow(2,Math.ceil(Math.log(intImageHeight)/Math.log(2)));
	this.shaderThinkpad.lstVec2textureSlotsDims[intTextureSlot]=[textureCanvas.width,textureCanvas.height];
	var textureContext=textureCanvas.getContext("2d");
	textureContext.putImageData(imageData,0,0);
	this.shaderThinkpad.lstTextureSlots[intTextureSlot]=this.shaderThinkpad.gl.createTexture();
	this.shaderThinkpad.lstTextureSamplers[jj]=intTextureSlot;
	this.shaderThinkpad.gl.activeTexture(this.shaderThinkpad.gl.TEXTURE0+jj);
	this.shaderThinkpad.gl.bindTexture(this.shaderThinkpad.gl.TEXTURE_2D,this.shaderThinkpad.lstTextureSlots[intTextureSlot]);
	this.shaderThinkpad.gl.texParameteri(this.shaderThinkpad.gl.TEXTURE_2D,this.shaderThinkpad.gl.TEXTURE_MIN_FILTER,this.shaderThinkpad.gl.NEAREST);
	this.shaderThinkpad.gl.texParameteri(this.shaderThinkpad.gl.TEXTURE_2D,this.shaderThinkpad.gl.TEXTURE_MAG_FILTER,this.shaderThinkpad.gl.NEAREST);
	this.shaderThinkpad.gl.texImage2D(this.shaderThinkpad.gl.TEXTURE_2D,0,this.shaderThinkpad.gl.RGBA,this.shaderThinkpad.gl.RGBA,this.shaderThinkpad.gl.UNSIGNED_BYTE,textureCanvas);
	this.shaderThinkpad.lstBlnTextureSlotTextureChanged[intTextureSlot]=false;
	this.shaderThinkpad.lstTextureCanvases[intTextureSlot]=textureCanvas;
	this.shaderThinkpad.initShaderPrograms();
	if(null!=this.shaderThinkpad.externalTextureRenderer){
		if(this.shaderThinkpad.externalTextureRenderer.lstTextureSlots.length!=this.shaderThinkpad.lstTextureSlots.length){
			this.shaderThinkpad.externalTextureRenderer.copyTextureSlots(this.shaderThinkpad);
			this.shaderThinkpad.externalTextureRenderer.initShaderPrograms();
		}
	}
	var strMessage="Make sure, there are the following entries in your shader: \n"+"uniform sampler2D texture"+intTextureSlot+";\n"+"uniform vec2 vec2texture"+intTextureSlot+"size;";
	alert(strMessage);
};
ShaderThinkpadManager.prototype.setTxtFunFunFunWithExampleTexturePutpixelFunction=function(){
	var txtFunFunFun=document.getElementById("txtFunFunFun");
	txtFunFunFun.value=this.strExampleTexturePutpixelFunction;
};
ShaderThinkpadManager.prototype.setTxtFunFunFunWithExampleSandcornTexturePutpixelFunction=function(){
	var txtFunFunFun=document.getElementById("txtFunFunFun");
	txtFunFunFun.value=this.strExampleSandcornTexturePutpixelFunction;
};
ShaderThinkpadManager.prototype.generateTextureFromPutpizelization_add=function(){
	var txtFunFunFun=document.getElementById("txtFunFunFun");
	var strTexturePutpixelFunction=txtFunFunFun.value;
	var strStartFrom="netspace.shaderThinkpad.texturePutpixelFunction=function()";
	if(strStartFrom!=strTexturePutpixelFunction.substring(0,strStartFrom.length)){
		alert("Function definition must start from: \n"+strStartFrom);
		return;
	}
	eval(strTexturePutpixelFunction);
	this.shaderThinkpad.texturePutpixelFunction();

	this.loadTextureSlot_add(this.shaderThinkpad.texturePutpixelData[0],this.shaderThinkpad.texturePutpixelData[1],this.shaderThinkpad.texturePutpixelData[2]);
};
ShaderThinkpadManager.prototype.generateTextureFromPutpizelization_replace=function(intTextureSlot){
	var txtFunFunFun=document.getElementById("txtFunFunFun");
	var strTexturePutpixelFunction=txtFunFunFun.value;
	var strStartFrom="netspace.shaderThinkpad.texturePutpixelFunction=function()";
	if(strStartFrom!=strTexturePutpixelFunction.substring(0,strStartFrom.length)){
		alert("Function definition must start from: \n"+strStartFrom);
		return;
	}
	eval(strTexturePutpixelFunction);
	this.shaderThinkpad.texturePutpixelFunction();
	this.loadTextureSlot_replace(this.shaderThinkpad.texturePutpixelData[0],this.shaderThinkpad.texturePutpixelData[1],this.shaderThinkpad.texturePutpixelData[2],intTextureSlot);
};
ShaderThinkpadManager.prototype.addTextureSlot=function(){
	var objArgs={};
	objArgs.varCols=null;
	objArgs.varRows=null;
	var ShaderThinkpadManager_sltTextureSlots=document.getElementById("ShaderThinkpadManager_sltTextureSlots");
	objArgs.func=function(imageData,intImageWidth,intImageHeight){netspace.shaderThinkpad.shaderThinkpadManager.loadTextureSlot_add(imageData,intImageWidth,intImageHeight);};
	//mhdmodiff
	netspace.openFile(null,objArgs);
};
ShaderThinkpadManager.prototype.replaceTextureSlot_file=function(intTextureSlot){
	var objArgs={};
	objArgs.varCols=null;
	objArgs.varRows=null;
	var ShaderThinkpadManager_sltTextureSlots=document.getElementById("ShaderThinkpadManager_sltTextureSlots");
	objArgs.func=function(imageData,intImageWidth,intImageHeight){netspace.shaderThinkpad.shaderThinkpadManager.loadTextureSlot_replace(imageData,intImageWidth,intImageHeight,intTextureSlot);};
	//mhdmodiff
	netspace.openFile(null,objArgs);
};
ShaderThinkpadManager.prototype.addCameraLookatScreenBlocksObject=function(){
	var vec3center=netspace.vec3.create(netspace.camera.vec3position);
	var vec3lookat=netspace.vec3.create(netspace.camera.vec3lookat);
	var intAxis=(Math.abs(vec3lookat[0])>=Math.abs(vec3lookat[1]))?((Math.abs(vec3lookat[0])>=Math.abs(vec3lookat[2]))?0:2):((Math.abs(vec3lookat[1])>=Math.abs(vec3lookat[2]))?1:2);
	var intWidth,intHeight;
	intWidth=Math.ceil(this.shaderThinkpad.lstIntWidths[0]/netspace.intQuickTextureHeight);
	intHeight=Math.ceil(this.shaderThinkpad.lstIntHeights[0]/netspace.intQuickTextureHeight);
	var intWidth05=0.5*intWidth;
	var intHeight05=0.5*intHeight;
	var lstReturn=netspace.signedxyzToijk_regions(netspace.camera.vec3position[0],netspace.camera.vec3position[1],netspace.camera.vec3position[2]);
	var xcenter=lstReturn[0];
	var ycenter=lstReturn[1];
	var zcenter=lstReturn[2];
	var xstart,ystart,zstart;
	var x_start,y_start,z_start;
	var xend,yend,zend;
	var x_end,y_end,z_end;
	var dx,dy,dz;
	switch(intAxis){
		case 0:
			xstart=xcenter;
			ystart=ycenter-intHeight05;
			zstart=zcenter+intWidth05;
			xend=xcenter;
			yend=ycenter+intHeight05;
			zend=zcenter-intWidth05;
			break;
		case 1:
			xstart=xcenter+intWidth05;
			ystart=ycenter;
			zstart=zcenter-intHeight05;
			xend=xcenter-intWidth05;
			yend=ycenter;
			zend=zcenter+intHeight05;
			break;
		case 2:
			xstart=xcenter+intWidth05;
			ystart=ycenter-intHeight05;
			zstart=zcenter;
			xend=xcenter-intWidth05;
			yend=ycenter+intHeight05;
			zend=zcenter;
			break;
	}
	if(xstart<xend)
		xend-=1;
	if(xstart>xend)
		xstart-=1;
	if(ystart<yend)
		yend-=1;
	if(ystart>yend)
		ystart-=1;
	if(zstart<zend)
		zend-=1;
	if(zstart>zend)
		zstart-=1;
	dx=(xstart<=xend)?1:-1;
	dy=(ystart<=yend)?1:-1;
	dz=(zstart<=zend)?1:-1;
	x_start=(xstart<=xend)?xstart:xend;	
	x_end=(xstart<=xend)?xend:xstart;	
	y_start=(ystart<=yend)?ystart:yend;	
	y_end=(ystart<=yend)?yend:ystart;	
	z_start=(zstart<=zend)?zstart:zend;	
	z_end=(zstart<=zend)?zend:zstart;	
	var cmpi0=(xstart<=xend)?function(c){return c<=xend;}:function(c){return c>=xend;};
	var cmpj0=(ystart<=yend)?function(c){return c<=yend;}:function(c){return c>=yend;};
	var cmpk0=(zstart<=zend)?function(c){return c<=zend;}:function(c){return c>=zend;};
	var intBlock=27;
	for(var j0=ystart;true==cmpj0(j0);j0+=dy)
		for(var k0=zstart;true==cmpk0(k0);k0+=dz){
			for(var i0=xstart;true==cmpi0(i0);i0+=dx)
				netspace.put3dpixel(i0,j0,k0,intBlock++);
		}
};

/*
var loadComputer=function(){
	netspace.computer=new Computer([]);
	netspace.computer.inits();
	netspace.computer.loadLaptop_input();
	return netspace.computer;
};
*/
Computer.prototype.loadShaderThinkpad=function(){
	if(undefined==netspace)
		return;
	if(undefined==netspace.computer){
		alert("Load computer extension first - shaderThinkpad is compatible only with computer.");
		return;
	}
	netspace.shaderThinkpad=new ShaderThinkpad(false,null);
	if(false==netspace.chkShaderThinkpad.checked)
		netspace.chkShaderThinkpad.checked=true;
	netspace.computer.lstConsoleGray=netspace.shaderThinkpad.shaderThinkpadManager.lstConsoleGrayWith;
};

export{Computer,Program_Bash,Program_SnakeGame,Program_BinarySnakeGame,Program_DictionaryTraining,Program_Terminal,XWindow,Program_startx,Program_txtFunFunFun,TextWindow,InchesKeyboard,Program_TextEditor,ShaderThinkpad,ShaderThinkpadManager}
